{"version":3,"sources":["../build/node_modules/browser-pack/_prelude.js","../build/dist/bundle.compiled.js","../build/node_modules/es6-promise/dist/es6-promise.js","../build/node_modules/process/browser.js","../build/node_modules/webrtc-adapter/adapter.js","../build/providers/core/core.console.js","../build/providers/core/core.crypto.js","../build/providers/core/core.echo.js","../build/providers/core/core.oauth.js","../build/providers/core/core.peerconnection.js","../build/providers/core/core.rtcdatachannel.js","../build/providers/core/core.rtcpeerconnection.js","../build/providers/core/core.storage.js","../build/providers/core/core.unprivileged.js","../build/providers/core/core.view.js","../build/providers/core/core.websocket.js","../build/providers/core/core.xhr.js","../build/providers/oauth/oauth.localpageauth.js","../build/providers/oauth/oauth.remotepageauth.js","../build/src/api.js","../build/src/bundle.js","../build/src/consumer.js","../build/src/debug.js","../build/src/entry.js","../build/src/hub.js","../build/src/link.js","../build/src/link/worker.js","../build/src/manager.js","../build/src/module.js","../build/src/moduleinternal.js","../build/src/policy.js","../build/src/provider.js","../build/src/proxy/apiInterface.js","../build/src/proxy/eventInterface.js","../build/src/proxybinder.js","../build/src/resource.js","../build/src/util.js","../build/src/util/workerEntry.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","name","api","log","type","value","debug","info","warn","error","getRandomBytes","ret","setup","send","message","createChannel","channel","identifier","bindChannel","getId","getLogger","initiateOAuth","redirect","state","err","errcode","launchAuthFlow","channelLabel","text","binary","buffer","onReceived","openDataChannel","closeDataChannel","onOpenDataChannel","channelId","onCloseDataChannel","getBufferedAmount","getInfo","createOffer","offerToReceiveVideo","offerToReceiveAudio","voiceActivityDetection","iceRestart","sdp","close","onClose","constructor","getLabel","getOrdered","getMaxPacketLifeTime","getMaxRetransmits","getProtocol","getNegotiated","getReadyState","onopen","onerror","onclose","onmessage","getBinaryType","setBinaryType","sendBuffer","iceServers","urls","username","credential","iceTransports","peerIdentity","createAnswer","setLocalDescription","getLocalDescription","setRemoteDescription","getRemoteDescription","getSignalingState","updateIce","addIceCandidate","candidate","sdpMid","sdpMLineIndex","getIceGatheringState","getIceConnectionState","getConfiguration","getLocalStreams","getRemoteStreams","getStreamById","addStream","removeStream","createDataChannel","ordered","maxPacketLifeTime","maxRetransmits","protocol","negotiated","id","ondatachannel","getStats","onnegotiationneeded","onicecandidate","onsignalingstatechange","onaddstream","stream","onremovestream","oniceconnectionstatechange","keys","get","set","remove","clear","connected","localAddress","localPort","peerAddress","peerPort","ERRCODE","SUCCESS","UNKNOWN","ALREADY_CONNECTED","INVALID_ARGUMENT","TIMED_OUT","NOT_CONNECTED","NETWORK_CHANGED","CONNECTION_CLOSED","CONNECTION_RESET","CONNECTION_REFUSED","CONNECTION_FAILED","NAME_NOT_RESOLVED","INTERNET_DISCONNECTED","ADDRESS_INVALID","ADDRESS_UNREACHABLE","HOST_UNREACHABLE","onDisconnect","connect","secure","pause","resume","prepareSecure","write","onData","data","listen","onConnection","socket","host","port","ALREADY_BOUND","ALREADY_CLOSED","SEND_FAILED","bind","sendTo","destroy","resultCode","address","show","isSecure","postMessage","onMessage","onOpen","onError","reason","wasClean","open","string","blob","abort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","getResponse","object","getResponseText","getResponseURL","getResponseType","setResponseType","getStatus","getStatusText","getTimeout","setTimeout","getWithCredentials","setWithCredentials","onloadstart","lengthComputable","loaded","total","onprogress","onabort","onload","ontimeout","onloadend","onreadystatechange","onuploadloadstart","onuploadprogress","onuploadabort","onuploaderror","onuploadload","onuploadtimeout","onuploadloadend","onuploadreadystatechange","OFFLINE","MALFORMEDPARAMETERS","LOGIN_BADCREDENTIALS","LOGIN_FAILEDCONNECTION","LOGIN_ALREADYONLINE","LOGIN_OAUTHERROR","SEND_INVALIDDESTINATION","STATUS","ONLINE","ONLINE_WITH_OTHER_APP","login","agent","version","url","interactive","rememberLogin","userId","clientId","status","lastUpdated","lastSeen","clearCachedCredentials","getClients","getUsers","sendMessage","logout","from","onUserProfile","imageData","onClientState","scope","SESSION","DEVICE_LOCAL","USER_LOCAL","SHARED","tag","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","process","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","lib$es6$promise$asap$$useMessageChannel","MessageChannel","port1","port2","lib$es6$promise$asap$$useSetTimeout","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertx","vertx","runOnLoop","runOnContext","lib$es6$promise$then$$then","onFulfillment","onRejection","parent","this","child","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$PROMISE_ID","lib$es6$promise$$internal$$makePromise","_state","arguments","lib$es6$promise$$internal$$invokeCallback","_result","lib$es6$promise$$internal$$subscribe","lib$es6$promise$promise$resolve$$resolve","Constructor","promise","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","then","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$fulfill","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","lib$es6$promise$$internal$$FULFILLED","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$then$$default","resolve","lib$es6$promise$promise$resolve$$default","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","subscribers","settled","detail","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$$internal$$nextId","lib$es6$promise$$internal$$id","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","reject","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","lib$es6$promise$enumerator$$Enumerator","input","_instanceConstructor","_input","_remaining","Array","_enumerate","lib$es6$promise$enumerator$$validationError","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","Math","random","substring","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$reject$$default","all","race","_setScheduler","_setAsap","_asap","catch","_eachEntry","entry","c","_settledAt","_willSettleAt","enumerator","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","cachedSetTimeout","len","run","cachedClearTimeout","Item","fun","array","noop","clearTimeout","args","push","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","myRTCPeerConnection","myRTCSessionDescription","myRTCIceCandidate","renameIceURLs","config","forEach","server","fixChromeStatsResponse","response","standardReport","reports","result","report","standardStats","timestamp","names","stat","fixFirefoxStatsResponse","sessionHasData","desc","hasData","prefix","split","line","slice","RTCPeerConnection","mozRTCPeerConnection","configuration","constraints","pc","boundGetStats","selector","successCallback","failureCallback","successCallbackWrapper","firefoxStatsResponse","dataEnabled","boundCreateDataChannel","label","dataChannelDict","dc","localDescription","remoteDescription","event","Event","webkitRTCPeerConnection","chromeStatsResponse","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","util","Logger_console","cap","level","console","handleEvents","print","severity","source","msg","arr","freedom","unshift","maxLogLevel","freedomDump","dump","toUpperCase","join","continuation","provider","flags","Core_crypto","dispatchEvent","number","Uint8Array","crypto","getRandomValues","Echo_unprivileged","mod","Core","core","controlChannel","request","proxy","chan","m","str","OAuth","handlers","ongoing","register","boundHandlers","reset","redirectURIs","authUrl","stateObj","hasOwnProperty","SimpleDataPeer","peerName","stunServers","dataChannelCallbacks","mocks","channels","onConnectedQueue","optional","DtlsSrtpKeyAgreement","sendSignalMessage","addEventListener","onIceCallback","onNegotiationNeeded","onDataChannel","signalingState","pcState","SimpleDataPeerState","CONNECTED","map","DISCONNECTED","PeerConnection","portModule","freedomModule","signallingChannel","peer","CONNECTING","constaints","runWhenConnected","func","dataChannel","addDataChannel","negotiateConnection","closeChannel","bufferedAmount","setSendSignalMessage","sendSignalMessageFn","handleSignalMessage","messageText","ice_candidate","json","JSON","parse","onDescription","isClosed","callbacks","readyState","onOpenFn","onCloseFn","onMessageFn","onErrorFn","description","stringify","logSuccess","op","logFail","onSignalingStateChange","signallingChannelId","initiateConnection","openDataChannelContinuation","ArrayBuffer","Blob","success","sendInfo","objToSend","eventNames","unAttachedChannels","pendingEvents","allocateChannel","eventName","handler","currentHandler","RTCDataChannelAdapter","dispatchEvents","Connection","drainPendingEvents","manageEvents","attach","binaryType","Components","myData","utils","cloneInto","allocate","wrtcClass","PromiseCompat","DataChannel","RTCPeerConnectionAdapter","adapter","connection","events","iceGatheringState","iceConnectionState","String","style","setImpl","impl","Storage_unprivileged","localStorage","key","val","getItem","setItem","removeItem","EventInterface","Consumer","Core_unprivileged","manager","unboundChannels","contextId","moduleInternal","getChannel","isInModule","delegate","flow","iface","getProxyInterface","doClose","remote","reply","manifest","toBind","newSource","createLink","toDelegate","p","cb","hub","getDestination","getInterface","dependencyName","registerId","setId","Core_View","listener","active","page","resources","root","frame","container","body","getElementById","createElement","width","height","display","appendChild","setAttribute","border","background","src","contentWindow","removeChild","removeEventListener","views","toResolve","main","files","fname","resource","manifestId","PageProvider","WSHandle","nodeStyle","WS","protocols","WSImplementation","isNode","WebSocket","websocket","SyntaxError","toSend","errorCode","setSocket","XhrClass","XhrProvider","XMLHttpRequest","_dispatchEvent","_xhr","_events","_setupListeners","method","async","user","password","header","mime","responseType","responseText","responseURL","statusText","withCredentials","wc","upload","oAuthRedirectId","loadedOnStartup","TIMEOUT","location","href","indexOf","Date","LocalPageAuth","listeners","here","pathname","storageListener","RemotePageAuth","hasCredentials","Api","apis","providers","waiters","definition","inst","getCore","provideCore","cleanup","prop","doReject","waiter","Bundle","interfaces","registry","bundle","interfaceCls","nextId","ifaces","closeHandlers","errorHandlers","emits","reverse","emitChannel","to","teardown","eachProp","Iface","getInterfaceConstructor","getListener","instance","obj","binder","doEmit","messageToPortable","template","externals","conform","portableToMessage","streams","separate","Number","Boolean","makeArrayBuffer","thing","DataView","recursiveFreezeObject","k","defineProperty","writable","enumerable","Debug","logger","LEVELS","setLogger","format","argarr","alist","quiet","splice","getLoggingShim","asyncMethod","methods","backing","item","mthd","freedomGlobal","Hub","Manager","Policy","ProxyBinder","Resource","getGlobal","context","policy","link","Port","site_cfg","moduleContext","isModule","isModuleContext","mixin","substr","resolvers","portType","fallbackLogger","getIface","canonical_manifest","bindDefault","external","apps","routes","destination","app","trace","action","getSource","force","deregister","install","route","generateRoute","uninstall","Link","deliverMessage","start","addErrorHandler","emitMessage","WorkerLink","setupListener","setupWorker","stop","onMsg","worker","Worker","terminate","ModuleInternal","controlFlows","dataFlows","reverseFlowMap","origin","reverseFlow","overrideDest","addResolver","addRetriever","service","removeLink","getPort","portId","lineage","destName","toDest","outgoingName","outgoing","rflow","forgetFlow","Provider","Module","manifestURL","creator","externalPortMap","internalPortMap","dependantChannels","dependencyUrls","pendingMessages","started","dependencies","drainPendingMessages","deregisterFlow","provides","modInternal","addPendingMessage","internal","loadLinks","appId","addDependency","dep","updateEnv","permissions","loadManifest","metadata","icon","manifests","pendingPorts","requests","unboundPorts","updateManifest","defaultPort","externalChannel","objects","mapProxies","generateEnv","loadScripts","script","items","def","exp","manifestPredicate","onManifest","getExternal","CoreProv","provideAsynchronous","getLoggerSync","getAPI","proxies","seen","scripts","scripts_count","load","importer","next","tryLoad","stack","runtimes","policies","pending","add","defaultPolicy","defaultConstraints","isolation","placement","overlay","runtime","findDestination","isRunning","fullMatch","okay","j","modules","getContents","modFingerprint","base","mode","synchronous","providerCls","asynchronous","promises","getProvider","onmsg","sanityCheck","provideSynchronous","prov","providePromises","ids","BoundClass","ev","returnPromise","reqId","e1","e2","e3","ApiInterface","inflight","emitter","thisReq","reckless","apiProvider","httpResolver","nullResolver","contentRetrievers","http","xhrRetriever","https","chrome-extension","chrome","gopher","manifestRetriever","firstPromise","errors","eachReverse","proto","retriever","hasScheme","removeRelativePath","toRemove","idx","replace","charAt","shift","dirname","protocolIdx","pathIdx","path","lastIndexOf","ref","ary","hasProp","target","guid","domain","randomBytes","ceil","str2ab","bufferView","Uint16Array","charCodeAt","ab2str","fromCharCode","filter","eventState","DEBUG_BACKREF","multiple","maybemultiple","single","maybesingle","list","predicate","getBlob","WebKitBlobBuilder","builder","append","getElementsByTagName","getFreedomScript","currentScript","querySelector","oauth"],"mappings":"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","file":"freedom.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = [{\"name\":\"console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.crypto\",\"api\":{\"getRandomBytes\":{\"type\":\"method\",\"value\":[\"number\"],\"ret\":\"buffer\"}}},{\"name\":\"core.echo\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"message\":{\"type\":\"event\",\"value\":\"string\"}}},{\"name\":\"core\",\"api\":{\"createChannel\":{\"type\":\"method\",\"value\":[],\"ret\":{\"channel\":\"proxy\",\"identifier\":\"string\"}},\"bindChannel\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getLogger\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"require\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"proxy\"}}},{\"name\":\"core.oauth\",\"api\":{\"initiateOAuth\":{\"type\":\"method\",\"value\":[[\"array\",\"string\"]],\"ret\":{\"redirect\":\"string\",\"state\":\"string\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"launchAuthFlow\":{\"type\":\"method\",\"value\":[\"string\",{\"redirect\":\"string\",\"state\":\"string\"},\"boolean\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"core.peerconnection\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"string\",[\"array\",\"string\"],\"boolean\"]},\"send\":{\"type\":\"method\",\"value\":[{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}]},\"onReceived\":{\"type\":\"event\",\"value\":{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"openDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"closeDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"onOpenDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"onCloseDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveVideo\":\"number\",\"offerToReceiveAudio\":\"number\",\"voiceActivityDetection\":\"boolean\",\"iceRestart\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[]},\"onClose\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"core.rtcdatachannel\",\"api\":{\"constructor\":{\"value\":[\"string\"]},\"getLabel\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getOrdered\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getMaxPacketLifeTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getMaxRetransmits\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getProtocol\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getNegotiated\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"onopen\":{\"type\":\"event\",\"value\":[]},\"onerror\":{\"type\":\"event\",\"value\":[]},\"onclose\":{\"type\":\"event\",\"value\":[]},\"close\":{\"type\":\"method\",\"value\":[]},\"onmessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"buffer\":\"buffer\"}},\"getBinaryType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setBinaryType\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"sendBuffer\":{\"type\":\"method\",\"value\":[\"buffer\"]}}},{\"name\":\"core.rtcpeerconnection\",\"api\":{\"constructor\":{\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}]},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveAudio\":\"number\",\"offerToReceiveVideo\":\"number\",\"iceRestart\":\"boolean\",\"voiceActivityDetection\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"createAnswer\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setLocalDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}]},\"getLocalDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setRemoteDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}],\"ret\":{}},\"getRemoteDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"getSignalingState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"updateIce\":{\"type\":\"method\",\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}],\"ret\":{}},\"addIceCandidate\":{\"type\":\"method\",\"value\":[{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}],\"ret\":{}},\"getIceGatheringState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getIceConnectionState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getConfiguration\":{\"type\":\"method\",\"value\":[],\"ret\":{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}},\"getLocalStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getRemoteStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getStreamById\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"addStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"removeStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":{}},\"createDataChannel\":{\"type\":\"method\",\"value\":[\"string\",{\"ordered\":\"boolean\",\"maxPacketLifeTime\":\"number\",\"maxRetransmits\":\"number\",\"protocol\":\"string\",\"negotiated\":\"boolean\",\"id\":\"number\"}],\"ret\":\"string\"},\"ondatachannel\":{\"type\":\"event\",\"value\":{\"channel\":\"string\"}},\"getStats\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"object\"},\"onnegotiationneeded\":{\"type\":\"event\",\"value\":[]},\"onicecandidate\":{\"type\":\"event\",\"value\":{\"candidate\":{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}}},\"onsignalingstatechange\":{\"type\":\"event\",\"value\":[]},\"onaddstream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"onremovestream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"oniceconnectionstatechange\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.storage\",\"api\":{\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\"},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"clear\":{\"type\":\"method\",\"value\":[]}}},{\"name\":\"core.tcpsocket\",\"api\":{\"constructor\":{\"value\":[\"number\"]},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"connected\":\"boolean\",\"localAddress\":\"string\",\"localPort\":\"number\",\"peerAddress\":\"string\",\"peerPort\":\"number\"}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_CONNECTED\":\"Socket already connected\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"TIMED_OUT\":\"Timed out\",\"NOT_CONNECTED\":\"Socket not connected\",\"NETWORK_CHANGED\":\"Network changed\",\"CONNECTION_CLOSED\":\"Connection closed gracefully\",\"CONNECTION_RESET\":\"Connection reset\",\"CONNECTION_REFUSED\":\"Connection refused\",\"CONNECTION_FAILED\":\"Connection failed\",\"NAME_NOT_RESOLVED\":\"DNS lookup failed\",\"INTERNET_DISCONNECTED\":\"Cannot reach any network\",\"ADDRESS_INVALID\":\"Invalid address\",\"ADDRESS_UNREACHABLE\":\"No route to host\",\"HOST_UNREACHABLE\":\"SOCKS proxy server could not reach host\"}},\"close\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onDisconnect\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"connect\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"secure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"pause\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"resume\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"prepareSecure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"write\":{\"type\":\"method\",\"value\":[\"buffer\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"data\":\"buffer\"}},\"listen\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onConnection\":{\"type\":\"event\",\"value\":{\"socket\":\"number\",\"host\":\"string\",\"port\":\"number\"}}}},{\"name\":\"core.udpsocket\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_BOUND\":\"Socket already bound\",\"ALREADY_CLOSED\":\"Socket already closed\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"NETWORK_CHANGED\":\"Network changed\",\"SEND_FAILED\":\"Send failed\"}},\"bind\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"localAddress\":\"string\",\"localPort\":\"number\"}},\"sendTo\":{\"type\":\"method\",\"value\":[\"buffer\",\"string\",\"number\"],\"ret\":\"number\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"destroy\":{\"type\":\"method\",\"value\":[]},\"onData\":{\"type\":\"event\",\"value\":{\"resultCode\":\"number\",\"address\":\"string\",\"port\":\"number\",\"data\":\"buffer\"}}}},{\"name\":\"core.view\",\"api\":{\"show\":{\"type\":\"method\",\"value\":[\"string\"]},\"isSecure\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"close\":{\"type\":\"method\",\"value\":[]},\"postMessage\":{\"type\":\"method\",\"value\":[\"object\"]},\"message\":{\"type\":\"event\",\"value\":\"object\"},\"onClose\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.websocket\",\"api\":{\"constructor\":{\"value\":[\"string\",[\"array\",\"string\"]]},\"send\":{\"type\":\"method\",\"value\":[{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"close\":{\"type\":\"method\",\"value\":[\"number\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"onOpen\":{\"type\":\"event\",\"value\":[]},\"onError\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onClose\":{\"type\":\"event\",\"value\":{\"code\":\"number\",\"reason\":\"string\",\"wasClean\":\"boolean\"}}}},{\"name\":\"core.xhr\",\"api\":{\"open\":{\"type\":\"method\",\"value\":[\"string\",\"string\",\"boolean\",\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[{\"string\":\"string\",\"buffer\":\"buffer\",\"blob\":\"blob\"}]},\"abort\":{\"type\":\"method\",\"value\":[]},\"getResponseHeader\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"getAllResponseHeaders\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setRequestHeader\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"overrideMimeType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getResponse\":{\"type\":\"method\",\"value\":[],\"ret\":{\"string\":\"string\",\"buffer\":\"buffer\",\"object\":\"object\"}},\"getResponseText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseURL\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setResponseType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getStatus\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getStatusText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getTimeout\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"setTimeout\":{\"type\":\"method\",\"value\":[\"number\"]},\"getWithCredentials\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"setWithCredentials\":{\"type\":\"method\",\"value\":[\"boolean\"]},\"onloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onerror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"ontimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onreadystatechange\":{\"type\":\"event\",\"value\":{}},\"onuploadloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploaderror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadtimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadreadystatechange\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"social\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"User is currently offline\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\",\"LOGIN_BADCREDENTIALS\":\"Error authenticating with server\",\"LOGIN_FAILEDCONNECTION\":\"Error connecting to server\",\"LOGIN_ALREADYONLINE\":\"User is already logged in\",\"LOGIN_OAUTHERROR\":\"OAuth Error\",\"SEND_INVALIDDESTINATION\":\"Message sent to an invalid destination\"}},\"STATUS\":{\"type\":\"constant\",\"value\":{\"OFFLINE\":\"OFFLINE\",\"ONLINE\":\"ONLINE\",\"ONLINE_WITH_OTHER_APP\":\"ONLINE_WITH_OTHER_APP\"}},\"login\":{\"type\":\"method\",\"value\":[{\"agent\":\"string\",\"version\":\"string\",\"url\":\"string\",\"interactive\":\"boolean\",\"rememberLogin\":\"boolean\"}],\"ret\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clearCachedCredentials\":{\"type\":\"method\",\"value\":[]},\"getClients\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getUsers\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"sendMessage\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"logout\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"from\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"message\":\"string\"}},\"onUserProfile\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"lastUpdated\":\"number\",\"name\":\"string\",\"url\":\"string\",\"imageData\":\"string\"}},\"onClientState\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"}}}},{\"name\":\"storage\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"storebuffer\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"transport\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"proxy\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"tag\":\"string\",\"data\":\"buffer\"}},\"onClose\":{\"type\":\"event\",\"value\":[]}}}];\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.2.1\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n    function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n      var parent = this;\n\n      var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\n      if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {\n        lib$es6$promise$$internal$$makePromise(child);\n      }\n\n      var state = parent._state;\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$es6$promise$asap$$asap(function(){\n          lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);\n        });\n      } else {\n        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$es6$promise$then$$default &&\n          constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    var lib$es6$promise$$internal$$id = 0;\n    function lib$es6$promise$$internal$$nextId() {\n      return lib$es6$promise$$internal$$id++;\n    }\n\n    function lib$es6$promise$$internal$$makePromise(promise) {\n      promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;\n      promise._state = undefined;\n      promise._result = undefined;\n      promise._subscribers = [];\n    }\n\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        return new Constructor(function(resolve, reject) {\n          reject(new TypeError('You must pass an array to race.'));\n        });\n      } else {\n        return new Constructor(function(resolve, reject) {\n          var length = entries.length;\n          for (var i = 0; i < length; i++) {\n            Constructor.resolve(entries[i]).then(resolve, reject);\n          }\n        });\n      }\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();\n      this._result = this._state = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$es6$promise$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {\n        lib$es6$promise$$internal$$makePromise(this.promise);\n      }\n\n      if (lib$es6$promise$utils$$isArray(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._result = new Array(this.length);\n\n        if (this.length === 0) {\n          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());\n      }\n    }\n\n    function lib$es6$promise$enumerator$$validationError() {\n      return new Error('Array Methods must be provided an Array');\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var input   = this._input;\n\n      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$es6$promise$promise$resolve$$default) {\n        var then = lib$es6$promise$$internal$$getThen(entry);\n\n        if (then === lib$es6$promise$then$$default &&\n            entry._state !== lib$es6$promise$$internal$$PENDING) {\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = entry;\n        } else if (c === lib$es6$promise$promise$$default) {\n          var promise = new c(lib$es6$promise$$internal$$noop);\n          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        this._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = value;\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","// shim for using process in browser\n\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n  try {\n    cachedSetTimeout = setTimeout;\n  } catch (e) {\n    cachedSetTimeout = function () {\n      throw new Error('setTimeout is not defined');\n    }\n  }\n  try {\n    cachedClearTimeout = clearTimeout;\n  } catch (e) {\n    cachedClearTimeout = function () {\n      throw new Error('clearTimeout is not defined');\n    }\n  }\n} ())\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = cachedSetTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    cachedClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        cachedSetTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*jslint node:true*/\n/*globals RTCPeerConnection, mozRTCPeerConnection, webkitRTCPeerConnection */\n/*globals RTCSessionDescription, mozRTCSessionDescription */\n/*globals RTCIceCandidate, mozRTCIceCandidate */\n'use strict';\n\nvar myRTCPeerConnection = null;\nvar myRTCSessionDescription = null;\nvar myRTCIceCandidate = null;\n\nvar renameIceURLs = function (config) {\n  if (!config) {\n    return;\n  }\n  if (!config.iceServers) {\n    return config;\n  }\n  config.iceServers.forEach(function (server) {\n    server.url = server.urls;\n    delete server.urls;\n  });\n  return config;\n};\n\nvar fixChromeStatsResponse = function(response) {\n  var standardReport = {};\n  var reports = response.result();\n  reports.forEach(function(report) {\n    var standardStats = {\n      id: report.id,\n      timestamp: report.timestamp,\n      type: report.type\n    };\n    report.names().forEach(function(name) {\n      standardStats[name] = report.stat(name);\n    });\n    standardReport[standardStats.id] = standardStats;\n  });\n\n  return standardReport;\n};\n\nvar fixFirefoxStatsResponse = function(response) {\n  // Giving the response directly to the callback gives an object w/o interface\n  // https://developer.mozilla.org/en-US/docs/Mozilla/WebIDL_bindings#ChromeOnly\n  var standardReport = {};\n  response.forEach(function (report) {\n    standardReport[report.id] = report;\n  });\n  return standardReport;\n};\n\nvar sessionHasData = function(desc) {\n  if (!desc) {\n    return false;\n  }\n  var hasData = false;\n  var prefix = 'm=application';\n  desc.sdp.split('\\n').forEach(function(line) {\n    if (line.slice(0, prefix.length) === prefix) {\n      hasData = true;\n    }\n  });\n  return hasData;\n};\n\n// Unify PeerConnection Object.\nif (typeof RTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = RTCPeerConnection;\n} else if (typeof mozRTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = function (configuration, constraints) {\n    // Firefox uses 'url' rather than 'urls' for RTCIceServer.urls\n    var pc = new mozRTCPeerConnection(renameIceURLs(configuration), constraints);\n\n    // Firefox stats response is only visible 'ChromeOnly' so process it here\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(firefoxStatsResponse) {\n        successCallback(fixFirefoxStatsResponse(firefoxStatsResponse));\n      };\n      boundGetStats(selector, successCallbackWrapper, failureCallback);\n    };\n\n    // Firefox doesn't fire 'onnegotiationneeded' when a data channel is created\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n    var dataEnabled = false;\n    var boundCreateDataChannel = pc.createDataChannel.bind(pc);\n    pc.createDataChannel = function(label, dataChannelDict) {\n      var dc = boundCreateDataChannel(label, dataChannelDict);\n      if (!dataEnabled) {\n        dataEnabled = true;\n        if (pc.onnegotiationneeded &&\n            !sessionHasData(pc.localDescription) &&\n            !sessionHasData(pc.remoteDescription)) {\n          var event = new Event('negotiationneeded');\n          pc.onnegotiationneeded(event);\n        }\n      }\n      return dc;\n    };\n\n    return pc;\n  };\n} else if (typeof webkitRTCPeerConnection !== 'undefined') {\n  // Chrome returns a nonstandard, non-JSON-ifiable response from getStats.\n  myRTCPeerConnection = function(configuration, constraints) {\n    var pc = new webkitRTCPeerConnection(configuration, constraints);\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(chromeStatsResponse) {\n        successCallback(fixChromeStatsResponse(chromeStatsResponse));\n      };\n      // Chrome also takes its arguments in the wrong order.\n      boundGetStats(successCallbackWrapper, failureCallback, selector);\n    };\n    return pc;\n  };\n}\n\n// Unify SessionDescrption Object.\nif (typeof RTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = RTCSessionDescription;\n} else if (typeof mozRTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = mozRTCSessionDescription;\n}\n\n// Unify IceCandidate Object.\nif (typeof RTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = RTCIceCandidate;\n} else if (typeof mozRTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = mozRTCIceCandidate;\n}\n\nexports.RTCPeerConnection = myRTCPeerConnection;\nexports.RTCSessionDescription = myRTCSessionDescription;\nexports.RTCIceCandidate = myRTCIceCandidate;\n","/*globals process, console */\n/*jslint indent:2,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A freedom.js logging provider that logs to chrome, firefox, and node consoles.\n * @Class Logger_console\n * @constructor\n * @private\n * @param {config: Object} cap Capabilities - console requires global config.\n */\nvar Logger_console = function (cap) {\n  this.level = (cap.config && cap.config.debug) || 'log';\n  this.console = (cap.config && cap.config.global.console);\n  util.handleEvents(this);\n};\n\n\n/**\n * Logging levels, for filtering output.\n * @private\n * @static\n */\nLogger_console.level = {\n  \"debug\": 0,\n  \"info\": 1,\n  \"log\": 2,\n  \"warn\": 3,\n  \"error\": 4\n};\n\n/**\n * Print a message with appropriate formatting.\n * @method print\n */\nLogger_console.prototype.print = function (severity, source, msg) {\n  var arr = msg;\n  if (typeof this.console === 'undefined' ||\n      this.console.freedom === true) {\n    return;\n  }\n  if (typeof arr === 'string') {\n    arr = [arr];\n  }\n  \n  if (Logger_console.level[this.level] !== undefined &&\n      Logger_console.level[severity] < Logger_console.level[this.level]) {\n    return;\n  }\n  \n  if (source) {\n    if (typeof process !== 'undefined' &&\n        {}.toString.call(process) === '[object process]') {\n      // Node.\n      arr.unshift('\\x1B[39m');\n      arr.unshift('\\x1B[31m' + source);\n    } else if (this.console.maxLogLevel) {\n      // Firefox in JSM context:\n      //   http://mxr.mozilla.org/mozilla-release/source/toolkit/devtools/Console.jsm\n      if (!this.console.freedomDump) {\n        this.console.freedomDump = this.console.dump;\n        this.console.dump = function() {};\n      }\n      this.console.freedomDump(source + ' ' + severity[0].toUpperCase() + ' ' +\n          arr.join(' ') + '\\n');\n    } else {\n      arr.unshift('color: none');\n      arr.unshift('color: red');\n      arr.unshift('%c' + source + '%c');\n    }\n  }\n\n  if (!this.console[severity] && this.console.log) {\n    severity = 'log';\n  }\n  this.console[severity].apply(this.console, arr);\n};\n\n/**\n * Log a message to the console.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.log = function (source, msg, continuation) {\n  this.print('log', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with debug priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.debug = function (source, msg, continuation) {\n  this.print('debug', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with info priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.info = function (source, msg, continuation) {\n  this.print('info', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with warn priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.warn = function (source, msg, continuation) {\n  this.print('warn', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with error priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.error = function (source, msg, continuation) {\n  this.print('error', source, msg);\n  continuation();\n};\n\n/** REGISTER PROVIDER **/\nexports.provider = Logger_console;\nexports.name = 'core.console';\nexports.flags = {config: true};\n","/*globals console, crypto */\n/*jslint indent:2, node:true */\nvar util = require('../../src/util');\n\n/**\n * A Core provider for getting cryptographically random buffers. This\n * functionality may not exist in all unpriviledged contexts - namely at this\n * point, firefox addon workers.\n * @Class Core_crypto\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Core_crypto = function(cap, dispatchEvent) {\n  'use strict';\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n};\n\n/**\n * Get a random buffer of some number of bytes.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\n Core_crypto.prototype.getRandomBytes = function(number, continuation) {\n   'use strict';\n   var buffer = new Uint8Array(number);\n   crypto.getRandomValues(buffer);\n   continuation(buffer.buffer);\n};\n\nexports.provider = Core_crypto;\nexports.name = \"core.crypto\";\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A minimal provider implementing the core.echo interface for interaction with\n * custom channels.  Primarily used for testing the robustness of the custom\n * channel implementation.\n * @Class Echo_unprivileged\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Echo_unprivileged = function(cap, dispatchEvent) {\n  this.mod = cap.module;\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n\n  // The Core object for managing channels.\n  this.mod.once('core', function(Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.mod.emit(this.mod.controlChannel, {\n    type: 'core request delegated to echo',\n    request: 'core'\n  });\n};\n\n/**\n * Setup the provider to echo on a specific proxy. Subsequent messages\n * From the custom channel bound here will be re-emitted as a message\n * from the provider.  Subsequent messages to the provider will be\n * emitted on the bound channel.\n * @param {Object} proxy The identifier for the custom channel to bind.\n * @param {Function} continuation Function to call when setup is complete.\n * @method setup\n */\nEcho_unprivileged.prototype.setup = function(proxy, continuation) {\n  continuation();\n  if (!this.core) {\n    this.dispatchEvent('message', 'no core available to setup proxy with at echo');\n    return;\n  }\n\n  this.core.bindChannel(proxy, function(chan) {\n    if (this.chan) {\n      this.chan.close();\n    }\n    this.chan = chan;\n    this.chan.onClose(function() {\n      delete this.chan;\n    }.bind(this));\n    this.dispatchEvent('message', 'channel bound to echo');\n    this.chan.on('message', function(m) {\n      this.dispatchEvent('message', 'from custom channel: ' + m);\n    }.bind(this));\n  }.bind(this));\n};\n\n/**\n * Send a message to the bound custom channel.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\nEcho_unprivileged.prototype.send = function(str, continuation) {\n  continuation();\n  if (this.chan) {\n    this.chan.emit('message', str);\n  } else {\n    this.dispatchEvent('message', 'no channel available');\n  }\n};\n\nexports.provider = Echo_unprivileged;\nexports.name = \"core.echo\";\nexports.flags = {module: true};\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true,node:true */\n\n/**\n * An oAuth meta-provider allowing multiple platform-dependant\n * oAuth implementations to serve as the redirectURL for an oAuth flow.\n * The core implementations are provided in providers/oauth, and are\n * supplemented in platform-dependent repositories.\n *\n */\nvar OAuth = function (handlers, cap, dispatchEvent) {\n  this.handlers = handlers;\n  this.dispatchEvent = dispatchEvent;\n  this.ongoing = {};\n};\n\n/**\n * Register oAuth handlers.\n * This method should be called before provider is used, and binds the current\n * oAuth provider to be associated with registered handlers. This is used so\n * that handlers which are registered by the user apply only the the freedom()\n * setup call they are associated with, while still being registered across\n * multiple instances of OAuth providers.\n *\n * @method register\n * @param {[constructor]} handlers\n * @private\n */\nOAuth.register = function (handlers) {\n  var i,\n      boundHandlers = [];\n  if (!handlers || !handlers.length) {\n    return OAuth.reset();\n  }\n\n  for (i = 0; i < handlers.length; i += 1) {\n    boundHandlers.push(new handlers[i]());\n  }\n  exports.provider = OAuth.bind(this, boundHandlers);\n};\n\n/**\n * Reset the oAuth provider registrations.\n * @method reset\n * @private\n */\nOAuth.reset = function () {\n  exports.provider = OAuth.bind(this, []);\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n */\nOAuth.prototype.initiateOAuth = function (redirectURIs, continuation) {\n  var promise, i, successCallback;\n  successCallback = function(result) {\n    this.ongoing[result.state] = this.handlers[i];\n    continuation(result);\n  }.bind(this);\n\n  for (i = 0; i < this.handlers.length; i += 1) {\n    if (this.handlers[i].initiateOAuth(redirectURIs, successCallback)) {\n      return;\n    }\n  }\n  //If here, we have no compatible providers\n  continuation(null, {\n    'errcode': 'UNKNOWN',\n    'message': 'No requested redirects can be handled.'\n  });\n  return;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive OAuth flow.\n *    Defaults to true.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nOAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive,\n                                          continuation) {\n  if (!this.ongoing.hasOwnProperty(stateObj.state)) {\n    continuation(undefined, {\n      'errcode': 'UNKNOWN',\n      'message': 'You must begin the oAuth flow with initiateOAuth first'\n    });\n    return;\n  }\n  if (interactive === undefined) {\n    interactive = true;\n  }\n  this.ongoing[stateObj.state].launchAuthFlow(\n      authUrl, stateObj, interactive, continuation);\n  delete this.ongoing[stateObj.state];\n};\n\nexports.register = OAuth.register;\nexports.reset = OAuth.reset;\nexports.provider = OAuth.bind(this, []);\nexports.name = 'core.oauth';\n","/*globals console, RTCPeerConnection, webkitRTCPeerConnection */\n/*globals mozRTCPeerConnection, RTCSessionDescription, RTCIceCandidate */\n/*globals mozRTCSessionDescription, mozRTCIceCandidate */\n/*globals ArrayBuffer, Blob */\n/*jslint indent:2,sloppy:true,node:true */\n/**\n * DataPeer - a class that wraps peer connections and data channels.\n */\n// TODO: check that Handling of pranswer is treated appropriately.\nvar SimpleDataPeerState = {\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED'\n};\n\nfunction SimpleDataPeer(peerName, stunServers, dataChannelCallbacks, mocks) {\n  var constraints,\n    config,\n    i;\n  this.peerName = peerName;\n  this.channels = {};\n  this.dataChannelCallbacks = dataChannelCallbacks;\n  this.onConnectedQueue = [];\n\n  if (typeof mocks.RTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mocks.RTCPeerConnection;\n  } else if (typeof webkitRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = webkitRTCPeerConnection;\n  } else if (typeof mozRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mozRTCPeerConnection;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCPeerConnection\");\n  }\n\n  if (typeof mocks.RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mocks.RTCSessionDescription;\n  } else if (typeof RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = RTCSessionDescription;\n  } else if (typeof mozRTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mozRTCSessionDescription;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCSessionDescription\");\n  }\n\n  if (typeof mocks.RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mocks.RTCIceCandidate;\n  } else if (typeof RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = RTCIceCandidate;\n  } else if (typeof mozRTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mozRTCIceCandidate;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCIceCandidate\");\n  }\n\n\n  constraints = {\n    optional: [{DtlsSrtpKeyAgreement: true}]\n  };\n  // A way to speak to the peer to send SDP headers etc.\n  this.sendSignalMessage = null;\n\n  this.pc = null;  // The peer connection.\n  // Get TURN servers for the peer connection.\n  config = {iceServers: []};\n  for (i = 0; i < stunServers.length; i += 1) {\n    config.iceServers.push({\n      'url' : stunServers[i]\n    });\n  }\n  this.pc = new this.RTCPeerConnection(config, constraints);\n  // Add basic event handlers.\n  this.pc.addEventListener(\"icecandidate\",\n                            this.onIceCallback.bind(this));\n  this.pc.addEventListener(\"negotiationneeded\",\n                            this.onNegotiationNeeded.bind(this));\n  this.pc.addEventListener(\"datachannel\",\n                            this.onDataChannel.bind(this));\n  this.pc.addEventListener(\"signalingstatechange\", function () {\n    // TODO: come up with a better way to detect connection.  We start out\n    // as \"stable\" even before we are connected.\n    // TODO: this is not fired for connections closed by the other side.\n    // This will be fixed in m37, at that point we should dispatch an onClose\n    // event here for freedom.transport to pick up.\n    if (this.pc.signalingState === \"stable\") {\n      this.pcState = SimpleDataPeerState.CONNECTED;\n      this.onConnectedQueue.map(function (callback) { callback(); });\n    }\n  }.bind(this));\n  // This state variable is used to fake offer/answer when they are wrongly\n  // requested and we really just need to reuse what we already have.\n  this.pcState = SimpleDataPeerState.DISCONNECTED;\n\n  // Note: to actually do something with data channels opened by a peer, we\n  // need someone to manage \"datachannel\" event.\n}\n\nSimpleDataPeer.prototype.createOffer = function (constaints, continuation) {\n  this.pc.createOffer(continuation, function () {\n    console.error('core.peerconnection createOffer failed.');\n  }, constaints);\n};\n\nSimpleDataPeer.prototype.runWhenConnected = function (func) {\n  if (this.pcState === SimpleDataPeerState.CONNECTED) {\n    func();\n  } else {\n    this.onConnectedQueue.push(func);\n  }\n};\n\nSimpleDataPeer.prototype.send = function (channelId, message, continuation) {\n  this.channels[channelId].send(message);\n  continuation();\n};\n\nSimpleDataPeer.prototype.openDataChannel = function (channelId, continuation) {\n  var dataChannel = this.pc.createDataChannel(channelId, {});\n  dataChannel.onopen = function () {\n    this.addDataChannel(channelId, dataChannel);\n    continuation();\n  }.bind(this);\n  dataChannel.onerror = function (err) {\n    //@(ryscheng) todo - replace with errors that work across the interface\n    console.error(err);\n    continuation(undefined, err);\n  };\n  // Firefox does not fire \"negotiationneeded\", so we need to\n  // negotate here if we are not connected.\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n  if (typeof mozRTCPeerConnection !== \"undefined\" &&\n      this.pcState === SimpleDataPeerState.DISCONNECTED) {\n    this.negotiateConnection();\n  }\n};\n\nSimpleDataPeer.prototype.closeChannel = function (channelId) {\n  if (this.channels[channelId] !== undefined) {\n    this.channels[channelId].close();\n    delete this.channels[channelId];\n  }\n};\n\nSimpleDataPeer.prototype.getBufferedAmount = function (channelId,\n                                                       continuation) {\n  if (this.channels[channelId] !== undefined) {\n    var dataChannel = this.channels[channelId];\n    return dataChannel.bufferedAmount;\n  }\n  throw new Error(\"No channel with id: \" + channelId);\n};\n\nSimpleDataPeer.prototype.setSendSignalMessage = function (sendSignalMessageFn) {\n  this.sendSignalMessage = sendSignalMessageFn;\n};\n\n// Handle a message send on the signalling channel to this peer.\nSimpleDataPeer.prototype.handleSignalMessage = function (messageText) {\n  //console.log(this.peerName + \": \" + \"handleSignalMessage: \\n\" + messageText);\n  var json = JSON.parse(messageText),\n    ice_candidate;\n\n  // TODO: If we are offering and they are also offerring at the same time,\n  // pick the one who has the lower randomId?\n  // (this.pc.signalingState == \"have-local-offer\" && json.sdp &&\n  //    json.sdp.type == \"offer\" && json.sdp.randomId < this.localRandomId)\n  if (json.sdp) {\n    // Set the remote description.\n    this.pc.setRemoteDescription(\n      new this.RTCSessionDescription(json.sdp),\n      // Success\n      function () {\n        //console.log(this.peerName + \": setRemoteDescription succeeded\");\n        if (this.pc.remoteDescription.type === \"offer\") {\n          this.pc.createAnswer(this.onDescription.bind(this),\n                               console.error);\n        }\n      }.bind(this),\n      // Failure\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setRemoteDescription failed:\", e);\n      }.bind(this)\n    );\n  } else if (json.candidate) {\n    // Add remote ice candidate.\n    //console.log(this.peerName + \": Adding ice candidate: \" + JSON.stringify(json.candidate));\n    ice_candidate = new this.RTCIceCandidate(json.candidate);\n    this.pc.addIceCandidate(ice_candidate);\n  } else {\n    console.warn(this.peerName + \": \" +\n        \"handleSignalMessage got unexpected message: \", messageText);\n  }\n};\n\n// Connect to the peer by the signalling channel.\nSimpleDataPeer.prototype.negotiateConnection = function () {\n  this.pcState = SimpleDataPeerState.CONNECTING;\n  this.pc.createOffer(\n    this.onDescription.bind(this),\n    function (e) {\n      console.error(this.peerName + \": \" +\n          \"createOffer failed: \", e.toString());\n      this.pcState = SimpleDataPeerState.DISCONNECTED;\n    }.bind(this)\n  );\n};\n\nSimpleDataPeer.prototype.isClosed = function () {\n  return !this.pc || this.pc.signalingState === \"closed\";\n};\n\nSimpleDataPeer.prototype.close = function () {\n  if (!this.isClosed()) {\n    this.pc.close();\n  }\n  //console.log(this.peerName + \": \" + \"Closed peer connection.\");\n};\n\nSimpleDataPeer.prototype.addDataChannel = function (channelId, channel) {\n  var callbacks = this.dataChannelCallbacks;\n  this.channels[channelId] = channel;\n\n  if (channel.readyState === \"connecting\") {\n    channel.onopen = callbacks.onOpenFn.bind(this, channel, {label: channelId});\n  }\n\n  channel.onclose = callbacks.onCloseFn.bind(this, channel, {label: channelId});\n\n  channel.onmessage = callbacks.onMessageFn.bind(this, channel,\n                                                 {label: channelId});\n\n  channel.onerror = callbacks.onErrorFn.bind(this, channel, {label: channel});\n};\n\n// When we get our description, we set it to be our local description and\n// send it to the peer.\nSimpleDataPeer.prototype.onDescription = function (description) {\n  if (this.sendSignalMessage) {\n    this.pc.setLocalDescription(\n      description,\n      function () {\n        //console.log(this.peerName + \": setLocalDescription succeeded\");\n        this.sendSignalMessage(JSON.stringify({'sdp': description}));\n      }.bind(this),\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setLocalDescription failed:\", e);\n      }.bind(this)\n    );\n  } else {\n    console.error(this.peerName + \": \" +\n        \"_onDescription: _sendSignalMessage is not set, so we did not \" +\n            \"set the local description. \");\n  }\n};\n\nSimpleDataPeer.prototype.onNegotiationNeeded = function (e) {\n  //console.log(this.peerName + \": \" + \"onNegotiationNeeded\",\n  //            JSON.stringify(this._pc), e);\n  if (this.pcState !== SimpleDataPeerState.DISCONNECTED) {\n    // Negotiation messages are falsely requested for new data channels.\n    //   https://code.google.com/p/webrtc/issues/detail?id=2431\n    // This code is a hack to simply reset the same local and remote\n    // description which will trigger the appropriate data channel open event.\n    // TODO: fix/remove this when Chrome issue is fixed.\n    var logSuccess = function (op) {\n      return function () {\n        //console.log(this.peerName + \": \" + op + \" succeeded \");\n      }.bind(this);\n    }.bind(this),\n      logFail = function (op) {\n        return function (e) {\n          //console.log(this.peerName + \": \" + op + \" failed: \" + e);\n        }.bind(this);\n      }.bind(this);\n    if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"offer\") {\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n    } else if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"answer\") {\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n    } else {\n      console.error(this.peerName + ', onNegotiationNeeded failed');\n    }\n    return;\n  }\n  this.negotiateConnection();\n};\n\nSimpleDataPeer.prototype.onIceCallback = function (event) {\n  if (event.candidate) {\n    // Send IceCandidate to peer.\n    //console.log(this.peerName + \": \" + \"ice callback with candidate\", event);\n    if (this.sendSignalMessage) {\n      this.sendSignalMessage(JSON.stringify({'candidate': event.candidate}));\n    } else {\n      console.warn(this.peerName + \": \" + \"_onDescription: _sendSignalMessage is not set.\");\n    }\n  }\n};\n\nSimpleDataPeer.prototype.onSignalingStateChange = function () {\n  //console.log(this.peerName + \": \" + \"onSignalingStateChange: \", this._pc.signalingState);\n  if (this.pc.signalingState === \"stable\") {\n    this.pcState = SimpleDataPeerState.CONNECTED;\n    this.onConnectedQueue.map(function (callback) { callback(); });\n  }\n};\n\nSimpleDataPeer.prototype.onDataChannel = function (event) {\n  this.addDataChannel(event.channel.label, event.channel);\n  // RTCDataChannels created by a RTCDataChannelEvent have an initial\n  // state of open, so the onopen event for the channel will not\n  // fire. We need to fire the onOpenDataChannel event here\n  // http://www.w3.org/TR/webrtc/#idl-def-RTCDataChannelState\n\n  // Firefox channels do not have an initial state of \"open\"\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=1000478\n  if (event.channel.readyState === \"open\") {\n    this.dataChannelCallbacks.onOpenFn(event.channel,\n                                       {label: event.channel.label});\n  }\n};\n\n// _signallingChannel is a channel for emitting events back to the freedom Hub.\nfunction PeerConnection(portModule, dispatchEvent,\n                        RTCPeerConnection, RTCSessionDescription,\n                        RTCIceCandidate) {\n  // Channel for emitting events to consumer.\n  this.dispatchEvent = dispatchEvent;\n\n  // a (hopefully unique) ID for debugging.\n  this.peerName = \"p\" + Math.random();\n\n  // This is the portApp (defined in freedom/src/port-app.js). A way to speak\n  // to freedom.\n  this.freedomModule = portModule.module;\n\n  // For tests we may mock out the PeerConnection and\n  // SessionDescription implementations\n  this.RTCPeerConnection = RTCPeerConnection;\n  this.RTCSessionDescription = RTCSessionDescription;\n  this.RTCIceCandidate = RTCIceCandidate;\n\n  // This is the a channel to send signalling messages.\n  this.signallingChannel = null;\n\n  // The DataPeer object for talking to the peer.\n  this.peer = null;\n\n  // The Core object for managing channels.\n  this.freedomModule.once('core', function (Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.freedomModule.emit(this.freedomModule.controlChannel, {\n    type: 'core request delegated to peerconnection',\n    request: 'core'\n  });\n}\n\n// Start a peer connection using the given freedomChannelId as the way to\n// communicate with the peer. The argument |freedomChannelId| is a way to speak\n// to an identity provide to send them SDP headers negotiate the address/port to\n// setup the peer to peerConnection.\n//\n// options: {\n//   peerName: string,   // For pretty printing messages about this peer.\n//   debug: boolean           // should we add extra\n// }\nPeerConnection.prototype.setup = function (signallingChannelId, peerName,\n                                           stunServers, initiateConnection,\n                                           continuation) {\n  this.peerName = peerName;\n  var mocks = {RTCPeerConnection: this.RTCPeerConnection,\n               RTCSessionDescription: this.RTCSessionDescription,\n               RTCIceCandidate: this.RTCIceCandidate},\n    self = this,\n    dataChannelCallbacks = {\n      // onOpenFn is called at the point messages will actually get through.\n      onOpenFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onOpenDataChannel\",\n                         { channelId: info.label});\n      },\n      onCloseFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onCloseDataChannel\",\n                         { channelId: info.label});\n      },\n      // Default on real message prints it to console.\n      onMessageFn: function (dataChannel, info, event) {\n        if (event.data instanceof ArrayBuffer) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'buffer': event.data\n          });\n        } else if (event.data instanceof Blob) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'binary': event.data\n          });\n        } else if (typeof (event.data) === 'string') {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'text': event.data\n          });\n        }\n      },\n      // Default on error, prints it.\n      onErrorFn: function (dataChannel, info, err) {\n        console.error(dataChannel.peerName + \": dataChannel(\" +\n                      dataChannel.dataChannel.label + \"): error: \", err);\n      }\n    },\n    channelId,\n    openDataChannelContinuation;\n\n  this.peer = new SimpleDataPeer(this.peerName, stunServers,\n                                 dataChannelCallbacks, mocks);\n\n  // Setup link between Freedom messaging and _peer's signalling.\n  // Note: the signalling channel should only be sending receiveing strings.\n  this.core.bindChannel(signallingChannelId, function (channel) {\n    this.signallingChannel = channel;\n    this.peer.setSendSignalMessage(function (msg) {\n      this.signallingChannel.emit('message', msg);\n    }.bind(this));\n    this.signallingChannel.on('message',\n        this.peer.handleSignalMessage.bind(this.peer));\n    this.signallingChannel.emit('ready');\n    if (!initiateConnection) {\n      this.peer.runWhenConnected(continuation);\n    }\n  }.bind(this));\n\n  if (initiateConnection) {\n    // Setup a connection right away, then invoke continuation.\n    console.log(this.peerName + ' initiating connection');\n    channelId = 'hello' + Math.random().toString();\n    openDataChannelContinuation = function (success, error) {\n      if (error) {\n        continuation(undefined, error);\n      } else {\n        this.closeDataChannel(channelId, continuation);\n      }\n    }.bind(this);\n    this.openDataChannel(channelId, openDataChannelContinuation);\n  }\n};\n\nPeerConnection.prototype.createOffer = function (constraints, continuation) {\n  this.peer.createOffer(constraints, continuation);\n};\n\n// TODO: delay continuation until the open callback from _peer is called.\nPeerConnection.prototype.openDataChannel = function (channelId, continuation) {\n  this.peer.openDataChannel(channelId, continuation);\n};\n\nPeerConnection.prototype.closeDataChannel = function (channelId, continuation) {\n  this.peer.closeChannel(channelId);\n  continuation();\n};\n\n// Called to send a message over the given datachannel to a peer. If the data\n// channel doesn't already exist, the DataPeer creates it.\nPeerConnection.prototype.send = function (sendInfo, continuation) {\n  var objToSend = sendInfo.text || sendInfo.buffer || sendInfo.binary;\n  if (typeof objToSend === 'undefined') {\n    console.error(\"No valid data to send has been provided.\", sendInfo);\n    return;\n  }\n  //DEBUG\n  // objToSend = new ArrayBuffer(4);\n  //DEBUG\n  this.peer.send(sendInfo.channelLabel, objToSend, continuation);\n};\n\nPeerConnection.prototype.getBufferedAmount = function (channelId, continuation) {\n  continuation(this.peer.getBufferedAmount(channelId));\n};\n\nPeerConnection.prototype.close = function (continuation) {\n  if (this.peer.isClosed()) {\n    // Peer already closed, run continuation without dispatching event.\n    continuation();\n    return;\n  }\n  this.peer.close();\n  this.dispatchEvent(\"onClose\");\n  continuation();\n};\n\nexports.provider = PeerConnection;\nexports.name = 'core.peerconnection';\nexports.flags = {module: true};\n","/*jslint sloppy:true, node:true */\n/*globals Components, ArrayBuffer */\n\nvar util = require('../../src/util');\n\nvar eventNames = [\n  'onopen',\n  'onerror',\n  'onclose',\n  'onmessage'\n];\n\nvar unAttachedChannels = {};\nvar pendingEvents = {};\nvar allocateChannel = function (dataChannel) {\n  var id = util.getId();\n  unAttachedChannels[id] = dataChannel;\n  pendingEvents[id] = [];\n  eventNames.forEach(function(eventName) {\n    // This listener will be overridden (re-set) after the constructor runs.\n    var handler = function(event) {\n      var currentHandler = dataChannel[eventName];\n      if (currentHandler === handler) {\n        pendingEvents[id].push(event);\n      } else if (typeof currentHandler === 'function') {\n        // If an event somehow runs on this event handler after it has been\n        // replaced, forward that event to the new event handler.\n        currentHandler(event);\n      } else {\n        throw new Error('No handler for ' + event.type + ' event');\n      }\n    };\n    dataChannel[eventName] = handler;\n  });\n  return id;\n};\n\nvar RTCDataChannelAdapter = function (cap, dispatchEvents, id) {\n  this.dispatchEvent = dispatchEvents;\n  if (!unAttachedChannels[id]) {\n    console.warn('Invalid ID, creating acting on unattached DataChannel');\n    var Connection = require('./core.rtcpeerconnection').provider,\n      provider = new Connection();\n    id = provider.createDataChannel();\n    provider.close();\n  }\n\n  this.channel = unAttachedChannels[id];\n  delete unAttachedChannels[id];\n\n  // After the constructor returns, and the caller has a chance to register\n  // event listeners, fire all pending events, and then ensure that all\n  // subsequent events are handled immediately.\n  setTimeout(function() {\n    this.drainPendingEvents(id);\n\n    // This function must not be called until after the pending events are\n    // drained, to ensure that messages are delivered in order.\n    this.manageEvents(true);\n  }.bind(this), 0);\n};\n\nRTCDataChannelAdapter.prototype.drainPendingEvents = function(id) {\n  pendingEvents[id].forEach(function(event) {\n    this['on' + event.type](event);\n  }.bind(this));\n  delete pendingEvents[id];\n};\n\n// Attach or detach listeners for events against the connection.\nRTCDataChannelAdapter.prototype.manageEvents = function (attach) {\n  eventNames.forEach(function (eventName) {\n    if (attach) {\n      this[eventName] = this[eventName].bind(this);\n      this.channel[eventName] = this[eventName];\n    } else {\n      delete this.channel[eventName];\n    }\n  }.bind(this));\n};\n\nRTCDataChannelAdapter.prototype.getLabel = function (callback) {\n  callback(this.channel.label);\n};\n\nRTCDataChannelAdapter.prototype.getOrdered = function (callback) {\n  callback(this.channel.ordered);\n};\n\nRTCDataChannelAdapter.prototype.getMaxPacketLifeTime = function (callback) {\n  callback(this.channel.maxPacketLifeTime);\n};\n\nRTCDataChannelAdapter.prototype.getMaxRetransmits = function (callback) {\n  callback(this.channel.maxRetransmits);\n};\n\nRTCDataChannelAdapter.prototype.getProtocol = function (callback) {\n  callback(this.channel.protocol);\n};\n\nRTCDataChannelAdapter.prototype.getNegotiated = function (callback) {\n  callback(this.channel.negotiated);\n};\n\nRTCDataChannelAdapter.prototype.getId = function (callback) {\n  callback(this.channel.id);\n};\n\nRTCDataChannelAdapter.prototype.getReadyState = function (callback) {\n  callback(this.channel.readyState);\n};\n\nRTCDataChannelAdapter.prototype.getBufferedAmount = function (callback) {\n  callback(this.channel.bufferedAmount);\n};\n\nRTCDataChannelAdapter.prototype.getBinaryType = function (callback) {\n  callback(this.channel.binaryType);\n};\nRTCDataChannelAdapter.prototype.setBinaryType = function (binaryType, callback) {\n  this.channel.binaryType = binaryType;\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.send = function (text, callback) {\n  this.channel.send(text);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.sendBuffer = function (buffer, callback) {\n  this.channel.send(buffer);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.close = function (callback) {\n  if (!this.channel) {\n    return callback();\n  }\n  this.manageEvents(false);\n  this.channel.close();\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.onopen = function (event) {\n  this.dispatchEvent('onopen', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onerror = function (event) {\n  this.dispatchEvent('onerror', {\n    errcode: event.type,\n    message: event.message\n  });\n};\n\nRTCDataChannelAdapter.prototype.onclose = function (event) {\n  this.dispatchEvent('onclose', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onmessage = function (event) {\n  if (typeof event.data === 'string') {\n    this.dispatchEvent('onmessage', {text: event.data});\n  } else if (this.channel.binaryType === 'arraybuffer' &&\n      typeof Components !== 'undefined' &&\n      !(event.data instanceof ArrayBuffer)) {\n    // In Firefox Addons, incoming array buffers are not always owned by the\n    // Addon context. The following line clones the object to take ownership.\n    // See: https://developer.mozilla.org/en-US/docs/Components.utils.cloneInto\n    var myData = Components.utils.cloneInto(event.data, {});\n    this.dispatchEvent('onmessage', {buffer: myData});\n  } else {\n    this.dispatchEvent('onmessage', {buffer: event.data});\n  }\n};\n\nexports.name = \"core.rtcdatachannel\";\nexports.provider = RTCDataChannelAdapter;\nexports.allocate = allocateChannel;\n","/*jslint indent:2,sloppy:true, node:true */\n\nvar PromiseCompat = require('es6-promise').Promise;\nvar wrtcClass, RTCPeerConnection, RTCSessionDescription, RTCIceCandidate;\nvar DataChannel = require('./core.rtcdatachannel');\n\nvar RTCPeerConnectionAdapter = function (cap, dispatchEvent, configuration) {\n  if (typeof wrtcClass === 'undefined') {\n    // only works in browser, so node should use setImpl (see exports)\n    var adapter = require('webrtc-adapter');\n    RTCPeerConnection = adapter.RTCPeerConnection;\n    RTCSessionDescription = adapter.RTCSessionDescription;\n    RTCIceCandidate = adapter.RTCIceCandidate;\n  } else {\n    RTCPeerConnection = wrtcClass.RTCPeerConnection;\n    RTCSessionDescription = wrtcClass.RTCSessionDescription;\n    RTCIceCandidate = wrtcClass.RTCIceCandidate;\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    this.connection = new RTCPeerConnection(configuration);\n  } catch (e) {\n    // Note: You can't ask the provider to close you synchronously, since\n    // the constructor has not yet returned, so there's no 'this' that\n    // the provider can know about yet.\n    setTimeout(cap.provider.close.bind(cap.provider, this), 0);\n    return;\n  }\n\n  this.events = [\n    'ondatachannel',\n    'onnegotiationneeded',\n    'onicecandidate',\n    'onsignalingstatechange',\n    'onaddstream',\n    'onremovestream',\n    'oniceconnectionstatechange'\n  ];\n  this.manageEvents(true);\n};\n\n// Attach or detach listeners for events against the connection.\nRTCPeerConnectionAdapter.prototype.manageEvents = function (attach) {\n  this.events.forEach(function (event) {\n    if (attach) {\n      this[event] = this[event].bind(this);\n      this.connection[event] = this[event];\n    } else if (this.connection) {\n      delete this.connection[event];\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createOffer = function (constraints) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createOffer(resolve, reject, constraints);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createAnswer = function () {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createAnswer(resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.setLocalDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setLocalDescription(new RTCSessionDescription(description),\n                                        resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalDescription = function () {\n  return PromiseCompat.resolve(this.connection.localDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.setRemoteDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setRemoteDescription(new RTCSessionDescription(description),\n                                         resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteDescription = function () {\n  return PromiseCompat.resolve(this.connection.remoteDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.getSignalingState = function () {\n  return PromiseCompat.resolve(this.connection.signalingState);\n};\n\nRTCPeerConnectionAdapter.prototype.updateIce = function (configuration) {\n  this.connection.updateIce(configuration);\n  return PromiseCompat.resolve();\n};\n\nRTCPeerConnectionAdapter.prototype.addIceCandidate = function (candidate) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.addIceCandidate(new RTCIceCandidate(candidate),\n                                    resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getIceGatheringState = function () {\n  return PromiseCompat.resolve(this.connection.iceGatheringState);\n};\n\nRTCPeerConnectionAdapter.prototype.getIceConnectionState = function () {\n  return PromiseCompat.resolve(this.connection.iceConnectionState);\n};\n\nRTCPeerConnectionAdapter.prototype.getConfiguration = function () {\n  var configuration = this.connection.getConfiguration();\n  return PromiseCompat.resolve(configuration);\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getStreamById = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.addStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.removeStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.close = function () {\n  if (!this.connection) {\n    return PromiseCompat.resolve();\n  }\n  this.manageEvents(false);\n  try {\n    this.connection.close();\n    return PromiseCompat.resolve();\n  } catch (e) {\n    return PromiseCompat.reject({\n      errcode: e.name,\n      message: e.message\n    });\n  }\n};\n\nRTCPeerConnectionAdapter.prototype.createDataChannel = function (label, dataChannelDict) {\n  var id = DataChannel.allocate(this.connection.createDataChannel(label, dataChannelDict));\n  return PromiseCompat.resolve(id);\n};\n\nRTCPeerConnectionAdapter.prototype.getStats = function (selector) {\n  return new PromiseCompat(function (resolve, reject) {\n    if (typeof wrtcClass === 'undefined') {\n      // used webrtc-adapter\n      this.connection.getStats(selector, resolve, reject);\n    } else {\n      // node-wrtc has different getStats API\n      this.connection.getStats(function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        var id = 0;  // nodewrtc stats report lacks id field\n        reports.forEach(function (report) {\n          report.id = String(id++);  // string to use as object key\n          standardReport[report.id] = report;\n        });\n        resolve(standardReport);\n      }, reject);\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.ondatachannel = function (event) {\n  var id = DataChannel.allocate(event.channel);\n  this.dispatchEvent('ondatachannel', {channel: id});\n};\n\nRTCPeerConnectionAdapter.prototype.onnegotiationneeded = function (event) {\n  this.dispatchEvent('onnegotiationneeded', event.message);\n};\n\nRTCPeerConnectionAdapter.prototype.onicecandidate = function (event) {\n  var msg;\n  if (event.candidate && event.candidate.candidate) {\n    msg = {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex\n      }\n    };\n  } else {\n    msg = {\n      candidate: null\n    };\n  }\n  this.dispatchEvent('onicecandidate', msg);\n};\n  \nRTCPeerConnectionAdapter.prototype.onsignalingstatechange = function (event) {\n  this.dispatchEvent('onsignalingstatechange', event.message);\n};\n  \nRTCPeerConnectionAdapter.prototype.onaddstream = function (event) {\n  //TODO: provide ID of allocated stream.\n  this.dispatchEvent('onaddstream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.onremovestream = function (event) {\n  //TODO: provide ID of deallocated stream.\n  this.dispatchEvent('onremovestream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.oniceconnectionstatechange = function (event) {\n  this.dispatchEvent('oniceconnectionstatechange', event.message);\n};\n\n\nexports.name = \"core.rtcpeerconnection\";\nexports.provider = RTCPeerConnectionAdapter;\nexports.style = \"providePromises\";\nexports.flags = {provider: true};\nexports.setImpl = function(impl) {\n  \"use strict\";\n  wrtcClass = impl;\n};\n","/*globals localStorage */\n/*jslint indent:2,sloppy:true,node:true */\nvar util = require('../../src/util');\n\n/**\n * A FreeDOM core.storage provider that depends on localStorage\n * Thus, this only works in the context of a webpage and has\n * some size limitations.\n * Note that this can conflict with other scripts using localStorage\n * as keys are raw\n * @Class Storage_unprivileged\n * @constructor\n * @private\n * @param {Object} cap Capabilities for the provider\n */\nvar Storage_unprivileged = function (cap, dispatchEvent) {\n  util.handleEvents(this);\n};\n\n/**\n * Lists keys in the storage repository\n * @method keys\n */\nStorage_unprivileged.prototype.keys = function (continuation) {\n  var result = [],\n    i;\n  for (i = 0; i < localStorage.length; i += 1) {\n    result.push(localStorage.key(i));\n  }\n  continuation(result);\n};\n\n/**\n * Get a key from the storage repository.\n * @param {String} key The item to get from storage.\n * @method get\n */\nStorage_unprivileged.prototype.get = function (key, continuation) {\n  try {\n    var val = localStorage.getItem(key);\n    continuation(val);\n  } catch (e) {\n    continuation(null);\n  }\n};\n\n/**\n * Set a key in the storage repository.\n * @param {String} key The item to save in storage.\n * @param {String} value The value to save in storage.\n * @method set\n */\nStorage_unprivileged.prototype.set = function (key, value, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.setItem(key, value);\n  continuation(ret);\n};\n\n/**\n * Remove a key from the storage repository.\n * @param {String} key The item to remove from storage;\n * @method remove\n */\nStorage_unprivileged.prototype.remove = function (key, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.removeItem(key);\n  continuation(ret);\n};\n\n/**\n * Reset the contents of the storage repository.\n * @method clear\n */\nStorage_unprivileged.prototype.clear = function (continuation) {\n  localStorage.clear();\n  continuation();\n};\n\nexports.provider = Storage_unprivileged;\nexports.name = 'core.storage';\n","/*jslint indent:2,white:true,sloppy:true,node:true */\nvar EventInterface = require('../../src/proxy/eventInterface');\nvar Consumer = require('../../src/consumer');\nvar util = require('../../src/util');\n\n/**\n * Core freedom services available to all modules.\n * Created by the environment helper in response to a 'core' request.\n * @Class Core_unprivileged\n * @constructor\n * @param {Manager} manager The manager this core is connected with.\n * @private\n */\nvar Core_unprivileged = function(manager, postMessage) {\n  this.manager = manager.module;\n  this.debug = this.manager.debug;\n};\n\nCore_unprivileged.unboundChannels = {};\n\nCore_unprivileged.contextId = undefined;\nCore_unprivileged.moduleInternal = undefined;\n\n/**\n * Create a custom channel.\n * Returns the structure {channel: Proxy, identifier: Object},\n * where the identifier can be 'redeemed' by another module or provider using\n * bind channel, at which point the deferred object will resolve with a channel\n * between the two endpoints.\n * @method createChannel\n * @params {Function} continuation Method to call with the cosntructed structure.\n */\nCore_unprivileged.prototype.createChannel = function(continuation) {\n  var proxy = new Consumer(EventInterface, this.manager.debug),\n      id = util.getId(),\n      chan = this.getChannel(proxy);\n  this.manager.setup(proxy);\n\n  if (this.isInModule()) {\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'register',\n        id: id\n      }\n    });\n  }\n  Core_unprivileged.unboundChannels[id] = {\n    local: true,\n    proxy: proxy\n  };\n\n  proxy.once('start', this.getChannel.bind(this, proxy));\n\n  continuation({\n    channel: chan,\n    identifier: id\n  });\n};\n\nCore_unprivileged.prototype.getChannel = function(proxy) {\n  var iface = proxy.getProxyInterface(),\n      chan = iface();\n  chan.close = iface.close;\n  chan.onClose = iface.onClose;\n  iface.onClose(chan, function() {\n    proxy.doClose();\n  });\n  return chan;\n};\n\n/**\n * Receive a message from another core instance.\n * Note: Core_unprivileged is not registered on the hub. it is a provider,\n *     as it's location and name would indicate. This function is called by\n *     port-app to relay messages up to higher levels.  More generally, the\n *     messages emitted by the core to 'this.manager.emit(this.mananage.delegate'\n *     Should be onMessaged to the controlling core.\n * @param {String} source The source of the message.\n * @param {Object} msg The messsage from an isolated core provider.\n */\nCore_unprivileged.prototype.onMessage = function(source, msg) {\n  if (msg.type === 'register') {\n    Core_unprivileged.unboundChannels[msg.id] = {\n      remote: true,\n      resolve: msg.reply,\n      source: source\n    };\n  } else if (msg.type === 'clear') {\n    delete Core_unprivileged.unboundChannels[msg.id];\n  } else if (msg.type === 'bind') {\n    if (Core_unprivileged.unboundChannels[msg.id]) {\n      this.bindChannel(msg.id, function() {}, source);\n    }\n  } else if (msg.type === 'require') {\n    source.require(msg.id, msg.manifest);\n  }\n};\n\n/**\n * Bind a custom channel.\n * Creates a proxy interface to the custom channel, which will be bound to\n * the proxy obtained through an earlier createChannel call.\n * channel to a proxy.\n * @method bindChannel\n * @param {Object} identifier An identifier obtained through createChannel.\n * @param {Function} continuation A function to be called with the proxy.\n */\nCore_unprivileged.prototype.bindChannel = function(identifier, continuation, source) {\n  var toBind = Core_unprivileged.unboundChannels[identifier],\n      newSource = !source;\n\n  // when bindChannel is called directly, source will be undefined.\n  // When it is propogated by onMessage, a source for binding will already exist.\n  if (newSource) {\n    this.debug.debug('making local proxy for core binding');\n    source = new Consumer(EventInterface, this.debug);\n    this.manager.setup(source);\n  }\n\n  // If this is a known identifier and is in the same context, binding is easy.\n  if (toBind && toBind.local) {\n    this.debug.debug('Binding a channel to port on this hub:' + source);\n    this.manager.createLink(source, identifier, toBind.proxy, 'default');\n    delete Core_unprivileged.unboundChannels[identifier];\n    if (this.manager.delegate && this.manager.toDelegate.core) {\n      this.manager.emit(this.manager.delegate, {\n        type: 'Delegation',\n        request: 'handle',\n        flow: 'core',\n        message: {\n          type: 'clear',\n          id: identifier\n        }\n      });\n    }\n  } else if (toBind && toBind.remote) {\n    this.debug.debug('Binding a channel into a module.');\n    this.manager.createLink(\n        source,\n        newSource ? 'default' : identifier,\n        toBind.source,\n        identifier);\n    toBind.resolve({\n      type: 'Bind Channel',\n      request:'core',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    delete Core_unprivileged.unboundChannels[identifier];\n  } else if (this.isInModule()) {\n    this.debug.info('delegating channel bind for an unknown ID:' + identifier);\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    source.once('start', function(p, cb) {\n      cb(this.getChannel(p));\n    }.bind(this, source, continuation));\n    this.manager.createLink(source,\n        'default',\n        this.manager.hub.getDestination(this.manager.delegate),\n        identifier);\n    delete Core_unprivileged.unboundChannels[identifier];\n    return;\n  } else {\n    this.debug.warn('Asked to bind unknown channel: ' + identifier);\n    this.debug.log(Core_unprivileged.unboundChannels);\n    continuation();\n    return;\n  }\n\n  if (source.getInterface) {\n    continuation(this.getChannel(source));\n  } else {\n    continuation();\n  }\n};\n\n/**\n * @method isInModule\n * @private\n * @returns {Boolean} Whether this class is running in a module.\n */\nCore_unprivileged.prototype.isInModule = function () {\n  return (this.manager.delegate && this.manager.toDelegate.core);\n};\n\n/**\n * Require a dynamic dependency for your freedom module.\n * If new permissions are needed beyond what are already available to the\n * freedom context, the user will need to approve of the requested permissions.\n * @method require\n * @param {String} manifest The URL of the manifest to require.\n * @param {String} api The API of the dependency to expose if not default.\n * @param {Function} callback The function to call with the dependency.\n */\nCore_unprivileged.prototype.require = function (manifest, api, callback) {\n  if (this.isInModule() && Core_unprivileged.moduleInternal) {\n    // Register a callback with moduleInternal.\n    // DependencyName is the name of the channel moduelInternal will allocate\n    // callback will be called once a link to that channel is seen.\n    var dependencyName =\n        Core_unprivileged.moduleInternal.registerId(api, callback);\n\n    // Request the dependency be added.\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'require',\n        manifest: manifest,\n        id: dependencyName\n      }\n    });\n  } else {\n    this.debug.error('The require function in external context makes no sense' +\n        ' Instead create a new freedom() context.');\n    callback(undefined, {\n      errcode: 'InvalidContext',\n      message: 'Cannot call require() from this context.'\n    });\n  }\n};\n\n/**\n * Get the ID of the current freedom.js context.  Provides an\n * array of module URLs, the lineage of the current context.\n * When not in an application context, the ID is the lineage\n * of the current View.\n * @method getId\n * @param {Function} callback The function called with ID information.\n */\nCore_unprivileged.prototype.getId = function(callback) {\n  // TODO: make sure contextID is properly frozen.\n  callback(Core_unprivileged.contextId);\n};\n\n/**\n * Get a logger for logging to the freedom.js logger. Provides a\n * log object with an interface similar to the standard javascript console,\n * which logs via debug.\n * @method getLogger\n * @param {String} name The name of the logger, used as its 'source'\n * @param {Function} callback The function to call with the logger.\n */\nCore_unprivileged.prototype.getLogger = function(name, callback) {\n  callback(this.manager.debug.getLogger(name));\n};\n\n/**\n * Set the ID of the current freedom.js context.\n * @method setId\n * @private\n * @param {String[]} id The lineage of the current context.\n * @param {ModuleInternal} moduleInternal The Module environment if one exists.\n */\nCore_unprivileged.prototype.setId = function(id, moduleInternal) {\n  Core_unprivileged.contextId = id;\n  Core_unprivileged.moduleInternal = moduleInternal;\n};\n\nexports.provider = Core_unprivileged;\nexports.name = \"core\";\nexports.flags = {module: true};\n","/*globals document */\r\n/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('../../src/util');\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\n/**\r\n * A freedom.js view is the interface for user interaction.\r\n * A view exists as an iFrame, which is shown to the user in some way.\r\n * communication between the view and the freedom.js module is performed\r\n * through the HTML5 postMessage mechanism, which this provider translates\r\n * to freedom.js message events.\r\n * @Class View_unprivileged\r\n * @constructor\r\n * @private\r\n * @param {View Provider} provider\r\n * @param {provider:Provider,module:Module} cap The instantiator of the view.\r\n * @param {Function} dispatchEvent Function to call to emit events.\r\n */\r\nvar Core_View = function (provider, cap, dispatchEvent) {\r\n  this.provider = provider;\r\n  this.dispatchEvent = dispatchEvent;\r\n  setTimeout(cap.provider.onClose.bind(\r\n    cap.provider,\r\n    this,\r\n    this.close.bind(this, function () {})\r\n  ), 0);\r\n  this.module = cap.module;\r\n  util.handleEvents(this);\r\n};\r\n\r\n/**\r\n * The is the default provider for core.view, unless overridden by context or\r\n * a user supplied provider. The interface is documented at:\r\n * https://github.com/freedomjs/freedom/wiki/freedom.js-Views\r\n *\r\n * Generally, a view provider consists of 3 methods:\r\n * onOpen is called when a view should be shown.\r\n *     id - is a unique identifier for this view, used on subsequent calls\r\n *          for communication and to eventually close the view.\r\n *     name - is the name of the view (as defined in the manifest),\r\n *            in order to place it appropriately.\r\n *     page - is the resolved URL to open.\r\n *     resources - is an array of resolved URLs which are referenced.\r\n *     postMessage - is a function to call when messages are emitted\r\n *                   by the window in which the view is opened.\r\n * onOpen returns a promise that completes when the view is loaded.\r\n * onMessage is called to send a message to an open view.\r\n *     id - is the unique identifier for the open view.\r\n *     message - is the message to postMessage to the view's window.\r\n * onClose is called to close a view.\r\n *     id - is the unique identifier for the view.\r\n */\r\nCore_View.provider = {\r\n  listener: undefined,\r\n  active: {},\r\n  onOpen: function (id, name, page, resources, postMessage) {\r\n    var container = document.body,\r\n      root,\r\n      frame;\r\n    \r\n    if (!this.listener) {\r\n      this.listener = function (msg) {\r\n        var i;\r\n        for (i in this.active) {\r\n          if (this.active.hasOwnProperty(i) &&\r\n              this.active[i].source === msg.source) {\r\n            this.active[i].postMessage(msg.data);\r\n          }\r\n        }\r\n      }.bind(this);\r\n      window.addEventListener('message', this.listener, true);\r\n    }\r\n\r\n    // Views open by default in an element with their ID, or fill the page\r\n    // otherwise.\r\n    if (document.getElementById(name)) {\r\n      container = document.getElementById(name);\r\n    }\r\n\r\n    root = document.createElement(\"div\");\r\n    root.style.width = \"100%\";\r\n    root.style.height = \"100%\";\r\n    root.style.display = \"relative\";\r\n\r\n    container.appendChild(root);\r\n    \r\n    return new PromiseCompat(function (resolve, reject) {\r\n      frame = document.createElement(\"iframe\");\r\n      frame.setAttribute(\"sandbox\", \"allow-scripts allow-forms\");\r\n      frame.style.width = \"100%\";\r\n      frame.style.height = \"100%\";\r\n      frame.style.border = \"0\";\r\n      frame.style.background = \"transparent\";\r\n      frame.src = page;\r\n      frame.addEventListener('load', resolve, true);\r\n      frame.addEventListener('error', reject, true);\r\n\r\n      root.appendChild(frame);\r\n\r\n      this.active[id] = {\r\n        postMessage: postMessage,\r\n        container: container,\r\n        root: root,\r\n        source: frame.contentWindow\r\n      };\r\n    }.bind(this));\r\n  },\r\n  onMessage: function (id, message) {\r\n    this.active[id].source.postMessage(message, '*');\r\n  },\r\n  onClose: function (id) {\r\n    this.active[id].container.removeChild(this.active[id].root);\r\n    delete this.active[id];\r\n    \r\n    if (Object.keys(this.active).length === 0) {\r\n      window.removeEventListener('message', this.listener, true);\r\n      this.listener = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Ask for this view to open a specific location, either a File relative to\r\n * the loader, or an explicit code location.\r\n * @method show\r\n * @param {String} name The identifier of the view.\r\n * @param {Function} continuation Function to call when view is loaded.\r\n */\r\nCore_View.prototype.show = function (name, continuation) {\r\n  if (this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'ALREADY_OPEN',\r\n      message: 'Cannot show multiple views through one instance.'\r\n    });\r\n  }\r\n  this.id = util.getId();\r\n\r\n  var config = this.module.manifest.views,\r\n    toResolve = [];\r\n  if (!config || !config[name]) {\r\n    return continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n\r\n  if (config[name].main && config[name].files) {\r\n    toResolve = config[name].files.concat(config[name].main);\r\n    PromiseCompat.all(toResolve.map(function (fname) {\r\n      return this.module.resource.get(this.module.manifestId, fname);\r\n    }.bind(this))).then(function (files) {\r\n      this.provider.onOpen(this.id,\r\n          name,\r\n          files[files.length - 1],\r\n          files,\r\n          this.dispatchEvent.bind(this, 'message')).then(\r\n        function (c) {\r\n          // Make sure continuation is called without an argument.\r\n          c();\r\n        }.bind({}, continuation),\r\n        continuation.bind({}, undefined)\r\n      );\r\n    }.bind(this), function (err) {\r\n      this.module.debug.error('Unable to open view ' + name + ': ', err);\r\n      continuation(undefined, {\r\n        errcode: 'VIEW_MALFORMED',\r\n        message: 'Malformed View Declaration: ' + err\r\n      });\r\n    });\r\n  } else {\r\n    continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * isSecure determines whether the module can have confidence that its\r\n * communication with its view cannot be intercepted by an untrusted 3rd party.\r\n * In practice, this means that its okay for the runtime to have access to the\r\n * messages, and if the context is a web server or a browser extension then\r\n * that context is trusted. However, if a provider wants to allow their e.g.\r\n * social provider to be used on arbitrary websites, this mechanism means that\r\n * if the website uses a trusted version of the freedom.js library, then the\r\n * module can be used.\r\n * @method isSecure\r\n * @returns {Boolean} if the channel to the view is secure.\r\n */\r\nCore_View.prototype.isSecure = function (continuation) {\r\n  continuation(false);\r\n};\r\n\r\n/**\r\n * Send a message to an open view.\r\n * @method postMessage\r\n */\r\nCore_View.prototype.postMessage = function (msg, continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot post message to uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onMessage(this.id, msg);\r\n  continuation();\r\n};\r\n\r\n/**\r\n * Close an active view.\r\n * @method close\r\n */\r\nCore_View.prototype.close = function (continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot close uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onClose(this.id);\r\n  delete this.id;\r\n\r\n  continuation();\r\n};\r\n\r\n\r\n/**\r\n * Allow a web page to redefine behavior for how views are shown.\r\n * @method register\r\n * @static\r\n * @param {Function} PageProvider The custom view behavior.\r\n */\r\nCore_View.register = function (PageProvider) {\r\n  var provider = PageProvider ? new PageProvider() : Core_View.provider;\r\n  exports.provider = Core_View.bind(this, provider);\r\n};\r\n\r\nexports.provider = Core_View.bind(this, Core_View.provider);\r\nexports.name = 'core.view';\r\nexports.register = Core_View.register;\r\nexports.flags = {provider: true, module: true};\r\n","/*globals WebSocket, ArrayBuffer, Blob, Uint8Array, console */\n/*jslint sloppy:true, node:true */\n\nvar WSHandle = null;\nvar nodeStyle = false;\n\n/**\n * A WebSocket core provider\n *\n * @param {Object} cap Capabilities for the provider\n * @param {Function} dispatchEvent Function to dispatch events.\n * @param {String} url The Remote URL to connect with.\n * @param {String[]} protocols SubProtocols to open.\n * @param {WebSocket?} socket An alternative socket class to use.\n */\nvar WS = function (cap, dispatchEvent, url, protocols, socket) {\n  var WSImplementation = null,\n    error;\n  this.isNode = nodeStyle;\n  if (typeof socket !== 'undefined') {\n    WSImplementation = socket;\n  } else if (WSHandle !== null) {\n    WSImplementation = WSHandle;\n  } else if (typeof WebSocket !== 'undefined') {\n    WSImplementation = WebSocket;\n  } else {\n    console.error('Platform does not support WebSocket');\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    if (protocols) {\n      this.websocket = new WSImplementation(url, protocols);\n    } else {\n      this.websocket = new WSImplementation(url);\n    }\n    this.websocket.binaryType = 'arraybuffer';\n  } catch (e) {\n    error = {};\n    if (e instanceof SyntaxError) {\n      error.errcode = 'SYNTAX';\n    } else {\n      error.errcode = e.name;\n    }\n    error.message = e.message;\n    dispatchEvent('onError', error);\n    return;\n  }\n\n  if (this.isNode) {\n    this.websocket.on('message', this.onMessage.bind(this));\n    this.websocket.on('open', this.onOpen.bind(this));\n    // node.js websocket implementation not compliant\n    this.websocket.on('close', this.onClose.bind(this, {\n      code: 0,\n      reason: 'UNKNOWN',\n      wasClean: true\n    }));\n    this.websocket.on('error', this.onError.bind(this));\n  } else {\n    this.websocket.onopen = this.onOpen.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n};\n\nWS.prototype.send = function (data, continuation) {\n  var toSend = data.text || data.binary || data.buffer,\n    errcode,\n    message;\n\n  if (toSend) {\n    try {\n      // For node.js, we have to do weird buffer stuff\n      if (this.isNode && toSend instanceof ArrayBuffer) {\n        this.websocket.send(\n          new Uint8Array(toSend),\n          { binary: true },\n          this.onError.bind(this)\n        );\n      } else {\n        this.websocket.send(toSend);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        errcode = \"SYNTAX\";\n      } else {\n        errcode = \"INVALID_STATE\";\n      }\n      message = e.message;\n    }\n  } else {\n    errcode = \"BAD_SEND\";\n    message = \"No text, binary, or buffer data found.\";\n  }\n\n  if (errcode) {\n    continuation(undefined, {\n      errcode: errcode,\n      message: message\n    });\n  } else {\n    continuation();\n  }\n};\n\nWS.prototype.getReadyState = function (continuation) {\n  continuation(this.websocket.readyState);\n};\n\nWS.prototype.getBufferedAmount = function (continuation) {\n  continuation(this.websocket.bufferedAmount);\n};\n\nWS.prototype.close = function (code, reason, continuation) {\n  try {\n    if (code && reason) {\n      this.websocket.close(code, reason);\n    } else {\n      this.websocket.close();\n    }\n    continuation();\n  } catch (e) {\n    var errorCode;\n    if (e instanceof SyntaxError) {\n      errorCode = \"SYNTAX\";\n    } else {\n      errorCode = \"INVALID_ACCESS\";\n    }\n    continuation(undefined, {\n      errcode: errorCode,\n      message: e.message\n    });\n  }\n};\n\nWS.prototype.onOpen = function (event) {\n  this.dispatchEvent('onOpen');\n};\n\nWS.prototype.onMessage = function (event, flags) {\n  var data = {};\n  if (this.isNode && flags && flags.binary) {\n    data.buffer = new Uint8Array(event).buffer;\n  } else if (this.isNode) {\n    data.text = event;\n  } else if (typeof ArrayBuffer !== 'undefined' && event.data instanceof ArrayBuffer) {\n    data.buffer = event.data;\n  } else if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n    data.binary = event.data;\n  } else if (typeof event.data === 'string') {\n    data.text = event.data;\n  }\n  this.dispatchEvent('onMessage', data);\n};\n\nWS.prototype.onError = function (event) {\n  // Nothing to pass on\n  // See: http://stackoverflow.com/a/18804298/300539\n  this.dispatchEvent('onError');\n};\n\nWS.prototype.onClose = function (event) {\n  this.dispatchEvent('onClose',\n                     {code: event.code,\n                      reason: event.reason,\n                      wasClean: event.wasClean});\n};\n\nexports.provider = WS;\nexports.name = 'core.websocket';\nexports.setSocket = function (impl, isNode) {\n  WSHandle = impl;\n  nodeStyle = isNode;\n};\n","/*jshint node:true*/\nvar PromiseCompat = require('es6-promise').Promise;\nvar XhrClass = null;\n\nvar XhrProvider = function(cap, dispatchEvent) {\n  \"use strict\";\n  if (typeof window !== \"undefined\" &&\n      typeof window.XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom\n    XhrClass = window.XMLHttpRequest;\n  } else if (typeof XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom-for-firefox\n    XhrClass = XMLHttpRequest;\n  } else if (XhrClass === null) {\n    console.error(\"Platform does not support XMLHttpRequest\");\n  }\n\n  this._dispatchEvent = dispatchEvent;\n  this._xhr = new XhrClass();\n\n  setTimeout(cap.provider.onClose.bind(\n    cap.provider,\n    this,\n    this.abort.bind(this)\n  ), 0);\n\n  this._events = [\n    \"loadstart\",\n    \"progress\",\n    \"abort\",\n    \"error\",\n    \"load\",\n    \"timeout\",\n    \"loadend\",\n    \"readystatechange\"\n  ];\n  this._setupListeners();\n\n};\n\nXhrProvider.prototype.open = function(method, url, async, user, password) {\n  \"use strict\";\n  if (typeof async !== \"undefined\" && async !== true) {\n    return PromiseCompat.reject({\n      errcode: \"InvalidAccessError\",\n      message: \"async should always be set to true\"\n    });\n  }\n\n  // Force async to be true. undefined can lead to async=false in Chrome packaged apps\n  this._xhr.open(method, url, true, user, password);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.send = function(data) {\n  \"use strict\";\n  if (!(data instanceof Object)) {\n    this._xhr.send();\n  } else if (data.hasOwnProperty(\"string\")) {\n    this._xhr.send(data.string);\n  } else if (data.hasOwnProperty(\"buffer\")) {\n    this._xhr.send(data.buffer);\n  } else if (data.hasOwnProperty(\"blob\")) {\n    this._xhr.send(data.blob);\n  } else {\n    this._xhr.send();\n  }\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.abort = function() {\n  \"use strict\";\n  this._xhr.abort();\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getResponseHeader = function(header) {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getResponseHeader(header));\n};\n\nXhrProvider.prototype.getAllResponseHeaders = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getAllResponseHeaders());\n};\n\nXhrProvider.prototype.setRequestHeader = function(header, value) {\n  \"use strict\";\n  this._xhr.setRequestHeader(header, value);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.overrideMimeType = function(mime) {\n  \"use strict\";\n  this._xhr.overrideMimeType(mime);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getReadyState = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.readyState);\n};\n\nXhrProvider.prototype.getResponse = function() {\n  \"use strict\";\n  if (this._xhr.response === null) {\n    return PromiseCompat.resolve(null);\n  } else if (this._xhr.responseType === \"text\" || this._xhr.responseType === \"\") {\n    return PromiseCompat.resolve({ string: this._xhr.response });\n  } else if (this._xhr.responseType === \"arraybuffer\") {\n    return PromiseCompat.resolve({ buffer: this._xhr.response });\n  } else if (this._xhr.responseType === \"json\") {\n    return PromiseCompat.resolve({ object: this._xhr.response });\n  }\n\n  return PromiseCompat.reject(\"core.xhr cannot determine type of response\");\n};\n\nXhrProvider.prototype.getResponseText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseText);\n};\n\nXhrProvider.prototype.getResponseURL = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseURL);\n};\n\nXhrProvider.prototype.getResponseType = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseType);\n};\n\nXhrProvider.prototype.setResponseType = function(type) {\n  \"use strict\";\n  this._xhr.responseType = type;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getStatus = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.status);\n};\n\nXhrProvider.prototype.getStatusText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.statusText);\n};\n\nXhrProvider.prototype.getTimeout = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.timeout);\n};\n\nXhrProvider.prototype.setTimeout = function(timeout) {\n  \"use strict\";\n  this._xhr.timeout = timeout;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getWithCredentials = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.withCredentials);\n};\n\nXhrProvider.prototype.setWithCredentials = function(wc) {\n  \"use strict\";\n  this._xhr.withCredentials = wc;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype._setupListeners = function() {\n  \"use strict\";\n  // Download events\n  this._events.forEach(function (eventName) {\n    this._xhr.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"on\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n\n  // Upload events\n  this._events.forEach(function (eventName) {\n    this._xhr.upload.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"onupload\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n};\n\nexports.name = \"core.xhr\";\nexports.provider = XhrProvider;\nexports.style = \"providePromises\";\nexports.flags = { provider: true };\nexports.setImpl = function(impl) {\n  \"use strict\";\n  XhrClass = impl;\n};\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar loadedOnStartup = false;\n\nvar TIMEOUT = 5000;\n\n/**\n * If there is redirection back to the page, and oAuthRedirectID is set,\n * then report the auth and close the window.\n */\nif (typeof window !== 'undefined' && window && window.location &&\n    window.addEventListener) {\n  window.addEventListener('load', function () {\n    \"use strict\";\n    loadedOnStartup = true;\n  }, true);\n\n  if (window.localStorage &&\n      window.location.href.indexOf(oAuthRedirectId) > 0) {\n    // This will trigger a 'storage' event on the window. See storageListener\n    window.localStorage.setItem(oAuthRedirectId, new Date());\n    window.close();\n  }\n}\n\nvar LocalPageAuth = function() {\n  \"use strict\";\n  this.listeners = {};\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nLocalPageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof window !== 'undefined' && window && loadedOnStartup) {\n    var here = window.location.protocol + \"//\" + window.location.host +\n        window.location.pathname;\n    if (redirectURIs.indexOf(here) > -1) {\n      continuation({\n        redirect: here,\n        state: oAuthRedirectId + Math.random()\n      });\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nLocalPageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var listener = this.storageListener.bind(this, continuation, stateObj);\n  this.listeners[stateObj.state] = listener;\n  window.addEventListener(\"storage\", listener, false);\n  // Start 'er up\n  window.open(authUrl);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (this.listeners[stateObj.state]) {\n        // Listener has not been deleted, indicating oauth has completed.\n        window.removeEventListener(\n            \"storage\", this.listeners[stateObj.state], false);\n        delete this.listeners[stateObj.state];\n        continuation(undefined, 'Error launching auth flow');\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * Handler for storage events, which relays them to waiting clients.\n * For the schema of the storage msg, see:\n * http://tutorials.jenkov.com/html5/local-storage.html#storage-events\n * @param {Function} continuation function to call with result\n * @param {Object.<string, string>} stateObj the return value from initiateOAuth\n\n * @param {Object} msg storage event\n */\nLocalPageAuth.prototype.storageListener = function(continuation, stateObj, msg) {\n  'use strict';\n  if (msg.url.indexOf(stateObj.state) > -1) {\n    window.removeEventListener(\"storage\", this.listeners[stateObj.state], false);\n    delete this.listeners[stateObj.state];\n    continuation(msg.url);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = LocalPageAuth;\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar TIMEOUT = 5000;\n\nfunction RemotePageAuth() {\n  \"use strict\";\n  this.listeners = {};\n}\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nRemotePageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof global !== 'undefined' && global && global.document) {\n    for (var i=0; i<redirectURIs.length; i++) {\n      // TODO: remove restriction on URL pattern match.\n      if ((redirectURIs[i].indexOf('http://') === 0 ||\n          redirectURIs[i].indexOf('https://') === 0) &&\n          redirectURIs[i].indexOf('oauth-relay.html') > 0) {\n        continuation({\n          redirect: redirectURIs[i],\n          state: oAuthRedirectId + Math.random()\n        });\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nRemotePageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var frame = global.document.createElement('iframe');\n  frame.src = stateObj.redirect;\n  frame.style.display = 'none';\n\n  global.document.body.appendChild(frame);\n  frame.addEventListener('load', function () {\n    this.listeners[stateObj.state] = continuation;\n    window.open(authUrl);\n\n    frame.contentWindow.postMessage(stateObj.state, '*');\n  }.bind(this));\n\n  var hasCredentials = false;\n  window.addEventListener('message', function (frame, msg) {\n    if (msg.data && msg.data.key && msg.data.url && this.listeners[msg.data.key]) {\n      hasCredentials = true;\n      this.listeners[msg.data.key](msg.data.url);\n      delete this.listeners[msg.data.key];\n      try {\n        document.body.removeChild(frame);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }.bind(this, frame), false);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (hasCredentials === false) {\n        continuation(undefined, 'Error launching auth flow');\n        delete this.listeners[stateObj.state];\n        try {\n          document.body.removeChild(frame);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = RemotePageAuth;\n","/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\n/**\n * The API registry for freedom.js.  Used to look up requested APIs,\n * and provides a bridge for core APIs to act like normal APIs.\n * @Class API\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Api = function(debug) {\n  this.debug = debug;\n  this.apis = {};\n  this.providers = {};\n  this.waiters = {};\n};\n\n/**\n * Get an API.\n * @method get\n * @param {String} api The API name to get.\n * @returns {{name:String, definition:API}} The API if registered.\n */\nApi.prototype.get = function(api) {\n  if (!this.apis[api]) {\n    return false;\n  }\n  return {\n    name: api,\n    definition: this.apis[api]\n  };\n};\n\n/**\n * Set an API to a definition.\n * @method set\n * @param {String} name The API name.\n * @param {API} definition The JSON object defining the API.\n */\nApi.prototype.set = function(name, definition) {\n  this.apis[name] = definition;\n};\n\n/**\n * Register a core API provider.\n * @method register\n * @param {String} name the API name.\n * @param {Function} constructor the function to create a provider for the API.\n * @param {String?} style The style the provider is written in. Valid styles\n *   are documented in fdom.port.Provider.prototype.getInterface. Defaults to\n *   provideAsynchronous\n * @param {Object?} flags Prefixed arguments needed by the core provider.\n *   valid keys are 'module', 'provider', and 'config'.\n */\nApi.prototype.register = function(name, constructor, style, flags) {\n  var i,\n    args;\n\n  this.providers[name] = {\n    constructor: constructor,\n    style: style || 'provideAsynchronous',\n    flags: flags || {}\n  };\n\n  if (this.waiters[name]) {\n    for (i = 0; i < this.waiters[name].length; i += 1) {\n      args = {};\n      if (flags.module) {\n        args.module = this.waiters[name][i].from;\n      }\n      if (flags.config) {\n        args.config = this.waiters[name][i].from.config;\n      }\n      this.waiters[name][i].resolve({\n        args: args,\n        inst: constructor.bind({}, args)\n      });\n    }\n    delete this.waiters[name];\n  }\n};\n\n/**\n * Get a core API connected to a given FreeDOM module.\n * @method getCore\n * @param {String} name the API to retrieve.\n * @param {Module} from The instantiating App.\n * @returns {Promise} A promise of a fdom.App look-alike (and argument object),\n * matching a local API definition.\n */\nApi.prototype.getCore = function(name, from) {\n  return new PromiseCompat(function(resolve, reject) {\n    if (this.apis[name]) {\n      if (this.providers[name]) {\n        var args = {};\n        if (this.providers[name].flags.module) {\n          args.module = from;\n        }\n        if (this.providers[name].flags.config) {\n          args.config = from.config;\n        }\n        resolve({\n          args: args,\n          inst: this.providers[name].constructor.bind({}, args)\n        });\n      } else {\n        if (!this.waiters[name]) {\n          this.waiters[name] = [];\n        }\n        this.waiters[name].push({\n          resolve: resolve,\n          reject: reject,\n          from: from\n        });\n      }\n    } else {\n      this.debug.warn('Api.getCore asked for unknown core: ' + name);\n      reject(null);\n    }\n  }.bind(this));\n};\n\n/**\n * Configure a {Provider} to provide a named core api on behalf of a\n * given port.\n * @param {String} name The name of the provider\n * @param {Provider} provider The provider that will provide the named api\n * @param {Module} from The module requesting the core provider.\n */\nApi.prototype.provideCore = function (name, provider, from) {\n  return this.getCore(name, from).then(function (core) {\n    var flags = this.providers[name].flags,\n      iface = provider.getProxyInterface();\n    if (flags.provider) {\n      core.args.provider = iface;\n    }\n    iface()[this.providers[name].style](core.inst);\n  }.bind(this), function (err) {\n    this.debug.error('Could not provide core: ', err);\n  }.bind(this));\n};\n\n/**\n * Shutdown the API registry, and reject any pending waiters.\n */\nApi.prototype.cleanup = function () {\n  var prop,\n    doReject = function (waiter) {\n      waiter.reject();\n    };\n  for (prop in this.waiters) {\n    if (this.waiters.hasOwnProperty(prop)) {\n      this.waiters[prop].forEach(doReject);\n    }\n  }\n  delete this.waiters;\n};\n\n/**\n * Defines the apis module and provider registry.\n */\nmodule.exports = Api;\n","/*jslint indent:2,node:true */\n\nvar Bundle = function () {\n  'use strict';\n  this.interfaces = require('../dist/bundle.compiled');\n};\n\n/**\n * Populate an API registry with provided providers, and with known API\n * definitions.\n * @static\n * @method register\n * @param {{name: string, provider: Function, style?: string}[]} providers\n *   The core providers made available to this freedom.js instance.\n * @param {Api} registry The API registry to populate.\n */\nexports.register = function (providers, registry) {\n  'use strict';\n  var bundle = new Bundle();\n  bundle.interfaces.forEach(function (api) {\n    if (api && api.name && api.api) {\n      registry.set(api.name, api.api);\n    }\n  });\n\n  providers.forEach(function (provider) {\n    if (provider.name) {\n      registry.register(provider.name,\n                        provider.provider,\n                        provider.style,\n                        provider.flags);\n    }\n  });\n};\n","/*globals Blob, ArrayBuffer, DataView */\n/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable api.\n * @class Consumer\n * @implements Port\n * @uses handleEvents\n * @param {Object} interfaceCls The api interface exposed by this consumer.\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Consumer = function (interfaceCls, debug) {\n  this.id = Consumer.nextId();\n  this.interfaceCls = interfaceCls;\n  this.debug = debug;\n  util.handleEvents(this);\n\n  this.ifaces = {};\n  this.closeHandlers = {};\n  this.errorHandlers = {};\n  this.emits = {};\n};\n\n/**\n * Receive incoming messages for this consumer.\n * @method onMessage\n * @param {String} source The source of the message.\n * @param {Object} message The received message.\n */\nConsumer.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.emitChannel = message.channel;\n    this.emit(this.emitChannel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    delete this.controlChannel;\n    this.doClose();\n  } else {\n    if (!this.emitChannel && message.channel) {\n      this.emitChannel = message.channel;\n      this.emit('start');\n      return;\n    }\n    if (message.type === 'close' && message.to) {\n      this.teardown(message.to);\n      return;\n    }\n    if (message.type === 'error') {\n      this.error(message.to, message.message);\n      return;\n    }\n    if (message.to) {\n      if (this.emits[message.to]) {\n        this.emits[message.to]('message', message.message);\n      } else {\n        this.debug.warn('Could not deliver message, no such interface: ' + message.to);\n      }\n    } else {\n      var msg = message.message;\n      util.eachProp(this.emits, function (iface) {\n        iface('message', message.message);\n      });\n    }\n  }\n};\n\n/**\n * Create a consumer.Interface associated with this consumer.\n * An interface is returned, which is supplied with important control of the\n * api via constructor arguments: (bound below in getInterfaceConstructor)\n *\n * onMsg: function(binder) sets the function to call when messages for this\n *    interface arrive on the channel,\n * emit: function(msg) allows this interface to emit messages,\n * id: string is the Identifier for this interface.\n * @method getInterface\n */\nConsumer.prototype.getInterface = function () {\n  var Iface = this.getInterfaceConstructor(),\n    args = Array.prototype.slice.call(arguments, 0);\n  if (args.length) {\n    Iface = Iface.bind.apply(Iface, [Iface].concat(args));\n  }\n  return new Iface();\n};\n\n/**\n * Attach an 'onEvent' listener to an interface, allowing external consumers\n * to either listen to channel state, or register callbacks on lifetime events\n * of individual instances of the interface.\n * @method getListener\n * @parma {String} name The event to listen to.\n * @private\n */\nConsumer.prototype.getListener = function (name) {\n  return function (instance, handler) {\n    // Listen to the channel directly.\n    if (typeof instance === 'function' && handler === undefined) {\n      this.once(name, instance);\n      return;\n    }\n\n    // Listen to a specific instance.\n    var handlers = name + 'Handlers';\n    util.eachProp(this.ifaces, function (candidate, id) {\n      if (candidate === instance) {\n        if (this[handlers][id]) {\n          this[handlers][id].push(handler);\n        } else {\n          this[handlers][id] = [handler];\n        }\n        return true;\n      }\n    }.bind(this));\n  }.bind(this);\n};\n\n/**\n * Create a function that can be used to get interfaces from this api consumer\n * from a user-visible point.\n * @method getProxyInterface\n */\nConsumer.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    if (args.length > 0) {\n      return p.getInterface.apply(p, args);\n    } else {\n      return p.getInterface();\n    }\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (candidate, id) {\n        if (candidate === iface) {\n          this.teardown(id);\n          this.emit(this.emitChannel, {\n            type: 'close',\n            to: id\n          });\n          return true;\n        }\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.doClose();\n    }\n  }.bind(this);\n\n  func.onClose = this.getListener('close');\n  func.onError = this.getListener('error');\n\n  return func;\n};\n\n/**\n * Provides a bound class for creating a consumer.Interface associated\n * with this api. This partial level of construction can be used\n * to allow the consumer to be used as a provider for another API.\n * @method getInterfaceConstructor\n * @private\n */\nConsumer.prototype.getInterfaceConstructor = function () {\n  var id = Consumer.nextId();\n  return this.interfaceCls.bind(\n    {},\n    function (id, obj, binder) {\n      this.ifaces[id] = obj;\n      this.emits[id] = binder;\n    }.bind(this, id),\n    this.doEmit.bind(this, id),\n    this.debug\n  );\n};\n\n/**\n * Emit a message on the channel once setup is complete.\n * @method doEmit\n * @private\n * @param {String} to The ID of the flow sending the message.\n * @param {Object} msg The message to emit\n * @param {Boolean} all Send message to all recipients.\n */\nConsumer.prototype.doEmit = function (to, msg, all) {\n  if (all) {\n    to = false;\n  }\n  if (this.emitChannel) {\n    this.emit(this.emitChannel, {to: to, type: 'message', message: msg});\n  } else {\n    this.once('start', this.doEmit.bind(this, to, msg));\n  }\n};\n\n/**\n * Teardown a single interface of this api.\n * @method teardown\n * @param {String} id The id of the interface to tear down.\n */\nConsumer.prototype.teardown = function (id) {\n  if (this.emits[id]) {\n    this.emits[id]('close');\n  }\n  delete this.emits[id];\n  if (this.closeHandlers[id]) {\n    util.eachProp(this.closeHandlers[id], function (prop) {\n      prop();\n    });\n  }\n  delete this.ifaces[id];\n  delete this.closeHandlers[id];\n  delete this.errorHandlers[id];\n};\n\n/**\n * Handle a message error reported to this api.\n * @method error\n * @param {String?} id The id of the interface where the error occured.\n * @param {Object} message The message which failed, if relevant.\n */\nConsumer.prototype.error = function (id, message) {\n  if (id && this.errorHandlers[id]) {\n    util.eachProp(this.errorHandlers[id], function (prop) {\n      prop(message);\n    });\n  } else if (!id) {\n    this.emit('error', message);\n  }\n};\n\n\n/**\n * Close / teardown the flow this api terminates.\n * @method doClose\n */\nConsumer.prototype.doClose = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Channel Closing',\n      request: 'close'\n    });\n  }\n\n  util.eachProp(this.emits, function (emit, id) {\n    this.teardown(id);\n  }.bind(this));\n\n  this.emit('close');\n  this.off();\n\n  this.emitChannel = null;\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return The description of this port.\n */\nConsumer.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Consumer \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Consumer]\";\n  }\n};\n\n/**\n * Get the next ID for an api channel.\n * @method nextId\n * @static\n * @private\n */\nConsumer.nextId = function () {\n  if (!Consumer.id) {\n    Consumer.id = 1;\n  }\n  return (Consumer.id += 1);\n};\n\n/**\n * Convert a structured data structure into a message stream conforming to\n * a template and an array of binary data elements.\n * @static\n * @method messageToPortable\n * @param {Object} template The template to conform to\n * @param {Object} value The instance of the data structure to confrom\n * @param {Debug} debug A debugger for errors.\n * @return {{text: Object, binary: Array}} Separated data streams.\n */\nConsumer.messageToPortable = function (template, value, debug) {\n  var externals = [],\n    message = Consumer.conform(template, value, externals, true, debug);\n  return {\n    text: message,\n    binary: externals\n  };\n};\n\n/**\n * Convert Structured Data streams into a data structure conforming to a\n * template.\n * @static\n * @method portableToMessage\n * @param {Object} template The template to conform to\n * @param {{text: Object, binary: Array}} streams The streams to conform\n * @param {Debug} debug A debugger for errors.\n * @return {Object} The data structure matching the template.\n */\nConsumer.portableToMessage = function (template, streams, debug) {\n  return Consumer.conform(template, streams.text, streams.binary, false, debug);\n};\n\n/**\n * Force a collection of values to look like the types and length of an API\n * template.\n * @static\n * @method conform\n * @param {Object} template The template to conform to\n * @param {Object} from The value to conform\n * @param {Array} externals Listing of binary elements in the template\n * @param {Boolean} Whether to to separate or combine streams.\n * @aparam {Debug} debug A debugger for errors.\n */\nConsumer.conform = function (template, from, externals, separate, debug) {\n  /* jshint -W086 */\n  if (typeof (from) === 'function' && template !== 'proxy') {\n    //from = undefined;\n    //throw \"Trying to conform a function\";\n    debug.error(\"Message discarded as functions can't cross modules!\");\n    return undefined;\n  } else if (typeof (from) === 'undefined') {\n    return undefined;\n  } else if (from === null) {\n    return null;\n  } else if (template === undefined) {\n    debug.error(\"Message discarded for not matching declared type!\", from);\n    return undefined;\n  }\n\n  switch (template) {\n  case 'string':\n    return String('') + from;\n  case 'number':\n    return Number(1) * from;\n  case 'boolean':\n    return Boolean(from === true);\n  case 'object':\n    // TODO(willscott): Allow removal if sandboxing enforces this.\n    if (typeof from === 'undefined') {\n      return undefined;\n    } else {\n      return JSON.parse(JSON.stringify(from));\n    }\n  case 'blob':\n    if (separate) {\n      if (from instanceof Blob) {\n        externals.push(from);\n        return externals.length - 1;\n      } else {\n        debug.error('conform expecting Blob, but saw ' + (typeof from));\n        externals.push(new Blob([]));\n        return externals.length - 1;\n      }\n    } else {\n      return externals[from];\n    }\n  case 'buffer':\n    if (separate) {\n      externals.push(Consumer.makeArrayBuffer(from, debug));\n      return externals.length - 1;\n    } else {\n      return Consumer.makeArrayBuffer(externals[from], debug);\n    }\n  case 'proxy':\n    return from;\n  }\n  var val, i;\n  if (Array.isArray(template) && from !== undefined) {\n    val = [];\n    i = 0;\n    if (template.length === 2 && template[0] === 'array') {\n      //console.log(\"template is array, value is \" + JSON.stringify(value));\n      for (i = 0; i < from.length; i += 1) {\n        val.push(Consumer.conform(template[1], from[i], externals,\n                                  separate, debug));\n      }\n    } else {\n      for (i = 0; i < template.length; i += 1) {\n        if (from[i] !== undefined) {\n          val.push(Consumer.conform(template[i], from[i], externals,\n                                    separate, debug));\n        } else {\n          val.push(undefined);\n        }\n      }\n    }\n    return val;\n  } else if (typeof template === 'object' && from !== undefined) {\n    val = {};\n    util.eachProp(template, function (prop, name) {\n      if (from[name] !== undefined) {\n        val[name] = Consumer.conform(prop, from[name], externals, separate,\n                                     debug);\n      }\n    });\n    return val;\n  }\n  debug.error('Unknown template provided: ' + template);\n};\n\n/**\n * Make a thing into an Array Buffer\n * @static\n * @method makeArrayBuffer\n * @param {Object} thing\n * @param {Debug} debug A debugger in case of errors.\n * @return {ArrayBuffer} An Array Buffer\n */\nConsumer.makeArrayBuffer = function (thing, debug) {\n  if (!thing) {\n    return new ArrayBuffer(0);\n  }\n\n  if (thing instanceof ArrayBuffer) {\n    return thing;\n  } else if (thing.constructor.name === \"ArrayBuffer\" &&\n      typeof thing.prototype === \"undefined\") {\n    // Workaround for webkit origin ownership issue.\n    // https://github.com/UWNetworksLab/freedom/issues/28\n    return new DataView(thing).buffer;\n  } else {\n    debug.error('expecting ArrayBuffer, but saw ' +\n        (typeof thing) + ': ' + JSON.stringify(thing));\n    return new ArrayBuffer(0);\n  }\n};\n\n/**\n * Recursively traverse a [nested] object and freeze its keys from being\n * writable. Note, the result can have new keys added to it, but existing ones\n * cannot be  overwritten. Doesn't do anything for arrays or other collections.\n *\n * @method recursiveFreezeObject\n * @static\n * @param {Object} obj - object to be frozen\n * @return {Object} obj\n **/\nConsumer.recursiveFreezeObject = function (obj) {\n  var k, ret = {};\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      Object.defineProperty(ret, k, {\n        value: Consumer.recursiveFreezeObject(obj[k]),\n        writable: false,\n        enumerable: true\n      });\n    }\n  }\n  return ret;\n};\n\nmodule.exports = Consumer;\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom entry point for debugging.\n * @uses handleEvents\n * @implements Port\n * @constructor\n */\nvar Debug = function (logger) {\n  this.id = 'debug';\n  this.emitChannel = false;\n  this.config = false;\n  util.handleEvents(this);\n};\n\n/**\n * The supported log levels for debugging.\n * @static\n */\nDebug.LEVELS = ['debug', 'info', 'log', 'warn', 'error'];\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the textual description.\n */\nDebug.prototype.toString = function () {\n  return '[Console]';\n};\n\n/**\n * Register a logger for outputting debugging messages.\n * @method setLogger\n * @param {Console} logger The logger to register\n */\nDebug.prototype.setLogger = function (logger) {\n  if (this.logger) {\n    this.info('Replacing Logger.');\n  }\n  this.logger = logger;\n  this.emit('logger');\n};\n\n/**\n * Handler for receiving messages sent to the debug port.\n * These messages are used to retreive config for exposing console.\n * @method onMessage\n * @param {String} source the source identifier for the message.\n * @param {Object} message the received message.\n */\nDebug.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.channel && !this.emitChannel) {\n    this.emitChannel = message.channel;\n    this.config = message.config;\n    if (!this.config.global.console) {\n      if (typeof console !== 'undefined') {\n        this.config.global.console = console;\n      } else {\n        this.config.global.console = this.getLogger('Console');\n      }\n    }\n    this.emit('ready');\n  }\n};\n\n/**\n * Dispatch a debug message with arbitrary severity.\n * All debug messages are routed through the manager, to allow for delegation.\n * @method format\n * @param {String} severity the severity of the message.\n * @param {String} source The location of message.\n * @param {String[]} args The contents of the message.\n * @private\n */\nDebug.prototype.format = function (severity, source, args) {\n  var i, alist = [], argarr;\n  if (typeof args === \"string\" && source) {\n    try {\n      argarr = JSON.parse(args);\n      if (argarr instanceof Array) {\n        args = argarr;\n      }\n    } catch (e) {\n      // pass.\n    }\n  }\n\n  if (typeof args === \"string\") {\n    alist.push(args);\n  } else {\n    for (i = 0; i < args.length; i += 1) {\n      alist.push(args[i]);\n    }\n  }\n  if (!this.emitChannel) {\n    this.on('ready', this.format.bind(this, severity, source, alist));\n    return;\n  }\n  this.emit(this.emitChannel, {\n    severity: severity,\n    source: source,\n    quiet: true,\n    request: 'debug',\n    msg: JSON.stringify(alist)\n  });\n};\n\n/**\n * Print received messages on the console.\n * This is called by the manager in response to an emission from format.\n * @method print\n * @param {Object} message The message emitted by {@see format} to print.\n */\nDebug.prototype.print = function (message) {\n  if (!this.logger) {\n    this.once('logger', this.print.bind(this, message));\n    return;\n  }\n\n  var args, arr = [], i = 0;\n  args = JSON.parse(message.msg);\n  if (typeof args === \"string\") {\n    arr.push(args);\n  } else {\n    while (args[i] !== undefined) {\n      arr.push(args[i]);\n      i += 1;\n    }\n  }\n  this.logger[message.severity].call(this.logger, message.source, arr, function () {});\n};\n\n/**\n * Print a log message to the console.\n * @method log\n */\nDebug.prototype.log = function () {\n  this.format('log', undefined, arguments);\n};\n\n/**\n * Print an info message to the console.\n * @method log\n */\nDebug.prototype.info = function () {\n  this.format('info', undefined, arguments);\n};\n\n/**\n * Print a debug message to the console.\n * @method log\n */\nDebug.prototype.debug = function () {\n  this.format('debug', undefined, arguments);\n};\n\n/**\n * Print a warning message to the console.\n * @method warn\n */\nDebug.prototype.warn = function () {\n  this.format('warn', undefined, arguments);\n};\n\n/**\n * Print an error message to the console.\n * @method error\n */\nDebug.prototype.error = function () {\n  this.format('error', undefined, arguments);\n};\n\n/**\n * Get a logger that logs messages prefixed by a given name.\n * @method getLogger\n * @param {String} name The prefix for logged messages.\n * @returns {Console} A console-like object.\n */\nDebug.prototype.getLogger = function (name) {\n  var log = function (severity, source) {\n    var args = Array.prototype.splice.call(arguments, 2);\n    this.format(severity, source, args);\n  },\n    logger = {\n      freedom: true\n    };\n  Debug.LEVELS.forEach(function (level) {\n    logger[level] = log.bind(this, level, name);\n  }.bind(this));\n  return logger;\n};\n\n/**\n * Create a synchronous 'getLogger' method that binds around an asynchronous\n * logger by creating a buffer until the asynchronous logger is resolved.\n * @see {ModuleInternal.loadLinks} for where this method is bound to the created\n *     external interface.\n * @method getLoggingShim\n * @param {Function} asyncMethod The wrapper to 'getLogger'\n */\nDebug.prototype.getLoggingShim = function (asyncMethod) {\n  return function getLogggerSync(name) {\n    var toResolve = asyncMethod(name),\n      buffer = [],\n      methods = Debug.LEVELS,\n      backing = null,\n      ret = {};\n    toResolve.then(function (logger) {\n      backing = logger;\n      buffer.forEach(function (item) {\n        backing[item[0]].apply(backing, item[1]);\n      });\n    });\n    methods.forEach(function (mthd) {\n      ret[mthd] = function() {\n        var args = Array.prototype.splice.call(arguments, 0);\n        if (backing) {\n          backing[this].apply(backing, args);\n        } else {\n          buffer.push([this, args]);\n        }\n      }.bind(mthd);\n    });\n    return ret;\n  };\n};\n\nmodule.exports = Debug;\n","/*jslint indent:2,node:true */\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\nvar Api = require('./api');\r\nvar Debug = require('./debug');\r\nvar Hub = require('./hub');\r\nvar Manager = require('./manager');\r\nvar Policy = require('./policy');\r\nvar ProxyBinder = require('./proxybinder');\r\nvar Resource = require('./resource');\r\nvar util = require('./util');\r\nvar Bundle = require('./bundle');\r\n\r\nvar freedomGlobal;\r\nvar getGlobal = function () {\r\n  'use strict';\r\n  \r\n  // Node.js\r\n  if (typeof global !== 'undefined' && global.prototype === undefined) {\r\n    freedomGlobal = global;\r\n  // Browsers\r\n  } else {\r\n    setTimeout(function () {\r\n      freedomGlobal = this;\r\n    }, 0);\r\n  }\r\n};\r\ngetGlobal();\r\n\r\n/**\r\n * Create a new freedom context.\r\n * @param {Object} context Information about the local context.\r\n * @see {util/workerEntry.js}\r\n * @param {String} manifest The manifest to load.\r\n * @param {Object} config Configuration keys set by the user.\r\n * @returns {Promise} A promise for the module defined in the manifest.\r\n */\r\nvar setup = function (context, manifest, config) {\r\n  'use strict';\r\n  var debug = new Debug(),\r\n    hub = new Hub(debug),\r\n    resource = new Resource(debug),\r\n    api = new Api(debug),\r\n    manager = new Manager(hub, resource, api),\r\n    binder = new ProxyBinder(manager),\r\n    policy,\r\n    site_cfg = {\r\n      'debug': 'log',\r\n      'manifest': manifest,\r\n      'moduleContext': (!context || typeof (context.isModule) === \"undefined\") ?\r\n          util.isModuleContext() :\r\n          context.isModule\r\n    },\r\n    link,\r\n    Port,\r\n    cleanup = function () {\r\n      api.cleanup();\r\n      manager.destroy();\r\n    };\r\n\r\n  if (config) {\r\n    util.mixin(site_cfg, config, true);\r\n  }\r\n  site_cfg.global = freedomGlobal;\r\n  if (context) {\r\n    util.mixin(site_cfg, context, true);\r\n  }\r\n\r\n  // Register user-supplied extensions.\r\n  // For example the 'core.oauth' provider defines a register function,\r\n  // which enables site_cfg.oauth to be registered with it.\r\n  context.providers.forEach(function (provider) {\r\n    var name;\r\n    if (provider.name.indexOf('core.') === 0 &&\r\n        typeof provider.register === 'function') {\r\n      name = provider.name.substr(5);\r\n      // Invert priority and prefer user config over local context for these.\r\n      if (config && config[name]) {\r\n        provider.register(config[name]);\r\n      } else if (site_cfg[name]) {\r\n        provider.register(site_cfg[name]);\r\n      } else {\r\n        provider.register(undefined);\r\n      }\r\n    }\r\n  });\r\n  \r\n  Bundle.register(context.providers, api);\r\n  resource.register(context.resolvers || []);\r\n\r\n  return new PromiseCompat(function (resolve, reject) {\r\n    if (site_cfg.moduleContext) {\r\n      Port = site_cfg.portType;\r\n      link = new Port('Outbound', resource);\r\n      manager.setup(link);\r\n\r\n      // Delay debug messages until delegation to the parent context is setup.\r\n      manager.once('delegate', manager.setup.bind(manager, debug));\r\n    } else {\r\n      manager.setup(debug);\r\n      policy = new Policy(manager, resource, site_cfg);\r\n\r\n      // Define how to load a root module.\r\n      var fallbackLogger, getIface;\r\n      fallbackLogger = function (message) {\r\n        api.getCore('core.console', {\r\n          config: site_cfg\r\n        }).then(function (provider) {\r\n          var logger = new provider.inst();\r\n          debug.setLogger(logger);\r\n          if (message) {\r\n            debug.error(message);\r\n          }\r\n        });\r\n      };\r\n      getIface = function (manifest) {\r\n        return resource.get(site_cfg.location, manifest).then(\r\n          function (canonical_manifest) {\r\n            return policy.get([], canonical_manifest);\r\n          }\r\n        ).then(function (instance) {\r\n          manager.setup(instance);\r\n          return binder.bindDefault(instance, api, instance.manifest);\r\n        });\r\n      };\r\n\r\n      // Load appropriate Logger.\r\n      if (site_cfg.logger) {\r\n        getIface(site_cfg.logger).then(function (iface) {\r\n          if (iface.external.api !== 'console') {\r\n            fallbackLogger(\"Unwilling to use logger with unknown API:\",\r\n              iface.external.api);\r\n          } else {\r\n            debug.setLogger(iface.external());\r\n          }\r\n        }, fallbackLogger);\r\n      } else {\r\n        fallbackLogger();\r\n      }\r\n\r\n      // Load root module.\r\n      getIface(site_cfg.manifest).then(function (iface) {\r\n        iface.port.once('close', cleanup);\r\n        return iface.external;\r\n      }, function (err) {\r\n        debug.error('Failed to retrieve manifest: ' + err);\r\n        throw err;\r\n      }).then(resolve, reject);\r\n    }\r\n\r\n    hub.emit('config', site_cfg);\r\n  });\r\n};\r\n\r\nmodule.exports = setup;\r\n","/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('./util');\r\n\r\n/**\r\n * Defines fdom.Hub, the core message hub between freedom modules.\r\n * Incomming messages from apps are sent to hub.onMessage()\r\n * @class Hub\r\n * @param {Debug} debug Logger for debugging.\r\n * @constructor\r\n */\r\nvar Hub = function (debug) {\r\n  this.debug = debug;\r\n  this.config = {};\r\n  this.apps = {};\r\n  this.routes = {};\r\n\r\n  util.handleEvents(this);\r\n  this.on('config', function (config) {\r\n    util.mixin(this.config, config);\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * Handle an incoming message from a freedom app.\r\n * @method onMessage\r\n * @param {String} source The identifiying source of the message.\r\n * @param {Object} message The sent message.\r\n */\r\nHub.prototype.onMessage = function (source, message) {\r\n  var destination = this.routes[source], type;\r\n  if (!destination || !destination.app) {\r\n    this.debug.warn(\"Message dropped from unregistered source \" + source);\r\n    return;\r\n  }\r\n\r\n  if (!this.apps[destination.app]) {\r\n    this.debug.warn(\"Message dropped to destination \" + destination.app);\r\n    return;\r\n  }\r\n\r\n  // The firehose tracing all internal freedom.js messages.\r\n  if (!message.quiet && !destination.quiet && this.config && this.config.trace) {\r\n    type = message.type;\r\n    if (message.type === 'message' && message.message &&\r\n        message.message.action === 'method') {\r\n      type = 'method.' + message.message.type;\r\n    } else if (message.type === 'method' && message.message &&\r\n        message.message.type === 'method') {\r\n      type = 'return.' + message.message.name;\r\n    } else if (message.type === 'message' && message.message &&\r\n        message.message.type === 'event') {\r\n      type = 'event.' + message.message.name;\r\n    }\r\n    this.debug.debug(this.apps[destination.source].toString() +\r\n        \" -\" + type + \"-> \" +\r\n        this.apps[destination.app].toString() + \".\" + destination.flow);\r\n  }\r\n\r\n  this.apps[destination.app].onMessage(destination.flow, message);\r\n};\r\n\r\n/**\r\n * Get the local destination port of a flow.\r\n * @method getDestination\r\n * @param {String} source The flow to retrieve.\r\n * @return {Port} The destination port.\r\n */\r\nHub.prototype.getDestination = function (source) {\r\n  var destination = this.routes[source];\r\n  if (!destination) {\r\n    return null;\r\n  }\r\n  return this.apps[destination.app];\r\n};\r\n\r\n/**\r\n * Get the local source port of a flow.\r\n * @method getSource\r\n * @param {Port} source The flow identifier to retrieve.\r\n * @return {Port} The source port.\r\n */\r\nHub.prototype.getSource = function (source) {\r\n  if (!source) {\r\n    return false;\r\n  }\r\n  if (!this.apps[source.id]) {\r\n    this.debug.warn(\"No registered source '\" + source.id + \"'\");\r\n    return false;\r\n  }\r\n  return this.apps[source.id];\r\n};\r\n\r\n/**\r\n * Register a destination for messages with this hub.\r\n * @method register\r\n * @param {Port} app The Port to register.\r\n * @param {Boolean} [force] Whether to override an existing port.\r\n * @return {Boolean} Whether the app was registered.\r\n */\r\nHub.prototype.register = function (app, force) {\r\n  if (!this.apps[app.id] || force) {\r\n    this.apps[app.id] = app;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Deregister a destination for messages with the hub.\r\n * Note: does not remove associated routes. As such, deregistering will\r\n * prevent the installation of new routes, but will not distrupt existing\r\n * hub routes.\r\n * @method deregister\r\n * @param {Port} app The Port to deregister\r\n * @return {Boolean} Whether the app was deregistered.\r\n */\r\nHub.prototype.deregister = function (app) {\r\n  if (!this.apps[app.id]) {\r\n    return false;\r\n  }\r\n  delete this.apps[app.id];\r\n  return true;\r\n};\r\n\r\n/**\r\n * Install a new route in the hub.\r\n * @method install\r\n * @param {Port} source The source of the route.\r\n * @param {Port} destination The destination of the route.\r\n * @param {String} flow The flow where the destination will receive messages.\r\n * @param {Boolean} quiet Whether messages on this route should be suppressed.\r\n * @return {String} A routing source identifier for sending messages.\r\n */\r\nHub.prototype.install = function (source, destination, flow, quiet) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n  if (!destination) {\r\n    this.debug.warn(\"Unwilling to generate blackhole flow from \" + source.id);\r\n    return;\r\n  }\r\n\r\n  var route = this.generateRoute();\r\n  this.routes[route] = {\r\n    app: destination,\r\n    flow: flow,\r\n    source: source.id,\r\n    quiet: quiet\r\n  };\r\n  if (typeof source.on === 'function') {\r\n    source.on(route, this.onMessage.bind(this, route));\r\n  }\r\n\r\n  return route;\r\n};\r\n\r\n/**\r\n * Uninstall a hub route.\r\n * @method uninstall\r\n * @param {Port} source The source of the route.\r\n * @param {String} flow The route to uninstall.\r\n * @return {Boolean} Whether the route was able to be uninstalled.\r\n */\r\nHub.prototype.uninstall = function (source, flow) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n\r\n  var route = this.routes[flow];\r\n  if (!route) {\r\n    return false;\r\n  } else if (route.source !== source.id) {\r\n    this.debug.warn(\"Flow \" + flow + \" does not belong to port \" + source.id);\r\n    return false;\r\n  }\r\n\r\n  delete this.routes[flow];\r\n  if (typeof source.off === 'function') {\r\n    source.off(route);\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Remove all listeners and notify all connected destinations of their removal.\r\n * @method teardown\r\n */\r\nHub.prototype.teardown = function () {\r\n  util.eachProp(this.apps, function (source) {\r\n    if (typeof source.off === 'function') {\r\n      source.off();\r\n    }\r\n  });\r\n  this.apps = {};\r\n  this.routes = {};\r\n};\r\n\r\n/**\r\n * Generate a unique routing identifier.\r\n * @method generateRoute\r\n * @return {String} a routing source identifier.\r\n * @private\r\n */\r\nHub.prototype.generateRoute = function () {\r\n  return util.getId();\r\n};\r\n\r\nmodule.exports = Hub;\r\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A link connects two freedom hubs. This is an abstract class\n * providing common functionality of translating control channels,\n * and integrating config information.\n * @class Link\n * @implements Port\n * @constructor\n */\nvar Link = function (name, resource) {\n  this.id = 'Link' + Math.random();\n  this.name = name;\n  this.resource = resource;\n  this.config = {};\n  this.src = null;\n\n  util.handleEvents(this);\n  util.mixin(this, Link.prototype);\n};\n\n/**\n * Receive messages from the hub to this port.\n * Manages startup, and passes others to 'deliverMessage' implemented\n * in derived classes.\n * @method onMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nLink.prototype.onMessage = function (flow, message) {\n  if (flow === 'control' && !this.controlChannel) {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.start();\n    }\n  } else {\n    this.deliverMessage(flow, message);\n  }\n};\n\n/**\n * Register a handler to alert of errors on this port.\n * @method addErrorHandler\n * @param {Function} handler Method to call with errors.\n */\nLink.prototype.addErrorHandler = function (handler) {\n  this.onError = handler;\n};\n\n/**\n * Report an error on this link.\n * @method onerror\n * @param {Error} err The error that occurred.\n */\nLink.prototype.onError = function (err) {\n  //Filled in by addErrorHandler\n};\n\n/**\n * Emit messages to the the hub, mapping control channels.\n * @method emitMessage\n * @param {String} flow the flow to emit the message on.\n * @param {Object} messgae The message to emit.\n */\nLink.prototype.emitMessage = function (flow, message) {\n  if (flow === 'control' && this.controlChannel) {\n    flow = this.controlChannel;\n  }\n  this.emit(flow, message);\n};\n\nmodule.exports = Link;\n","/*globals Worker */\n/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar Link = require('../link');\n\n/**\n * A port providing message transport between two freedom contexts via Worker.\n * @class Worker\n * @extends Link\n * @uses handleEvents\n * @constructor\n */\nvar WorkerLink = function(id, resource) {\n  Link.call(this, id, resource);\n  if (id) {\n    this.id = id;\n  }\n};\n\n/**\n * Start this port by listening or creating a worker.\n * @method start\n * @private\n */\nWorkerLink.prototype.start = function() {\n  if (this.config.moduleContext) {\n    this.setupListener();\n  } else {\n    this.setupWorker();\n  }\n};\n\n/**\n * Stop this port by destroying the worker.\n * @method stop\n * @private\n */\nWorkerLink.prototype.stop = function() {\n  // Function is determined by setupListener or setupFrame as appropriate.\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nWorkerLink.prototype.toString = function() {\n  return \"[Worker \" + this.id + \"]\";\n};\n\n/**\n * Set up a global listener to handle incoming messages to this\n * freedom.js context.\n * @method setupListener\n */\nWorkerLink.prototype.setupListener = function() {\n  var onMsg = function(msg) {\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this);\n  this.obj = this.config.global;\n  this.obj.addEventListener('message', onMsg, true);\n  this.stop = function() {\n    this.obj.removeEventListener('message', onMsg, true);\n    delete this.obj;\n  };\n  this.emit('started');\n  this.obj.postMessage(\"Ready For Messages\");\n};\n\n/**\n * Set up a worker with an isolated freedom.js context inside.\n * @method setupWorker\n */\nWorkerLink.prototype.setupWorker = function() {\n  var worker,\n    blob,\n    self = this;\n  worker = new Worker(this.config.source + '#' + this.id);\n\n  worker.addEventListener('error', function(err) {\n    this.onError(err);\n  }.bind(this), true);\n  worker.addEventListener('message', function(worker, msg) {\n    if (!this.obj) {\n      this.obj = worker;\n      this.emit('started');\n      return;\n    }\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this, worker), true);\n  this.stop = function() {\n    worker.terminate();\n    if (this.obj) {\n      delete this.obj;\n    }\n  };\n};\n\n/**\n * Receive messages from the hub to this port.\n * Received messages will be emitted from the other side of the port.\n * @method deliverMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nWorkerLink.prototype.deliverMessage = function(flow, message) {\n  if (flow === 'control' && message.type === 'close' &&\n      message.channel === 'control') {\n    this.stop();\n  } else {\n    if (this.obj) {\n      this.obj.postMessage({\n        flow: flow,\n        message: message\n      });\n    } else {\n      this.once('started', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\nmodule.exports = WorkerLink;\n\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar ModuleInternal = require('./moduleinternal');\n\n/**\n * A freedom port which manages the control plane of of changing hub routes.\n * @class Manager\n * @implements Port\n * @param {Hub} hub The routing hub to control.\n * @param {Resource} resource The resource manager for the runtime.\n * @param {Api} api The API manager for the runtime.\n * @constructor\n */\nvar Manager = function (hub, resource, api) {\n  this.id = 'control';\n  this.config = {};\n  this.controlFlows = {};\n  this.dataFlows = {};\n  this.dataFlows[this.id] = [];\n  this.reverseFlowMap = {};\n\n  this.debug = hub.debug;\n  this.hub = hub;\n  this.resource = resource;\n  this.api = api;\n\n  this.delegate = null;\n  this.toDelegate = {};\n\n  this.hub.on('config', function (config) {\n    util.mixin(this.config, config);\n    this.emit('config');\n  }.bind(this));\n\n  util.handleEvents(this);\n  this.hub.register(this);\n};\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nManager.prototype.toString = function () {\n  return \"[Local Controller]\";\n};\n\n/**\n * Process messages sent to this port.\n * The manager, or 'control' destination handles several types of messages,\n * identified by the request property.  The actions are:\n * 1. debug. Prints the message to the console.\n * 2. link. Creates a link between the source and a provided destination port.\n * 3. environment. Instantiate a module environment defined in ModuleInternal.\n * 4. delegate. Routes a defined set of control messages to another location.\n * 5. resource. Registers the source as a resource resolver.\n * 6. core. Generates a core provider for the requester.\n * 7. close. Tears down routes involing the requesting port.\n * 8. unlink. Tears down a route from the requesting port.\n * @method onMessage\n * @param {String} flow The source identifier of the message.\n * @param {Object} message The received message.\n */\nManager.prototype.onMessage = function (flow, message) {\n  var reverseFlow = this.controlFlows[flow], origin;\n  if (!reverseFlow) {\n    this.debug.warn(\"Unknown message source: \" + flow);\n    return;\n  }\n  origin = this.hub.getDestination(reverseFlow);\n\n  if (this.delegate && reverseFlow !== this.delegate &&\n      this.toDelegate[flow]) {\n    // Ship off to the delegee\n    this.emit(this.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      quiet: true,\n      flow: flow,\n      message: message\n    });\n    return;\n  }\n\n  if (message.request === 'debug') {\n    this.debug.print(message);\n    return;\n  }\n\n  if (message.request === 'link') {\n    this.createLink(origin, message.name, message.to, message.overrideDest);\n  } else if (message.request === 'environment') {\n    this.createLink(origin, message.name, new ModuleInternal(this));\n  } else if (message.request === 'delegate') {\n    // Initate Delegation.\n    if (this.delegate === null) {\n      this.delegate = reverseFlow;\n    }\n    this.toDelegate[message.flow] = true;\n    this.emit('delegate');\n  } else if (message.request === 'resource') {\n    this.resource.addResolver(message.args[0]);\n    this.resource.addRetriever(message.service, message.args[1]);\n  } else if (message.request === 'core') {\n    if (this.core && reverseFlow === this.delegate) {\n      (new this.core()).onMessage(origin, message.message);\n      return;\n    }\n    this.getCore(function (to, core) {\n      this.hub.onMessage(to, {\n        type: 'core',\n        core: core\n      });\n    }.bind(this, reverseFlow));\n  } else if (message.request === 'close') {\n    this.destroy(origin);\n  } else if (message.request === 'unlink') {\n    this.removeLink(origin, message.to);\n  } else {\n    this.debug.warn(\"Unknown control request: \" + message.request);\n    this.debug.log(JSON.stringify(message));\n    return;\n  }\n};\n\n/**\n * Get the port messages will be routed to given its id.\n * @method getPort\n * @param {String} portId The ID of the port.\n * @returns {fdom.Port} The port with that ID.\n */\nManager.prototype.getPort = function (portId) {\n  return this.hub.getDestination(this.controlFlows[portId]);\n};\n\n/**\n * Set up a port with the hub.\n * @method setup\n * @param {Port} port The port to register.\n */\nManager.prototype.setup = function (port) {\n  if (!port.id) {\n    this.debug.warn(\"Refusing to setup unidentified port \");\n    return false;\n  }\n\n  if (this.controlFlows[port.id]) {\n    this.debug.warn(\"Refusing to re-initialize port \" + port.id);\n    return false;\n  }\n\n  if (!this.config.global) {\n    this.once('config', this.setup.bind(this, port));\n    return;\n  }\n\n  this.hub.register(port);\n  var flow = this.hub.install(this, port.id, \"control\"),\n    reverse = this.hub.install(port, this.id, port.id);\n  this.controlFlows[port.id] = flow;\n  this.dataFlows[port.id] = [reverse];\n  this.reverseFlowMap[flow] = reverse;\n  this.reverseFlowMap[reverse] = flow;\n\n  if (port.lineage) {\n    this.emit('moduleAdd', {id: port.id, lineage: port.lineage});\n  }\n\n  this.hub.onMessage(flow, {\n    type: 'setup',\n    channel: reverse,\n    config: this.config\n  });\n\n  return true;\n};\n\n/**\n * Tear down a port on the hub, or the full local hub.\n * @method destroy\n * @apram {Port?} port The port to unregister.\n */\nManager.prototype.destroy = function (port) {\n  if (!port) {\n    // Tear down everything!\n    util.eachProp(this.controlFlows, function (flow) {\n      this.hub.onMessage(flow, {\n        type: 'close'\n      });\n    }.bind(this));\n    this.hub.teardown();\n    return;\n  }\n\n  if (!port.id) {\n    this.debug.warn(\"Unable to tear down unidentified port\");\n    return false;\n  }\n\n  if (port.lineage) {\n    this.emit('moduleRemove', {id: port.id, lineage: port.lineage});\n  }\n\n  // Remove the port.\n  delete this.controlFlows[port.id];\n\n  // Remove associated links.\n  var i;\n  for (i = this.dataFlows[port.id].length - 1; i >= 0; i -= 1) {\n    this.removeLink(port, this.dataFlows[port.id][i]);\n  }\n\n  // Remove the port.\n  delete this.dataFlows[port.id];\n  this.hub.deregister(port);\n};\n\n/**\n * Create a link between two ports.  Links are created in both directions,\n * and a message with those capabilities is sent to the source port.\n * @method createLink\n * @param {Port} port The source port.\n * @param {String} name The flow for messages from destination to port.\n * @param {Port} destination The destination port.\n * @param {String} [destName] The flow name for messages to the destination.\n * @param {Boolean} [toDest] Tell the destination about the link.\n */\nManager.prototype.createLink = function (port, name, destination, destName,\n                                         toDest) {\n  if (!this.config.global) {\n    this.once('config',\n      this.createLink.bind(this, port, name, destination, destName));\n    return;\n  }\n\n  if (!this.controlFlows[port.id]) {\n    this.debug.warn('Unwilling to link from non-registered source.');\n    return;\n  }\n\n  if (!this.controlFlows[destination.id]) {\n    if (this.setup(destination) === false) {\n      this.debug.warn('Could not find or setup destination.');\n      return;\n    }\n  }\n  var quiet = destination.quiet || false,\n    outgoingName = destName || 'default',\n    outgoing = this.hub.install(port, destination.id, outgoingName, quiet),\n    reverse;\n\n  // Recover the port so that listeners are installed.\n  destination = this.hub.getDestination(outgoing);\n  reverse = this.hub.install(destination, port.id, name, quiet);\n\n  this.reverseFlowMap[outgoing] = reverse;\n  this.dataFlows[port.id].push(outgoing);\n  this.reverseFlowMap[reverse] = outgoing;\n  this.dataFlows[destination.id].push(reverse);\n\n  if (toDest) {\n    this.hub.onMessage(this.controlFlows[destination.id], {\n      type: 'createLink',\n      name: outgoingName,\n      channel: reverse,\n      reverse: outgoing\n    });\n  } else {\n    this.hub.onMessage(this.controlFlows[port.id], {\n      name: name,\n      type: 'createLink',\n      channel: outgoing,\n      reverse: reverse\n    });\n  }\n};\n\n/**\n * Remove a link between to ports. The reverse link will also be removed.\n * @method removeLink\n * @param {Port} port The source port.\n * @param {String} name The flow to be removed.\n */\nManager.prototype.removeLink = function (port, name) {\n  var reverse = this.hub.getDestination(name),\n    rflow = this.reverseFlowMap[name],\n    i;\n\n  if (!reverse || !rflow) {\n    this.debug.warn(\"Could not find metadata to remove flow: \" + name);\n    return;\n  }\n\n  if (this.hub.getDestination(rflow).id !== port.id) {\n    this.debug.warn(\"Source port does not own flow \" + name);\n    return;\n  }\n\n  // Notify ports that a channel is closing.\n  i = this.controlFlows[port.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: name\n    });\n  }\n  i = this.controlFlows[reverse.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: rflow\n    });\n  }\n\n  // Uninstall the channel.\n  this.hub.uninstall(port, name);\n  this.hub.uninstall(reverse, rflow);\n\n  delete this.reverseFlowMap[name];\n  delete this.reverseFlowMap[rflow];\n  this.forgetFlow(reverse.id, rflow);\n  this.forgetFlow(port.id, name);\n};\n\n/**\n * Forget the flow from id with a given name.\n * @method forgetFlow\n * @private\n * @param {String} id The port ID of the source.\n * @param {String} name The flow name.\n */\nManager.prototype.forgetFlow = function (id, name) {\n  var i;\n  if (this.dataFlows[id]) {\n    for (i = 0; i < this.dataFlows[id].length; i += 1) {\n      if (this.dataFlows[id][i] === name) {\n        this.dataFlows[id].splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Get the core freedom.js API active on the current hub.\n * @method getCore\n * @private\n * @param {Function} cb Callback to fire with the core object.\n */\nManager.prototype.getCore = function (cb) {\n  if (this.core) {\n    cb(this.core);\n  } else {\n    this.api.getCore('core', this).then(function (core) {\n      this.core = core.inst;\n      cb(this.core);\n    }.bind(this), function () {\n      cb(undefined);\n    });\n  }\n};\n\nmodule.exports = Manager;\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar Provider = require('./provider');\n\n/**\n * The external Port face of a module on a hub.\n * @class Module\n * @extends Port\n * @param {String} manifestURL The manifest this module loads.\n * @param {String[]} creator The lineage of creation for this module.\n * @param {Policy} Policy The policy loader for dependencies.\n * @constructor\n */\nvar Module = function (manifestURL, manifest, creator, policy) {\n  this.api = policy.api;\n  this.policy = policy;\n  this.resource = policy.resource;\n  this.debug = policy.debug;\n\n  this.config = {};\n\n  this.id = manifestURL + Math.random();\n  this.manifestId = manifestURL;\n  this.manifest = manifest;\n  this.lineage = [this.manifestId].concat(creator);\n\n  this.quiet = this.manifest.quiet || false;\n\n  this.externalPortMap = {};\n  this.internalPortMap = {};\n  this.dependantChannels = [];\n  // Map from dependency names to target URLs, from this module's manifest.\n  this.dependencyUrls = {};\n  // Map from depenency names to arrays of pending messages.  Once a\n  // dependency is fully started, the pending messages will be drained and its\n  // entry in this map will be deleted.\n  this.pendingMessages = {};\n  this.started = false;\n  this.failed = false;\n\n  util.handleEvents(this);\n};\n\n/**\n * Receive a message for the Module.\n * @method onMessage\n * @param {String} flow The origin of the message.\n * @param {Object} message The message received.\n */\nModule.prototype.onMessage = function (flow, message) {\n  if (this.failed && message.to) {\n    // We've attempted to load the module and failed, so short-circuit any\n    // messages bound for the provider, and respond with an error reply instead.\n    // This error is handled in Consumer, resulting in triggering the\n    // freedom['moduleName'].onError listeners.\n    this.emit(this.externalPortMap[flow], {\n      type: 'error',\n    });\n    return;\n  }\n  if (flow === 'control') {\n    if (message.type === 'setup') {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.emit(this.controlChannel, {\n        type: 'Core Provider',\n        request: 'core'\n      });\n      this.start();\n      return;\n    } else if (message.type === 'createLink' && message.channel) {\n      this.debug.debug(this + 'got create link for ' + message.name);\n      this.externalPortMap[message.name] = message.channel;\n      if (this.internalPortMap[message.name] === undefined) {\n        this.internalPortMap[message.name] = false;\n      }\n      var msg = {\n        type: 'default channel announcement',\n        channel: message.reverse\n      };\n      if (this.manifest.dependencies &&\n          this.manifest.dependencies[message.name]) {\n        msg.api = this.manifest.dependencies[message.name].api;\n      }\n      this.emit(message.channel, msg);\n      this.drainPendingMessages(message.name);\n      return;\n    } else if (message.core) {\n      this.core = new message.core();\n      this.emit('core', message.core);\n      return;\n    } else if (message.type === 'close') {\n      // Closing channel.\n      if (!message.channel || message.channel === 'control') {\n        this.stop();\n      }\n      this.deregisterFlow(message.channel, false);\n    } else {\n      this.port.onMessage(flow, message);\n    }\n  } else {\n    if ((this.externalPortMap[flow] === false ||\n        !this.externalPortMap[flow]) && message.channel) {\n      this.debug.debug(this + 'handling channel announcement for ' + flow);\n      this.externalPortMap[flow] = message.channel;\n      if (this.internalPortMap[flow] === undefined) {\n        this.internalPortMap[flow] = false;\n\n        // New incoming connection attempts should get routed to modInternal.\n        if (this.manifest.provides && this.modInternal) {\n          this.port.onMessage(this.modInternal, {\n            type: 'Connection',\n            channel: flow,\n            api: message.api\n          });\n        } else if (this.manifest.provides) {\n          this.once('modInternal', function (flow, api) {\n            this.port.onMessage(this.modInternal, {\n              type: 'Connection',\n              channel: flow,\n              api: api\n            });\n          }.bind(this, flow, message.api));\n        // First connection retains legacy mapping as 'default'.\n        } else if (!this.externalPortMap['default'] && message.channel) {\n          this.externalPortMap['default'] = message.channel;\n          this.once('internalChannelReady', function (flow) {\n            this.internalPortMap[flow] = this.internalPortMap['default'];\n          }.bind(this, flow));\n        }\n      }\n      this.drainPendingMessages(message.name);\n      return;\n    } else if (!this.started) {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    } else {\n      if (this.internalPortMap[flow] === false) {\n        console.warn('waiting on internal channel for msg');\n        this.once('internalChannelReady', this.onMessage.bind(this, flow, message));\n      } else if (!this.internalPortMap[flow]) {\n        this.debug.error('Unexpected message from ' + flow);\n        return;\n      } else {\n        this.port.onMessage(this.internalPortMap[flow], message);\n      }\n    }\n  }\n};\n\n/**\n * Store a pending message for a flow that isn't ready yet.  The message will\n * be sent in-order by drainPendingMessages when the flow becomes ready.  This\n * is used to ensure messages are not lost while the target module is loading.\n * @method addPendingMessage\n * @param {String} name The flow to store a message for.\n * @param {Object} message The message to store.\n * @private\n */\nModule.prototype.addPendingMessage = function (name, message) {\n  if (!this.pendingMessages[name]) {\n    this.pendingMessages[name] = [];\n  }\n  this.pendingMessages[name].push(message);\n};\n\n/**\n * Send all pending messages for a flow that is now ready.  The messages will\n * be sent in-order.  This is used to ensure messages are not lost while the\n * target module is loading.\n * @method addPendingMessage\n * @param {String} name The flow to send pending messages.\n * @private\n */\nModule.prototype.drainPendingMessages = function (name) {\n  if (!this.pendingMessages[name]) {\n    return;\n  }\n  this.pendingMessages[name].forEach(\n      this.emit.bind(this, this.externalPortMap[name]));\n  delete this.pendingMessages[name];\n};\n\n/**\n * Clean up after a flow which is no longer used / needed.\n * @method deregisterFLow\n * @param {String} flow The flow to remove mappings for.\n * @param {Boolean} internal If the flow name is the internal identifier.\n * @returns {Boolean} Whether the flow was successfully deregistered.\n * @private\n */\nModule.prototype.deregisterFlow = function (flow, internal) {\n  var key,\n    map = internal ? this.internalPortMap : this.externalPortMap;\n  // TODO: this is inefficient, but seems less confusing than a 3rd\n  // reverse lookup map.\n  for (key in map) {\n    if (map[key] === flow) {\n      if (internal) {\n        this.emit(this.controlChannel, {\n          type: 'Channel Teardown',\n          request: 'unlink',\n          to: this.externalPortMap[key]\n        });\n      } else if (this.port) {\n        this.port.onMessage('control', {\n          type: 'close',\n          channel: this.internalPortMap[key]\n        });\n      }\n      delete this.externalPortMap[key];\n      delete this.internalPortMap[key];\n\n      // When there are still non-dependant channels, keep running\n      for (key in this.externalPortMap) {\n        if (this.externalPortMap.hasOwnProperty(key)) {\n          if (this.dependantChannels.indexOf(key) < 0) {\n            return true;\n          }\n        }\n      }\n      // Otherwise shut down the module.\n      this.stop();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Attempt to start the module once the remote freedom context\n * exists.\n * @method start\n * @private\n */\nModule.prototype.start = function () {\n  var Port;\n  if (this.started || this.port) {\n    return false;\n  }\n  if (this.controlChannel) {\n    this.loadLinks();\n    Port = this.config.portType;\n    this.port = new Port(this.manifest.name, this.resource);\n    // Listen to all port messages.\n    this.port.on(this.emitMessage.bind(this));\n    this.port.addErrorHandler(function (err) {\n      this.debug.warn('Module Failed', err);\n      this.failed = true;\n      this.emit(this.controlChannel, {\n        request: 'close'\n      });\n    }.bind(this));\n    // Tell the local port to ask us for help.\n    this.port.onMessage('control', {\n      channel: 'control',\n      config: this.config\n    });\n\n    // Tell the remote location to delegate debugging.\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'debug'\n    });\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'core'\n    });\n\n    // Tell the container to instantiate the counterpart to this external view.\n    this.port.onMessage('control', {\n      type: 'Environment Configuration',\n      request: 'environment',\n      name: 'ModInternal'\n    });\n  }\n};\n\n/**\n * Stop the module when it is no longer needed, and tear-down state.\n * @method stop\n * @private\n */\nModule.prototype.stop = function () {\n  if (!this.started) {\n    return;\n  }\n  this.emit('close');\n  if (this.port) {\n    this.port.off();\n    this.port.onMessage('control', {\n      type: 'close',\n      channel: 'control'\n    });\n    this.port.stop();\n    delete this.port;\n  }\n  delete this.policy;\n  this.started = false;\n};\n\n/**\n * Textual Description of the Port\n * @method toString\n * @return {String} The description of this Port.\n */\nModule.prototype.toString = function () {\n  return \"[Module \" + this.manifest.name + \"]\";\n};\n\n/**\n * Intercept messages as they arrive from the module,\n * mapping them between internal and external flow names.\n * @method emitMessage\n * @param {String} name The destination the module wants to send to.\n * @param {Object} message The message to send.\n * @private\n */\nModule.prototype.emitMessage = function (name, message) {\n  if (this.internalPortMap[name] === false && message.channel) {\n    this.internalPortMap[name] = message.channel;\n    this.emit('internalChannelReady');\n    return;\n  }\n  // Terminate debug redirection requested in start().\n  if (name === 'control') {\n    if (message.flow === 'debug' && message.message) {\n      this.debug.format(message.message.severity,\n          message.message.source || this.toString(),\n          message.message.msg);\n    } else if (message.flow === 'core' && message.message) {\n      if (!this.core) {\n        this.once('core', this.emitMessage.bind(this, name, message));\n        return;\n      }\n      if (message.message.type === 'register' ||\n          message.message.type === 'require') {\n        message.message.reply = this.port.onMessage.bind(this.port, 'control');\n        this.externalPortMap[message.message.id] = false;\n      }\n      this.core.onMessage(this, message.message);\n    } else if (message.name === 'ModInternal' && !this.modInternal) {\n      this.modInternal = message.channel;\n      this.port.onMessage(this.modInternal, {\n        type: 'Initialization',\n        id: this.manifestId,\n        appId: this.id,\n        manifest: this.manifest,\n        lineage: this.lineage,\n        channel: message.reverse\n      });\n      this.emit('modInternal');\n    } else if (message.type === 'createLink') {\n      this.internalPortMap[message.name] = message.channel;\n      this.port.onMessage(message.channel, {\n        type: 'channel announcement',\n        channel: message.reverse\n      });\n      this.emit('internalChannelReady');\n    } else if (message.type === 'close') {\n      this.deregisterFlow(message.channel, true);\n    }\n  } else if (name === 'ModInternal' && message.type === 'ready' && !this.started) {\n    this.started = true;\n    this.emit('start');\n  } else if (name === 'ModInternal' && message.type === 'resolve') {\n    this.resource.get(this.manifestId, message.data).then(function (id, data) {\n      this.port.onMessage(this.modInternal, {\n        type: 'resolve.response',\n        id: id,\n        data: data\n      });\n    }.bind(this, message.id), function () {\n      this.debug.warn('Error Resolving URL for Module.');\n    }.bind(this));\n  } else if (name === 'ModInternal' && message.type === 'error') {\n    this.failed = true;\n    // The start event ensures that we process any pending messages, in case\n    // one of them requires a short-circuit error response.\n    this.emit('start');\n  } else if (!this.externalPortMap[name]) {\n    // Store this message until we have a port for that name.\n    this.addPendingMessage(name, message);\n    // Start asynchronous loading of the target module if it's a dependency\n    // and loading hasn't started.\n    if (name in this.dependencyUrls &&\n        this.dependantChannels.indexOf(name) === -1) {\n      this.require(name, this.dependencyUrls[name]);\n    }\n  } else {\n    this.emit(this.externalPortMap[name], message);\n  }\n  return false;\n};\n\n/**\n * Create a dynamic dependency on another module.\n * @method require\n * @param {String} name The name of the dependency.\n * @param {String} manifest The URL of the dependency to add.\n */\nModule.prototype.require = function (name, manifest) {\n  this.dependantChannels.push(name);\n  this.addDependency(manifest, name).catch(function (err) {\n    this.port.onMessage(this.modInternal, {\n      type: 'require.failure',\n      id: name,\n      error: err.message\n    });\n  }.bind(this));\n};\n\n/**\n * Add a dependency to the module's dependency tree\n * @method addDependency\n * @param {String} url The manifest URL of the dependency\n * @param {String} name The exposed name of the module.\n * @returns {Module} The created dependent module.\n * @private\n */\nModule.prototype.addDependency = function (url, name) {\n  return this.resource.get(this.manifestId, url)\n    .then(function (url) {\n      return this.policy.get(this.lineage, url);\n    }.bind(this))\n    .then(function (dep) {\n      this.updateEnv(name, dep.manifest);\n      this.emit(this.controlChannel, {\n        type: 'Link to ' + name,\n        request: 'link',\n        name: name,\n        overrideDest: name + '.' + this.id,\n        to: dep\n      });\n      return dep;\n    }.bind(this))\n    .catch(function (err) {\n      this.debug.warn(this.toString() + ' failed to load dep: ', name, err);\n      throw err;\n    }.bind(this));\n};\n\n/**\n * Request the external routes used by this module.\n * @method loadLinks\n * @private\n */\nModule.prototype.loadLinks = function () {\n  var i, channels = ['default'], name, dep;\n\n  if (this.manifest.permissions) {\n    for (i = 0; i < this.manifest.permissions.length; i += 1) {\n      name = this.manifest.permissions[i];\n      if (channels.indexOf(name) < 0 && name.indexOf('core.') === 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n        dep = new Provider(this.api.get(name).definition, this.debug);\n        this.api.provideCore(name, dep, this);\n\n        this.emit(this.controlChannel, {\n          type: 'Core Link to ' + name,\n          request: 'link',\n          name: name,\n          to: dep\n        });\n      }\n    }\n  }\n  if (this.manifest.dependencies) {\n    util.eachProp(this.manifest.dependencies, function (desc, name) {\n      if (channels.indexOf(name) < 0) {\n        channels.push(name);\n      }\n      this.dependencyUrls[name] = desc.url;\n      // Turn the relative URL of the dependency's manifest into an absolute\n      // URL, load it, and send a message to the module informing it of the\n      // dependency's API.  Once the module has received all of these updates,\n      // it will emit a 'start' message.\n      this.resource.get(this.manifestId, desc.url)\n          .then(this.policy.loadManifest.bind(this.policy))\n          .then(this.updateEnv.bind(this, name));\n    }.bind(this));\n  }\n  // Note that messages can be synchronous, so some ports may already be bound.\n  for (i = 0; i < channels.length; i += 1) {\n    this.externalPortMap[channels[i]] = this.externalPortMap[channels[i]] || false;\n    this.internalPortMap[channels[i]] = false;\n  }\n};\n\n/**\n * Update the module environment with information about a dependent manifest.\n * @method updateEnv\n * @param {String} dep The dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModule.prototype.updateEnv = function (dep, manifest) {\n  if (!manifest) {\n    return;\n  }\n  if (!this.modInternal) {\n    this.once('modInternal', this.updateEnv.bind(this, dep, manifest));\n    return;\n  }\n\n  var metadata;\n\n  // Decide if/what other properties should be exported.\n  // Keep in sync with ModuleInternal.updateEnv\n  metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description,\n    api: manifest.api\n  };\n\n  this.port.onMessage(this.modInternal, {\n    type: 'manifest',\n    name: dep,\n    manifest: metadata\n  });\n};\n\nmodule.exports = Module;\n","/*jslint indent:2, node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar Provider = require('./provider');\nvar ProxyBinder = require('./proxybinder');\nvar util = require('./util');\n\n/**\n * The internal logic for module setup, which makes sure the public\n * facing exports have appropriate properties, and load user scripts.\n * @class ModuleInternal\n * @extends Port\n * @param {Port} manager The manager in this module to use for routing setup.\n * @constructor\n */\nvar ModuleInternal = function (manager) {\n  this.config = {};\n  this.manager = manager;\n  this.debug = manager.debug;\n  this.binder = new ProxyBinder(this.manager);\n  this.api = this.manager.api;\n  this.manifests = {};\n  this.providers = {};\n\n  this.id = 'ModuleInternal';\n  this.pendingPorts = 0;\n  this.requests = {};\n  this.unboundPorts = {};\n\n  util.handleEvents(this);\n};\n\n/**\n * Message handler for this port.\n * This port only handles two messages:\n * The first is its setup from the manager, which it uses for configuration.\n * The second is from the module controller (fdom.port.Module), which provides\n * the manifest info for the module.\n * @method onMessage\n * @param {String} flow The detination of the message.\n * @param {Object} message The message.\n */\nModuleInternal.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n    }\n  } else if (flow === 'default' && !this.appId) {\n    // Recover the ID of this module:\n    this.port = this.manager.hub.getDestination(message.channel);\n    this.externalChannel = message.channel;\n    this.appId = message.appId;\n    this.lineage = message.lineage;\n\n    var objects = this.mapProxies(message.manifest);\n\n    this.generateEnv(message.manifest, objects).then(function () {\n      return this.loadLinks(objects);\n    }.bind(this)).then(this.loadScripts.bind(this, message.id,\n        message.manifest.app.script)).then(null, function (err) {\n      this.debug.error('Could not set up module ' + this.appId + ': ', err);\n    }.bind(this));\n  } else if (flow === 'default' && message.type === 'resolve.response' &&\n             this.requests[message.id]) {\n    this.requests[message.id](message.data);\n    delete this.requests[message.id];\n  } else if (flow === 'default' && message.type === 'require.failure' &&\n             this.unboundPorts[message.id]) {\n    this.unboundPorts[message.id].callback(undefined, message.error);\n    delete this.unboundPorts[message.id];\n  } else if (flow === 'default' && message.type === 'manifest') {\n    this.emit('manifest', message);\n    this.updateManifest(message.name, message.manifest);\n  } else if (flow === 'default' && message.type === 'Connection') {\n    // Multiple connections can be made to the default provider.\n    if (message.api && this.providers[message.api]) {\n      this.manager.createLink(this.providers[message.api], message.channel,\n                             this.port, message.channel);\n    } else if (this.defaultPort &&\n               (message.api === this.defaultPort.api || !message.api)) {\n      this.manager.createLink(this.defaultPort, message.channel,\n                              this.port, message.channel);\n    } else {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\n/**\n * Get a textual description of this Port.\n * @method toString\n * @return {String} a description of this Port.\n */\nModuleInternal.prototype.toString = function () {\n  return \"[Environment Helper]\";\n};\n\n/**\n * Generate an externaly visisble namespace\n * @method generateEnv\n * @param {Object} manifest The manifest of the module.\n * @param {Object[]} items Other interfaces to load.\n * @returns {Promise} A promise when the external namespace is visible.\n * @private\n */\nModuleInternal.prototype.generateEnv = function (manifest, items) {\n  return this.binder.bindDefault(this.port, this.api, manifest, true).then(\n    function (binding) {\n      var i = 0;\n      binding.port.api = binding.external.api;\n      this.defaultPort = binding.port;\n      if (binding.external.api) {\n        for (i = 0; i < items.length; i += 1) {\n          if (items[i].name === binding.external.api && items[i].def.provides) {\n            items.splice(i, 1);\n            break;\n          }\n        }\n      }\n      this.config.global.freedom = binding.external;\n    }.bind(this)\n  );\n};\n\n/**\n * Register an unused channel ID for callback, and once information\n * about the channel is known, call the handler with that information.\n * @method registerId\n * @param {String} api The preferred API to use for the new channel.\n * @param {Function} callback Function to call once channel ready\n * @returns {String} The allocated channel name.\n */\nModuleInternal.prototype.registerId = function (api, callback) {\n  var id = util.getId();\n  this.unboundPorts[id] = {\n    name: api,\n    callback: callback\n  };\n  return id;\n};\n\n/**\n * Attach a proxy to the externally visible namespace.\n * @method attach\n * @param {String} name The name of the proxy.\n * @param {Boolean} provides If this proxy is a provider.\n * @param {ProxyInterface} proxy The proxy to attach.\n * @param {String} api The API the proxy implements.\n * @private.\n */\nModuleInternal.prototype.attach = function (name, provides, proxy) {\n  var exp = this.config.global.freedom;\n\n  if (provides) {\n    this.providers[name] = proxy.port;\n  }\n\n  if (!exp[name]) {\n    exp[name] = proxy.external;\n    if (this.manifests[name]) {\n      exp[name].manifest = this.manifests[name];\n    }\n  }\n\n  this.pendingPorts -= 1;\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return exp[name];\n};\n\n/**\n * Request a set of proxy interfaces, and bind them to the external\n * namespace.\n * @method loadLinks\n * @param {Object[]} items Descriptors of the proxy ports to load.\n * @private\n * @returns {Promise} Promise for when all links are loaded.\n */\n//TODO(willscott): promise should be chained, rather than going through events.\nModuleInternal.prototype.loadLinks = function (items) {\n  var i, proxy, provider, core,\n    manifestPredicate = function (name, flow, msg) {\n      return flow === 'manifest' && msg.name === name;\n    },\n    onManifest = function (item, msg) {\n      var definition = {\n        name: item.api\n      };\n      if (!msg.manifest.api || !msg.manifest.api[item.api]) {\n        definition.definition = null;\n      } else {\n        definition.definition = msg.manifest.api[item.api];\n      }\n      this.binder.getExternal(this.port, item.name, definition).then(\n        this.attach.bind(this, item.name, false)\n      );\n    }.bind(this),\n    promise = new PromiseCompat(function (resolve, reject) {\n      this.once('start', resolve);\n    }.bind(this));\n\n  for (i = 0; i < items.length; i += 1) {\n    if (items[i].api && !items[i].def) {\n      if (this.manifests[items[i].name]) {\n        onManifest(items[i], {\n          manifest: this.manifests[items[i].name]\n        });\n      } else {\n        this.once(manifestPredicate.bind({}, items[i].name),\n                  onManifest.bind(this, items[i]));\n      }\n    } else {\n      this.binder.getExternal(this.port, items[i].name, items[i].def).then(\n        this.attach.bind(this, items[i].name, items[i].def &&\n                         items[i].def.provides)\n      );\n    }\n    this.pendingPorts += 1;\n  }\n\n  // Allow resolution of files by parent.\n  this.manager.resource.addResolver(function (manifest, url, resolve) {\n    var id = util.getId();\n    this.requests[id] = resolve;\n    this.emit(this.externalChannel, {\n      type: 'resolve',\n      id: id,\n      data: url\n    });\n    return true;\n  }.bind(this));\n\n  // Attach Core.\n  this.pendingPorts += 1;\n\n  core = this.api.get('core').definition;\n  provider = new Provider(core, this.debug);\n  this.manager.getCore(function (CoreProv) {\n    new CoreProv(this.manager).setId(this.lineage, this);\n    provider.getInterface().provideAsynchronous(CoreProv);\n  }.bind(this));\n\n  this.emit(this.controlChannel, {\n    type: 'Link to core',\n    request: 'link',\n    name: 'core',\n    to: provider\n  });\n\n  this.binder.getExternal(provider, 'default', {\n    name: 'core',\n    definition: core\n  }).then(function (core) {\n    core.external.getLoggerSync = this.debug.getLoggingShim(\n        core.external().getLogger);\n    this.attach('core', false, core);\n  }.bind(this));\n\n\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return promise;\n};\n\n/**\n * Update the exported manifest of a dependency.\n * Sets it internally if not yet exported, or attaches the property if it\n * is loaded after the module has started (we don't delay start to retreive\n * the manifest of the dependency.)\n * @method updateManifest\n * @param {String} name The Dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModuleInternal.prototype.updateManifest = function (name, manifest) {\n  var exp = this.config.global.freedom;\n\n  if (exp && exp[name]) {\n    exp[name].manifest = manifest;\n  // Handle require() dependency resolution.\n  } else if (this.unboundPorts[name]) {\n    this.binder.getExternal(this.port, name,\n        this.binder.getAPI(manifest, this.api, this.unboundPorts[name].api))\n      .then(\n        this.attach.bind(this, name, false)\n      ).then(function(proxy) {\n        this.unboundPorts[name].callback(proxy);\n        delete this.unboundPorts[name];\n      }.bind(this));\n  } else {\n    this.manifests[name] = manifest;\n  }\n};\n\n/**\n * Determine which proxy ports should be exposed by this module.\n * @method mapProxies\n * @param {Object} manifest the module JSON manifest.\n * @return {Object[]} proxy descriptors defined in the manifest.\n */\nModuleInternal.prototype.mapProxies = function (manifest) {\n  var proxies = [], seen = ['core'], i, obj;\n\n  if (manifest.permissions) {\n    for (i = 0; i < manifest.permissions.length; i += 1) {\n      obj = {\n        name: manifest.permissions[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (seen.indexOf(obj.name) < 0 && obj.def) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  if (manifest.dependencies) {\n    util.eachProp(manifest.dependencies, function (desc, name) {\n      obj = {\n        name: name,\n        api: desc.api\n      };\n      if (seen.indexOf(name) < 0) {\n        if (desc.api) {\n          obj.def = this.api.get(desc.api);\n        }\n        proxies.push(obj);\n        seen.push(name);\n      }\n    }.bind(this));\n  }\n\n  if (manifest.provides) {\n    for (i = 0; i < manifest.provides.length; i += 1) {\n      obj = {\n        name: manifest.provides[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (obj.def) {\n        obj.def.provides = true;\n      } else if (manifest.api && manifest.api[obj.name]) {\n        obj.def = {\n          name: obj.name,\n          definition: manifest.api[obj.name],\n          provides: true\n        };\n      } else {\n        this.debug.warn('Module will not provide \"' + obj.name +\n          '\", since no declaration can be found.');\n        /*jslint continue:true*/\n        continue;\n      }\n      /*jslint continue:false*/\n      if (seen.indexOf(obj.name) < 0) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  return proxies;\n};\n\n/**\n * Load external scripts into this namespace.\n * @method loadScripts\n * @param {String} from The URL of this modules's manifest.\n * @param {String[]} scripts The URLs of the scripts to load.\n */\nModuleInternal.prototype.loadScripts = function (from, scripts) {\n  var importer = function (script, resolve, reject) {\n    try {\n      this.config.global.importScripts(script);\n      resolve(true);\n    } catch (e) {\n      reject(e);\n    }\n  }.bind(this),\n    scripts_count,\n    load;\n  if (typeof scripts === 'string') {\n    scripts_count = 1;\n  } else {\n    scripts_count = scripts.length;\n  }\n\n  load = function (next) {\n    if (next === scripts_count) {\n      this.emit(this.externalChannel, {\n        type: \"ready\"\n      });\n      return;\n    }\n\n    var script;\n    if (typeof scripts === 'string') {\n      script = scripts;\n    } else {\n      script = scripts[next];\n    }\n\n    this.manager.resource.get(from, script).then(function (url) {\n      this.tryLoad(importer, url).then(function () {\n        load(next + 1);\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n\n\n  if (!this.config.global.importScripts) {\n    importer = function (url, resolve, reject) {\n      var script = this.config.global.document.createElement('script');\n      script.src = url;\n      script.addEventListener('load', resolve, true);\n      script.addEventListener('error', reject, true);\n      this.config.global.document.body.appendChild(script);\n    }.bind(this);\n  }\n\n  load(0);\n};\n\n/**\n * Attempt to load resolved scripts into the namespace.\n * @method tryLoad\n * @private\n * @param {Function} importer The actual import function\n * @param {String[]} urls The resoved URLs to load.\n * @returns {Promise} completion of load\n */\nModuleInternal.prototype.tryLoad = function (importer, url) {\n  return new PromiseCompat(importer.bind({}, url)).then(function (val) {\n    return val;\n  }, function (e) {\n    this.debug.warn(e.stack);\n    this.debug.error(\"Error loading \" + url, e);\n    this.debug.error(\"If the stack trace is not useful, see https://\" +\n        \"github.com/freedomjs/freedom/wiki/Debugging\");\n    // This event is caught in Module, which will then respond to any messages\n    // for the provider with short-circuit errors.\n    this.emit(this.externalChannel, {\n      type: 'error'\n    });\n    throw e;\n  }.bind(this));\n};\n\nmodule.exports = ModuleInternal;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\nvar Module = require('./module');\nvar util = require('./util');\n\n/**\n * The Policy registry for freedom.js.  Used to look up modules and provide\n * migration and coallesing of execution.\n * @Class Policy\n * @param {Manager} manager The manager of the active runtime.\n * @param {Resource} resource The resource loader of the active runtime.\n * @param {Object} config The local config.\n * @constructor\n */\nvar Policy = function(manager, resource, config) {\n  this.api = manager.api;\n  this.debug = manager.debug;\n  this.location = config.location;\n  this.resource = resource;\n\n  this.config = config;\n  this.runtimes = [];\n  this.policies = [];\n  this.pending = {};\n  util.handleEvents(this);\n\n  this.add(manager, config.policy);\n  this.runtimes[0].local = true;\n};\n\n/**\n * The policy a runtime is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultPolicy\n */\nPolicy.prototype.defaultPolicy = {\n  background: false, // Can this runtime run 'background' modules?\n  interactive: true // Is there a view associated with this runtime?\n  // TODO: remaining runtime policy.\n};\n\n/**\n * The constraints a code modules is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultConstraints\n */\nPolicy.prototype.defaultConstraints = {\n  isolation: \"always\", // values: always, app, never\n  placement: \"local\" // values: local, stable, redundant\n  // TODO: remaining constraints, express platform-specific dependencies.\n};\n\n/**\n * Resolve a module from its canonical URL.\n * Reponds with the promise of a port representing the module, \n * @method get\n * @param {String[]} lineage The lineage of the requesting module.\n * @param {String} id The canonical ID of the module to get.\n * @returns {Promise} A promise for the local port towards the module.\n */\nPolicy.prototype.get = function(lineage, id) {\n  \n  // Make sure that a module isn't getting located twice at the same time.\n  // This is resolved by delaying if it until we see it in a 'moduleAdd' event.\n  if (this.pending[id]) {\n    return new PromiseCompat(function (resolve, reject) {\n      this.once('placed', function(l, i) {\n        this.get(l, i).then(resolve, reject);\n      }.bind(this, lineage, id));\n    }.bind(this));\n  } else {\n    this.pending[id] = true;\n  }\n\n  return this.loadManifest(id).then(function(manifest) {\n    var constraints = this.overlay(this.defaultConstraints, manifest.constraints),\n        runtime = this.findDestination(lineage, id, constraints),\n        portId;\n    if (runtime.local) {\n      portId = this.isRunning(runtime, id, lineage,\n                             constraints.isolation !== 'never');\n      if(constraints.isolation !== 'always' && portId) {\n        this.debug.info('Reused port ' + portId);\n        delete this.pending[id];\n        this.emit('placed');\n        return runtime.manager.getPort(portId);\n      } else {\n        return new Module(id, manifest, lineage, this);\n      }\n    } else {\n      // TODO: Create a port to go to the remote runtime.\n      this.debug.error('Unexpected location selected for module placement');\n      return false;\n    }\n  }.bind(this), function(err) {\n    this.debug.error('Policy Error Resolving ' + id, err);\n    throw(err);\n  }.bind(this));\n};\n\n/**\n * Find the runtime destination for a module given its constraints and the\n * module creating it.\n * @method findDestination\n * @param {String[]} lineage The identity of the module creating this module.\n * @param {String] id The canonical url of the module\n * @param {Object} constraints Constraints for the module.\n * @returns {Object} The element of this.runtimes where the module should run.\n */\nPolicy.prototype.findDestination = function(lineage, id, constraints) {\n  var i;\n\n  // Step 1: if an instance already exists, the m\n  if (constraints.isolation !== 'always') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.isRunning(this.runtimes[i], id, lineage,\n                         constraints.isolation !== 'never')) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 2: if the module wants stability, it may need to be remote.\n  if (constraints.placement === 'local') {\n    return this.runtimes[0];\n  } else if (constraints.placement === 'stable') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.policies[i].background) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 3: if the module needs longevity / interactivity, it may want to be remote.\n  return this.runtimes[0];\n};\n\n/**\n * Determine if a known runtime is running an appropriate instance of a module.\n * @method isRunning\n * @param {Object} runtime The runtime to check.\n * @param {String} id The module to look for.\n * @param {String[]} from The identifier of the requesting module.\n * @param {Boolean} fullMatch If the module needs to be in the same app.\n * @returns {String|Boolean} The Module id if it is running, or false if not.\n */\nPolicy.prototype.isRunning = function(runtime, id, from, fullMatch) {\n  var i = 0, j = 0, okay;\n  for (i = 0; i < runtime.modules.length; i += 1) {\n    if (fullMatch && runtime.modules[i].length === from.length + 1) {\n      okay = true;\n      for (j = 0; j < from.length; j += 1) {\n        if (runtime.modules[i][j + 1].indexOf(from[j]) !== 0) {\n          okay = false;\n          break;\n        }\n      }\n      if (runtime.modules[i][0].indexOf(id) !== 0) {\n        okay = false;\n      }\n\n      if (okay) {\n        return runtime.modules[i][0];\n      }\n    } else if (!fullMatch && runtime.modules[i][0].indexOf(id) === 0) {\n      return runtime.modules[i][0];\n    }\n  }\n  return false;\n};\n\n/**\n * Get a promise of the manifest for a module ID.\n * @method loadManifest\n * @param {String} manifest The canonical ID of the manifest\n * @returns {Promise} Promise for the json contents of the manifest.\n */\nPolicy.prototype.loadManifest = function(manifest) {\n  return this.resource.getContents(manifest).then(function(data) {\n    var resp = {};\n    try {\n      return JSON.parse(data);\n    } catch(err) {\n      this.debug.error(\"Failed to load \" + manifest + \": \" + err);\n      throw new Error(\"No Manifest Available\");\n    }\n  }.bind(this));\n};\n\n/**\n * Add a runtime to keep track of in this policy.\n * @method add\n * @param {fdom.port} port The port to use for module lifetime info\n * @param {Object} policy The policy of the runtime.\n */\nPolicy.prototype.add = function(port, policy) {\n  var runtime = {\n    manager: port,\n    modules: []\n  };\n  this.runtimes.push(runtime);\n  this.policies.push(this.overlay(this.defaultPolicy, policy));\n\n  port.on('moduleAdd', function(runtime, info) {\n    var lineage = [];\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    runtime.modules.push(lineage);\n    if (this.pending[info.lineage[0]]) {\n      delete this.pending[info.lineage[0]];\n      this.emit('placed');\n    }\n  }.bind(this, runtime));\n  port.on('moduleRemove', function(runtime, info) {\n    var lineage = [], i, modFingerprint;\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    modFingerprint = lineage.toString();\n\n    for (i = 0; i < runtime.modules.length; i += 1) {\n      if (runtime.modules[i].toString() === modFingerprint) {\n        runtime.modules.splice(i, 1);\n        return;\n      }\n    }\n    this.debug.warn('Unknown module to remove: ', info.id);\n  }.bind(this, runtime));\n};\n\n/**\n * Overlay a specific policy or constraint instance on default settings.\n * TODO: consider making static.\n * @method overlay\n * @private\n * @param {Object} base The default object\n * @param {Object} overlay The superceeding object\n * @returns {Object} A new object with base parameters when not set in overlay.\n */\nPolicy.prototype.overlay = function(base, overlay) {\n  var ret = {};\n\n  util.mixin(ret, base);\n  if (overlay) {\n    util.mixin(ret, overlay, true);\n  }\n  return ret;\n};\n\nmodule.exports = Policy;\n","/*jslint indent:2, node:true, sloppy:true, browser:true */\nvar Consumer = require('./consumer');\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable provider.\n * @class Provider\n * @implements Port\n * @uses handleEvents\n * @param {Object} def The interface of the provider.\n * @param {Debug} debug The debugger to use for logging.\n * @contructor\n */\nvar Provider = function (def, debug) {\n  this.id = Consumer.nextId();\n  util.handleEvents(this);\n  this.debug = debug;\n\n  this.definition = def;\n  this.mode = Provider.mode.synchronous;\n  this.channels = {};\n  this.iface = null;\n  this.closeHandlers = {};\n  this.providerCls = null;\n\n  this.ifaces = {};\n  this.emits = {};\n};\n\n/**\n * Provider modes of operation.\n * @property mode\n * @static\n * @type number\n */\nProvider.mode = {\n  synchronous: 0,\n  asynchronous: 1,\n  promises: 2\n};\n\n/**\n * Receive external messages for the provider.\n * @method onMessage\n * @param {String} source the source identifier of the message.\n * @param {Object} message The received message.\n */\nProvider.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.channels[message.name] = message.channel;\n    this.emit(message.channel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    if (message.channel === this.controlChannel) {\n      delete this.controlChannel;\n    }\n    this.close();\n  } else {\n    if (!this.channels[source] && message.channel) {\n      this.channels[source] = message.channel;\n      this.emit('start');\n      return;\n    } else if (!this.channels[source]) {\n      this.debug.warn('Message from unconfigured source: ' + source);\n      return;\n    }\n\n    if (message.type === 'close' && message.to) {\n      this.teardown(source, message.to);\n    } else if (message.to && this.emits[source] &&\n               this.emits[source][message.to]) {\n      message.message.to = message.to;\n      this.emits[source][message.to](message.message);\n    } else if (message.to && message.message &&\n        message.message.type === 'construct') {\n      var args = Consumer.portableToMessage(\n          (this.definition.constructor && this.definition.constructor.value) ?\n              this.definition.constructor.value : [],\n          message.message,\n          this.debug\n        ),\n        instance;\n      if (!this.ifaces[source]) {\n        this.ifaces[source] = {};\n        this.emits[source] = {};\n      }\n      this.ifaces[source][message.to] = true;\n      instance = this.getProvider(source, message.to, args);\n      // don't save a reference to instance if it closed itself already.\n      if (this.ifaces[source] &&\n          this.ifaces[source][message.to]) {\n        this.ifaces[source][message.to] = instance.instance;\n        this.emits[source][message.to] = instance.onmsg;\n      }\n    } else {\n      this.debug.warn(this.toString() + ' dropping message ' +\n          JSON.stringify(message));\n    }\n  }\n};\n\n/**\n * Close / teardown the flow this provider terminates.\n * @method close\n */\nProvider.prototype.close = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Provider Closing',\n      request: 'close'\n    });\n    delete this.controlChannel;\n  }\n  this.emit('close');\n\n  // Release references.\n  delete this.iface;\n  delete this.providerCls;\n  this.ifaces = {};\n  this.emits = {};\n  this.emitChannel = null;\n};\n\n/**\n * Teardown a single instance of an object fulfilling this provider.\n * @method teardown\n * @param {String} source The consumer source of the instance.\n * @param {String} id The id of the instance to tear down.\n */\nProvider.prototype.teardown = function (source, id) {\n  // Ignore teardown of non-existant ids.\n  if (!this.ifaces[source]) {\n    return;\n  }\n\n  delete this.ifaces[source][id];\n  delete this.emits[source][id];\n  if (this.closeHandlers[source] && this.closeHandlers[source][id]) {\n    util.eachProp(this.closeHandlers[source][id], function (prop) {\n      prop();\n    });\n    delete this.closeHandlers[source][id];\n  }\n};\n\n/**\n * Get an interface to expose externally representing this port.\n * Providers are registered with the port using either\n * provideSynchronous or provideAsynchronous depending on the desired\n * return interface.\n * @method getInterface\n * @return {Object} The external interface of this Provider.\n */\nProvider.prototype.getInterface = function () {\n  if (this.iface) {\n    return this.iface;\n  } else {\n    var sanityCheck = function (provider) {\n      if (typeof provider !== \"function\") {\n        throw new Error(\"Provider \" + this.toString() +\n            \" needs to be implemented by a function.\");\n      }\n    };\n    this.iface = {\n      provideSynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.synchronous;\n      }.bind(this),\n      provideAsynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.asynchronous;\n      }.bind(this),\n      providePromises: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.promises;\n      }.bind(this)\n    };\n\n    util.eachProp(this.definition, function (prop, name) {\n      switch (prop.type) {\n      case \"constant\":\n        Object.defineProperty(this.iface, name, {\n          value: Consumer.recursiveFreezeObject(prop.value),\n          writable: false\n        });\n        break;\n      }\n    }.bind(this));\n\n    return this.iface;\n  }\n};\n\n/**\n * Create a function that can be used to get interfaces from this provider from\n * a user-visible point.\n * @method getProxyInterface\n */\nProvider.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    return p.getInterface();\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (ids, source) {\n        util.eachProp(ids, function (candidate, id) {\n          if (candidate === iface) {\n            this.teardown(source, id);\n            this.emit(this.channels[source], {\n              type: 'close',\n              to: id\n            });\n            return true;\n          }\n        }.bind(this));\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.close();\n    }\n  }.bind(this);\n\n  func.onClose = function (iface, handler) {\n    // Listen to the channel directly.\n    if (typeof iface === 'function' && handler === undefined) {\n      this.once('close', iface);\n      return;\n    }\n\n    util.eachProp(this.ifaces, function (ids, source) {\n      util.eachProp(ids, function (candidate, id) {\n        if (candidate === iface) {\n          if (!this.closeHandlers[source]) {\n            this.closeHandlers[source] = {};\n          }\n          if (!this.closeHandlers[source][id]) {\n            this.closeHandlers[source][id] = [];\n          }\n          this.closeHandlers[source][id].push(handler);\n          return true;\n        }\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n  return func;\n};\n\n/**\n * Get a new instance of the registered provider.\n * @method getProvider\n * @param {String} source The port this instance is interactign with.\n * @param {String} identifier the messagable address for this provider.\n * @param {Array} args Constructor arguments for the provider.\n * @return {Function} A function to send messages to the provider.\n */\nProvider.prototype.getProvider = function (source, identifier, args) {\n  if (!this.providerCls) {\n    this.debug.error('Cannot instantiate provider, since it is not provided');\n    return {instance: undefined, onmsg: undefined};\n  }\n\n  var events = {},\n    dispatchEvent,\n    BoundClass,\n    instance;\n\n  util.eachProp(this.definition, function (prop, name) {\n    if (prop.type === 'event') {\n      events[name] = prop;\n    }\n  });\n\n  dispatchEvent = function (src, ev, id, name, value) {\n    if (ev[name]) {\n      var streams = Consumer.messageToPortable(ev[name].value, value,\n                                                   this.debug);\n      this.emit(this.channels[src], {\n        type: 'message',\n        to: id,\n        message: {\n          name: name,\n          type: 'event',\n          text: streams.text,\n          binary: streams.binary\n        }\n      });\n    }\n  }.bind(this, source, events, identifier);\n\n  // this is all to say: new providerCls(dispatchEvent, args[0], args[1],...)\n  BoundClass = this.providerCls.bind.apply(this.providerCls,\n      [this.providerCls, dispatchEvent].concat(args || []));\n  instance = new BoundClass();\n\n  return {\n    instance: instance,\n    onmsg: function (port, src, msg) {\n      var prop, debug, args, returnPromise, ret;\n      if (msg.action === 'method') {\n        if (typeof this[msg.type] !== 'function') {\n          port.debug.warn(\"Provider does not implement \" + msg.type + \"()!\");\n          port.emit(port.channels[src], {\n            type: 'method',\n            to: msg.to,\n            message: {\n              to: msg.to,\n              type: 'method',\n              reqId: msg.reqId,\n              name: msg.type,\n              error: 'Provider does not implement ' + msg.type + '()!'\n            }\n          });\n          return;\n        }\n        prop = port.definition[msg.type];\n        debug = port.debug;\n        args = Consumer.portableToMessage(prop.value, msg, debug);\n        if (msg.reqId === null) {\n          // Reckless call.  Ignore return value.\n          ret = function(resolve, reject) {\n            if (reject) {\n              debug.error(reject);\n            }\n          };\n        } else {\n          ret = function (src, msg, prop, resolve, reject) {\n            var streams = Consumer.messageToPortable(prop.ret, resolve,\n                                                         debug);\n            this.emit(this.channels[src], {\n              type: 'method',\n              to: msg.to,\n              message: {\n                to: msg.to,\n                type: 'method',\n                reqId: msg.reqId,\n                name: msg.type,\n                text: streams.text,\n                binary: streams.binary,\n                error: reject\n              }\n            });\n          }.bind(port, src, msg, prop);\n        }\n        if (!Array.isArray(args)) {\n          args = [args];\n        }\n        if (port.mode === Provider.mode.synchronous) {\n          try {\n            ret(this[msg.type].apply(this, args));\n          } catch (e1) {\n            ret(undefined, e1.message + ' ' + e1.stack);\n          }\n        } else if (port.mode === Provider.mode.asynchronous) {\n          try {\n            this[msg.type].apply(instance, args.concat(ret));\n          } catch (e2) {\n            ret(undefined, e2.message + ' ' + e2.stack);\n          }\n        } else if (port.mode === Provider.mode.promises) {\n          try {\n            returnPromise = this[msg.type].apply(this, args);\n            if (returnPromise && returnPromise.then) {\n              returnPromise.then(ret, ret.bind({}, undefined));\n            } else {\n              ret(undefined, 'No promise returned from ' +\n                  msg.type + ': ' + returnPromise);\n            }\n          } catch (e3) {\n            ret(undefined, e3.message + ' ' + e3.stack);\n          }\n        }\n      }\n    }.bind(instance, this, source)\n  };\n};\n\n/**\n * Get a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nProvider.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Provider \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Provider]\";\n  }\n};\n\nmodule.exports = Provider;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('../util');\nvar Consumer = require('../consumer');\n\nvar ApiInterface = function(def, onMsg, emit, debug) {\n  var inflight = {},\n      events = null,\n      emitter = null,\n      reqId = 0,\n      args = arguments;\n\n  util.eachProp(def, function(prop, name) {\n    switch(prop.type) {\n    case 'method':\n      this[name] = function() {\n        // Note: inflight should be registered before message is passed\n        // in order to prepare for synchronous in-window pipes.\n        var thisReq = reqId,\n            promise = new PromiseCompat(function(resolve, reject) {\n              inflight[thisReq] = {\n                resolve:resolve,\n                reject:reject,\n                template: prop.ret\n              };\n            }),\n            streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        reqId += 1;\n        emit({\n          action: 'method',\n          type: name,\n          reqId: thisReq,\n          text: streams.text,\n          binary: streams.binary\n        });\n        return promise;\n      };\n      this[name].reckless = function () {\n        var streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        emit({\n          action: 'method',\n          type: name,\n          reqId: null,  // Marks this as a reckless call.\n          text: streams.text,\n          binary: streams.binary\n        });\n        // Return type is void.\n      };\n      break;\n    case 'event':\n      if(!events) {\n        util.handleEvents(this);\n        emitter = this.emit;\n        delete this.emit;\n        events = {};\n      }\n      events[name] = prop;\n      break;\n    case 'constant':\n      Object.defineProperty(this, name, {\n        value: Consumer.recursiveFreezeObject(prop.value),\n        writable: false\n      });\n      break;\n    }\n  }.bind(this));\n\n  onMsg(this, function(type, msg) {\n    if (type === 'close') {\n      if (this.off) {\n        this.off();\n      }\n      util.eachProp(inflight, function (obj) {\n        obj.reject('closed');\n      });\n      inflight = {};\n      return;\n    }\n    if (!msg) {\n      return;\n    }\n    if (msg.type === 'method') {\n      if (inflight[msg.reqId]) {\n        var resolver = inflight[msg.reqId],\n            template = resolver.template;\n        delete inflight[msg.reqId];\n        if (msg.error) {\n          resolver.reject(msg.error);\n        } else {\n          resolver.resolve(Consumer.portableToMessage(template, msg, debug));\n        }\n      } else {\n        debug.error('Incoming message claimed to be an RPC ' +\n                         'returning for unregistered call', msg.reqId);\n      }\n    } else if (msg.type === 'event') {\n      if (events[msg.name]) {\n        emitter(msg.name, Consumer.portableToMessage(events[msg.name].value,\n                msg, debug));\n      }\n    }\n  }.bind(this));\n\n  args = Consumer.messageToPortable(\n      (def.constructor && def.constructor.value) ? def.constructor.value : [],\n      Array.prototype.slice.call(args, 4),\n      debug);\n\n  emit({\n    type: 'construct',\n    text: args.text,\n    binary: args.binary\n  });\n};\n\nmodule.exports = ApiInterface;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar util = require('../util');\n\nvar EventInterface = function(onMsg, emit, debug) {\n  util.handleEvents(this);\n  \n  onMsg(this, function(emit, type, msg) {\n    if (type === 'close') {\n      return;\n    }\n    emit(msg.type, msg.message);\n  }.bind(this, this.emit));\n\n  this.emit = function(emitter, type, msg) {\n    emitter({type: type, message: msg}, true);\n  }.bind({}, emit);\n};\n\nmodule.exports = EventInterface;\n","/*jslint indent:2, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar EventInterface = require('./proxy/eventInterface');\nvar Consumer = require('./consumer');\nvar Provider = require('./provider');\n\n/**\n * A Proxy Binder manages the external interface, and creates one of\n * the different types of objects exposed by freedom either as a global\n * within a worker / module context, or returned by an external call to\n * create a freedom runtime.\n * @Class ProxyBinder\n * @param {Manager} manager The manager for the active runtime.\n */\nvar ProxyBinder = function (manager) {\n  'use strict';\n  this.manager = manager;\n};\n\n/**\n * Create a proxy for a freedom port, and return it once loaded.\n * @method getExternal\n * @param {Port} port The port for the proxy to communicate with.\n * @param {String} name The name of the proxy.\n * @param {Object} [definition] The definition of the API to expose.\n * @param {String} definition.name The name of the API.\n * @param {Object} definition.definition The definition of the API.\n * @param {Boolean} definition.provides Whether this is a consumer or provider.\n * @returns {Promise} A promise for the active proxy interface.\n */\nProxyBinder.prototype.getExternal = function (port, name, definition) {\n  'use strict';\n  var proxy, api;\n  return new PromiseCompat(function (resolve, reject) {\n    if (definition) {\n      api = definition.name;\n      if (definition.provides) {\n        proxy = new Provider(definition.definition, this.manager.debug);\n      } else {\n        proxy = new Consumer(ApiInterface.bind({},\n            definition.definition),\n            this.manager.debug);\n      }\n    } else {\n      proxy = new Consumer(EventInterface, this.manager.debug);\n    }\n\n    proxy.once('start', function () {\n      var iface = proxy.getProxyInterface();\n      if (api) {\n        iface.api = api;\n      }\n      resolve({\n        port: proxy,\n        external: iface\n      });\n    });\n\n    this.manager.createLink(port, name, proxy);\n  }.bind(this));\n};\n\n/**\n * Bind the default proxy for a freedom port.\n * @method bindDefault\n * @param {Port} port The port for the proxy to communicate with.\n * @param {Api} api The API loader with API definitions.\n * @param {Object} manifest The manifest of the module to expose.\n * @param {Boolean} internal Whether the interface is for inside the module.\n * @returns {Promise} A promise for a proxy interface.\n * @private\n */\nProxyBinder.prototype.bindDefault = function (port, api, manifest, internal) {\n  'use strict';\n  var metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description\n  }, def;\n\n  if (manifest['default']) {\n    def = api.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      def = {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    if (internal && manifest.provides &&\n        manifest.provides.indexOf(manifest['default']) !== false) {\n      def.provides = true;\n    } else if (internal) {\n      api.debug.warn(\"default API not provided, \" +\n                     \"are you missing a provides key in your manifest?\");\n    }\n  }\n\n  return this.getExternal(port, 'default', def).then(\n    function (metadata, info) {\n      info.external.manifest = metadata;\n      return info;\n    }.bind(this, metadata)\n  );\n};\n\n/**\n * Get the definition for a proxy given a requested API and the manifest of\n * the module.\n * @method getAPI\n * @param {Object} manifest The manifest for the proxy.\n * @param {Api} apiProvider The registry of known APIs.\n * @param {String} api The Requested API.\n * @returns {Object} definition The definition to use for calls to getExternal.\n */\nProxyBinder.prototype.getAPI = function (manifest, apiProvider, api) {\n  'use strict';\n  if (manifest.api && manifest.api[api]) {\n    return {\n      name: api,\n      definition: manifest.api[api]\n    };\n  } else if (manifest['default']) {\n    var def = apiProvider.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      return {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    return def;\n  } else {\n    return false;\n  }\n};\n\n\nmodule.exports = ProxyBinder;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('./util');\n\n/**\n * The Resource registry for FreeDOM.  Used to look up requested Resources,\n * and provide lookup and migration of resources.\n * @Class Resource\n * @param {Debug} debug The logger to use for debugging.\n * @constructor\n */\nvar Resource = function (debug) {\n  this.debug = debug;\n  this.files = {};\n  this.resolvers = [this.httpResolver, this.nullResolver];\n  this.contentRetrievers = {\n    'http': this.xhrRetriever,\n    'https': this.xhrRetriever,\n    'chrome-extension': this.xhrRetriever,\n    'resource': this.xhrRetriever,\n    'chrome': this.xhrRetriever,\n    'app': this.xhrRetriever,\n    'gopher': this.xhrRetriever,  // For Cordova; see http://crbug.com/513352 .\n    'manifest': this.manifestRetriever\n  };\n};\n\n/**\n * Resolve a resurce URL requested from a module.\n * @method get\n * @param {String} manifest The canonical address of the module requesting.\n * @param {String} url The resource to get.\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.get = function (manifest, url) {\n  var key = JSON.stringify([manifest, url]);\n  \n  return new PromiseCompat(function (resolve, reject) {\n    if (this.files[key]) {\n      resolve(this.files[key]);\n    } else {\n      this.resolve(manifest, url).then(function (key, resolve, address) {\n        this.files[key] = address;\n        //fdom.debug.log('Resolved ' + key + ' to ' + address);\n        resolve(address);\n      }.bind(this, key, resolve), reject);\n    }\n  }.bind(this));\n};\n\n/**\n * Get the contents of a resource.\n * @method getContents\n * @param {String} url The resource to read.\n * @returns {Promise} A promise for the resource contents.\n */\nResource.prototype.getContents = function (url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var prop;\n    if (!url) {\n      this.debug.warn(\"Asked to get contents of undefined URL.\");\n      return reject();\n    }\n    for (prop in this.contentRetrievers) {\n      if (this.contentRetrievers.hasOwnProperty(prop)) {\n        if (url.indexOf(prop + \"://\") === 0) {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        } else if (url.indexOf(\"://\") === -1 && prop === \"null\") {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        }\n      }\n    }\n    reject();\n  }.bind(this));\n};\n\n/**\n * Return a promise that resolves when the first of an array of promises\n * resolves, or rejects after all promises reject. Can be thought of as\n * the missing 'Promise.any' - race is no good, since early rejections\n * preempt a subsequent resolution.\n * @private\n * @static\n * @method FirstPromise\n * @param {Promise[]} Promises to select from\n * @returns {Promise} Promise resolving with a value from arguments.\n */\nvar firstPromise = function(promises) {\n  return new PromiseCompat(function(resolve, reject) {\n    var errors = [];\n    promises.forEach(function(promise) {\n      promise.then(resolve, function(err) {\n        errors.push(err);\n        if (errors.length === promises.length) {\n          reject(errors);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Resolve a resource using known resolvers. Unlike get, resolve does\n * not cache resolved resources.\n * @method resolve\n * @private\n * @param {String} manifest The module requesting the resource.\n * @param {String} url The resource to resolve;\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.resolve = function (manifest, url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var promises = [];\n    if (url === undefined) {\n      return reject();\n    }\n    util.eachReverse(this.resolvers, function (resolver) {\n      promises.push(new PromiseCompat(resolver.bind({}, manifest, url)));\n    }.bind(this));\n    firstPromise(promises).then(resolve, function() {\n      reject('No resolvers to handle url: ' + JSON.stringify([manifest, url]));\n    });\n  }.bind(this));\n};\n\n/**\n * Register resolvers: code that knows how to get resources\n * needed by the runtime. A resolver will be called with four\n * arguments: the absolute manifest of the requester, the\n * resource being requested, and a resolve / reject pair to\n * fulfill a promise.\n * @method addResolver\n * @param {Function} resolver The resolver to add.\n */\nResource.prototype.addResolver = function (resolver) {\n  this.resolvers.push(resolver);\n};\n\n/**\n * Register retrievers: code that knows how to load resources\n * needed by the runtime. A retriever will be called with a URL\n * to retrieve with a protocol that it is able to handle.\n * @method addRetriever\n * @param {String} proto The protocol to register for.\n * @param {Function} retriever The retriever to add.\n */\nResource.prototype.addRetriever = function (proto, retriever) {\n  if (this.contentRetrievers[proto]) {\n    this.debug.warn(\"Unwilling to override file retrieval for \" + proto);\n    return;\n  }\n  this.contentRetrievers[proto] = retriever;\n};\n\n/**\n * Register external resolvers and retreavers\n * @method register\n * @param {{\"proto\":String, \"resolver\":Function, \"retreaver\":Function}[]}\n *     resolvers The list of retreivers and resolvers.\n */\nResource.prototype.register = function (resolvers) {\n  if (!resolvers.length) {\n    return;\n  }\n\n  resolvers.forEach(function (item) {\n    if (item.resolver) {\n      this.addResolver(item.resolver);\n    } else if (item.proto && item.retriever) {\n      this.addRetriever(item.proto, item.retriever);\n    }\n  }.bind(this));\n};\n\n/**\n * Determine if a URL is an absolute URL of a given Scheme.\n * @method hasScheme\n * @static\n * @private\n * @param {String[]} protocols Whitelisted protocols\n * @param {String} URL the URL to match.\n * @returns {Boolean} If the URL is an absolute example of one of the schemes.\n */\nResource.hasScheme = function (protocols, url) {\n  var i;\n  for (i = 0; i < protocols.length; i += 1) {\n    if (url.indexOf(protocols[i] + \"://\") === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Remove './' and '../' from a URL\n * Required because Chrome Apps for Mobile (cca) doesn't understand\n * XHR paths with these relative components in the URL.\n * @method removeRelativePath\n * @param {String} url The URL to modify\n * @returns {String} url without './' and '../'\n **/\nResource.removeRelativePath = function (url) {\n  var idx = url.indexOf(\"://\") + 3,\n    stack,\n    toRemove,\n    result;\n  // Remove all instances of /./\n  url = url.replace(/\\/\\.\\//g, \"/\");\n  //Weird bug where in cca, manifest starts with 'chrome:////'\n  //This forces there to only be 2 slashes\n  while (url.charAt(idx) === \"/\") {\n    url = url.slice(0, idx) + url.slice(idx + 1, url.length);\n  }\n\n  // Advance to next /\n  idx = url.indexOf(\"/\", idx);\n  // Removing ../\n  stack = url.substr(idx + 1).split(\"/\");\n  while (stack.indexOf(\"..\") !== -1) {\n    toRemove = stack.indexOf(\"..\");\n    if (toRemove === 0) {\n      stack.shift();\n    } else {\n      stack.splice((toRemove - 1), 2);\n    }\n  }\n  \n  //Rebuild string\n  result = url.substr(0, idx);\n  for (idx = 0; idx < stack.length; idx += 1) {\n    result += \"/\" + stack[idx];\n  }\n  return result;\n};\n\n/**\n * Resolve URLs which can be accessed using standard HTTP requests.\n * @method httpResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.httpResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"http\", \"https\", \"chrome\", \"chrome-extension\", \"resource\",\n                   \"app\", \"gopher\"],\n    dirname,\n    protocolIdx,\n    pathIdx,\n    path,\n    base,\n    result;\n\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(Resource.removeRelativePath(url));\n    return true;\n  }\n  \n  if (!manifest) {\n    reject();\n    return false;\n  }\n  if (Resource.hasScheme(protocols, manifest) &&\n      url.indexOf(\"://\") === -1) {\n    dirname = manifest.substr(0, manifest.lastIndexOf(\"/\"));\n    protocolIdx = dirname.indexOf(\"://\");\n    pathIdx = protocolIdx + 3 + dirname.substr(protocolIdx + 3).indexOf(\"/\");\n    path = dirname.substr(pathIdx);\n    base = dirname.substr(0, pathIdx);\n    if (url.indexOf(\"/\") === 0) {\n      resolve(Resource.removeRelativePath(base + url));\n    } else {\n      resolve(Resource.removeRelativePath(base + path + \"/\" + url));\n    }\n    return true;\n  }\n  reject();\n};\n\n/**\n * Resolve URLs which are self-describing.\n * @method nullResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.nullResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"manifest\"];\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(url);\n    return true;\n  } else if (url.indexOf('data:') === 0) {\n    resolve(url);\n    return true;\n  }\n  reject();\n};\n\n/**\n * Retrieve manifest content from a self-descriptive manifest url.\n * These urls are used to reference a manifest without requiring subsequent,\n * potentially non-CORS requests.\n * @method manifestRetriever\n * @private\n * @param {String} manifest The Manifest URL\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.manifestRetriever = function (manifest, resolve, reject) {\n  var data;\n  try {\n    data = manifest.substr(11);\n    JSON.parse(data);\n    resolve(data);\n  } catch (e) {\n    this.debug.warn(\"Invalid manifest URL referenced:\" + manifest);\n    reject();\n  }\n};\n\n/**\n * Retrieve resource contents using an XHR request.\n * @method xhrRetriever\n * @private\n * @param {String} url The resource to fetch.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.xhrRetriever = function (url, resolve, reject) {\n  var ref = new XMLHttpRequest();\n  ref.addEventListener(\"readystatechange\", function (resolve, reject) {\n    if (ref.readyState === 4 && ref.responseText) {\n      resolve(ref.responseText);\n    } else if (ref.readyState === 4) {\n      this.debug.warn(\"Failed to load file \" + url + \": \" + ref.status);\n      reject(ref.status);\n    }\n  }.bind(this, resolve, reject), false);\n  ref.overrideMimeType(\"application/json\");\n  ref.open(\"GET\", url, true);\n  ref.send();\n};\n\nmodule.exports = Resource;\n","/*globals crypto, WebKitBlobBuilder, Blob, URL */\n/*globals webkitURL, Uint8Array, Uint16Array, ArrayBuffer */\n/*jslint indent:2,white:true,browser:true,node:true,sloppy:true */\n\n/**\n * Utility method used within the freedom Library.\n * @class util\n * @static\n */\nvar util = {};\n\n\n/**\n * Helper function for iterating over an array backwards. If the func\n * returns a true value, it will break out of the loop.\n * @method eachReverse\n * @static\n */\nutil.eachReverse = function(ary, func) {\n  if (ary) {\n    var i;\n    for (i = ary.length - 1; i > -1; i -= 1) {\n      if (ary[i] && func(ary[i], i, ary)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * @method hasProp\n * @static\n */\nutil.hasProp = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n/**\n * Cycles over properties in an object and calls a function for each\n * property value. If the function returns a truthy value, then the\n * iteration is stopped.\n * @method eachProp\n * @static\n */\nutil.eachProp = function(obj, func) {\n  var prop;\n  for (prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      if (func(obj[prop], prop)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Simple function to mix in properties from source into target,\n * but only if target does not already have a property of the same name.\n * This is not robust in IE for transferring methods that match\n * Object.prototype names, but the uses of mixin here seem unlikely to\n * trigger a problem related to that.\n * @method mixin\n * @static\n */\nutil.mixin = function(target, source, force) {\n  if (source) {\n    util.eachProp(source, function (value, prop) {\n      if (force || !util.hasProp(target, prop)) {\n        target[prop] = value;\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Get a unique ID.\n * @method getId\n * @static\n */\nutil.getId = function() {\n  var guid = 'guid',\n      domain = 12,\n      buffer;\n  // Chrome / Firefox.\n  if (typeof crypto === 'object' && crypto.getRandomValues) {\n    buffer = new Uint8Array(domain);\n    crypto.getRandomValues(buffer);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  // Node\n  } else if (typeof crypto === 'object' && crypto.randomBytes) {\n    buffer = crypto.randomBytes(domain);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  } else {\n    while (domain > 0) {\n      guid += '-' + Math.ceil(255 * Math.random());\n      domain -= 1;\n    }\n  }\n\n  return guid;\n};\n\n/**\n * Encode a string into a binary array buffer, by treating each character as a\n * utf16 encoded character - the native javascript encoding.\n * @method str2ab\n * @static\n * @param {String} str The string to encode.\n * @returns {ArrayBuffer} The encoded string.\n */\nutil.str2ab = function(str) {\n  var length = str.length,\n      buffer = new ArrayBuffer(length * 2), // 2 bytes for each char\n      bufferView = new Uint16Array(buffer),\n      i;\n  for (i = 0; i < length; i += 1) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n};\n\n/**\n * Convert an array buffer containing an encoded string back into a string.\n * @method ab2str\n * @static\n * @param {ArrayBuffer} buffer The buffer to unwrap.\n * @returns {String} The decoded buffer.\n */\nutil.ab2str = function(buffer) {\n  var str = '';\n  var a = new Uint16Array(buffer);\n  for (var i = 0; i < a.length; i++) {\n    str += String.fromCharCode(a[i]);\n  }\n  return str;\n};\n\n/**\n * Add 'on' and 'emit' methods to an object, which act as a light weight\n * event handling structure.\n * @class handleEvents\n * @static\n */\nutil.handleEvents = function(obj) {\n  var eventState = {\n    DEBUG_BACKREF: obj,\n    multiple: {},\n    maybemultiple: [],\n    single: {},\n    maybesingle: []\n  }, filter, push;\n\n  /**\n   * Filter a list based on a predicate. The list is filtered in place, with\n   * selected items removed and returned by the function.\n   * @method\n   * @param {Array} list The list to filter\n   * @param {Function} predicate The method to run on each item.\n   * @returns {Array} Selected items\n   */\n  filter = function(list, predicate) {\n    var ret = [], i;\n\n    if (!list || !list.length) {\n      return [];\n    }\n\n    for (i = list.length - 1; i >= 0; i -= 1) {\n      if (predicate(list[i])) {\n        ret.push(list.splice(i, 1));\n      }\n    }\n    return ret;\n  };\n\n  /**\n   * Enqueue a handler for a specific type.\n   * @method\n   * @param {String} to The queue ('single' or 'multiple') to queue on.\n   * @param {String} type The type of event to wait for.\n   * @param {Function} handler The handler to enqueue.\n   */\n  push = function(to, type, handler) {\n    if (typeof type === 'function') {\n      this['maybe' + to].push([type, handler]);\n    } else if (this[to][type]) {\n      this[to][type].push(handler);\n    } else {\n      this[to][type] = [handler];\n    }\n  };\n\n  /**\n   * Register a method to be executed when an event of a specific type occurs.\n   * @method on\n   * @param {String|Function} type The type of event to register against.\n   * @param {Function} handler The handler to run when the event occurs.\n   */\n  obj.on = push.bind(eventState, 'multiple');\n\n  /**\n   * Register a method to be execute the next time an event occurs.\n   * @method once\n   * @param {String|Function} type The type of event to wait for.\n   * @param {Function} handler The handler to run the next time a matching event\n   *     is raised.\n   */\n  obj.once = push.bind(eventState, 'single');\n\n  /**\n   * Emit an event on this object.\n   * @method emit\n   * @param {String} type The type of event to raise.\n   * @param {Object} data The payload of the event.\n   */\n  obj.emit = function(type, data) {\n    var i, queue;\n    // Note that registered handlers may stop events on the object, by calling\n    // this.off(). As such, the presence of these keys must be checked on each\n    // iteration of the relevant loops.\n    for (i = 0; this.multiple[type] &&\n         i < this.multiple[type].length; i += 1) {\n      if (this.multiple[type][i](data) === false) {\n        return;\n      }\n    }\n    if (this.single[type]) {\n      queue = this.single[type];\n      this.single[type] = [];\n      for (i = 0; i < queue.length; i += 1) {\n        queue[i](data);\n      }\n    }\n    for (i = 0; i < this.maybemultiple.length; i += 1) {\n      if (this.maybemultiple[i][0](type, data)) {\n        this.maybemultiple[i][1](data);\n      }\n    }\n    for (i = this.maybesingle.length - 1; i >= 0; i -= 1) {\n      if (this.maybesingle[i][0](type, data)) {\n        queue = this.maybesingle.splice(i, 1);\n        queue[0][1](data);\n      }\n    }\n  }.bind(eventState);\n\n  /**\n   * Remove an event handler\n   * @method off\n   * @param {String} type The type of event to remove.\n   * @param {Function?} handler The handler to remove.\n   */\n  obj.off = function(type, handler) {\n    if (!type) {\n      delete this.DEBUG_BACKREF;\n      this.multiple = {};\n      this.maybemultiple = [];\n      this.single = {};\n      this.maybesingle = [];\n      return;\n    }\n\n    if (typeof type === 'function') {\n      filter(this.maybesingle, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n      filter(this.maybemultiple, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n    }\n\n    if (!handler) {\n      delete this.multiple[type];\n      delete this.single[type];\n    } else {\n      filter(this.multiple[type], function(item) {\n        return item === handler;\n      });\n      filter(this.single[type], function(item) {\n        return item === handler;\n      });\n    }\n  }.bind(eventState);\n};\n\n/**\n * When run without a window, or specifically requested.\n * Note: Declaration can be redefined in forceModuleContext below.\n * @method isModuleContext\n * @for util\n * @static\n */\n/*!@preserve StartModuleContextDeclaration*/\nutil.isModuleContext = function() {\n  return (typeof document === 'undefined');\n};\n\n/**\n * Get a Blob object of a string.\n * Polyfills implementations which don't have a current Blob constructor, like\n * phantomjs.\n * @method getBlob\n * @static\n */\nutil.getBlob = function(data, type) {\n  if (typeof Blob !== 'function' && typeof WebKitBlobBuilder !== 'undefined') {\n    var builder = new WebKitBlobBuilder();\n    builder.append(data);\n    return builder.getBlob(type);\n  } else {\n    return new Blob([data], {type: type});\n  }\n};\n\n/**\n * Find all scripts on the given page.\n * @method scripts\n * @static\n */\nutil.scripts = function(global) {\n  return global.document.getElementsByTagName('script');\n};\n\nmodule.exports = util;\n","/*jslint node:true*/\n\nvar providers = [\n  require('../../providers/core/core.unprivileged'),\n  require('../../providers/core/core.echo'),\n  require('../../providers/core/core.console'),\n  require('../../providers/core/core.crypto'),\n  require('../../providers/core/core.peerconnection'),\n  require('../../providers/core/core.rtcpeerconnection'),\n  require('../../providers/core/core.rtcdatachannel'),\n  require('../../providers/core/core.storage'),\n  require('../../providers/core/core.view'),\n  require('../../providers/core/core.oauth'),\n  require('../../providers/core/core.websocket'),\n  require('../../providers/core/core.xhr')\n];\n\nfunction getFreedomScript() {\n  'use strict';\n  var script;\n  if (window.document.currentScript) {\n    // New browser API\n    script = window.document.currentScript.src;\n  } else if (document.readyState !== \"complete\" &&\n             document.readyState !== \"loaded\") {\n    // Included in HTML or through document.write\n    script = window.document.getElementsByTagName('script');\n    script = script[script.length - 1].src;\n  } else {\n    // Loaded through dom manipulation or async.\n    script = document.querySelector(\n      \"script[src*='freedom.js'],script[src*='freedom-']\"\n    );\n    if (script.length !== 1) {\n      console.error(\"Could not determine freedom.js script tag.\");\n    }\n    script = script[0].src;\n  }\n  return script;\n}\n\nif (typeof window !== 'undefined') {\n  window.freedom = require('../entry').bind({}, {\n    location: window.location.href,\n    portType: require('../link/worker'),\n    source: getFreedomScript(),\n    providers: providers,\n    oauth: [\n      require('../../providers/oauth/oauth.localpageauth'),\n      require('../../providers/oauth/oauth.remotepageauth')\n    ]\n  });\n} else {\n  require('../entry')({\n    isModule: true,\n    portType: require('../link/worker'),\n    providers: providers,\n    global: global\n  });\n}\n"]}