{"version":3,"sources":["../build/node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","../build/dist/bundle.compiled.js","../build/node_modules/es6-promise/dist/es6-promise.js","../build/node_modules/grunt-browserify/node_modules/browserify/node_modules/process/browser.js","../build/node_modules/webrtc-adapter/adapter.js","../build/providers/core/core.console.js","../build/providers/core/core.echo.js","../build/providers/core/core.oauth.js","../build/providers/core/core.peerconnection.js","../build/providers/core/core.rtcdatachannel.js","../build/providers/core/core.rtcpeerconnection.js","../build/providers/core/core.storage.js","../build/providers/core/core.unprivileged.js","../build/providers/core/core.view.js","../build/providers/core/core.websocket.js","../build/providers/core/core.xhr.js","../build/providers/oauth/oauth.localpageauth.js","../build/providers/oauth/oauth.remotepageauth.js","../build/src/api.js","../build/src/bundle.js","../build/src/consumer.js","../build/src/debug.js","../build/src/entry.js","../build/src/hub.js","../build/src/link.js","../build/src/link/worker.js","../build/src/manager.js","../build/src/module.js","../build/src/moduleinternal.js","../build/src/policy.js","../build/src/provider.js","../build/src/proxy/apiInterface.js","../build/src/proxy/eventInterface.js","../build/src/proxybinder.js","../build/src/resource.js","../build/src/util.js","../build/src/util/workerEntry.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","name","api","log","type","value","debug","info","warn","error","setup","send","message","createChannel","ret","channel","identifier","bindChannel","getId","getLogger","initiateOAuth","redirect","state","err","errcode","launchAuthFlow","channelLabel","text","binary","buffer","onReceived","openDataChannel","closeDataChannel","onOpenDataChannel","channelId","onCloseDataChannel","getBufferedAmount","getInfo","createOffer","offerToReceiveVideo","offerToReceiveAudio","voiceActivityDetection","iceRestart","sdp","close","onClose","constructor","getLabel","getOrdered","getMaxPacketLifeTime","getMaxRetransmits","getProtocol","getNegotiated","getReadyState","onopen","onerror","onclose","onmessage","getBinaryType","setBinaryType","sendBuffer","iceServers","urls","username","credential","iceTransports","peerIdentity","createAnswer","setLocalDescription","getLocalDescription","setRemoteDescription","getRemoteDescription","getSignalingState","updateIce","addIceCandidate","candidate","sdpMid","sdpMLineIndex","getIceGatheringState","getIceConnectionState","getConfiguration","getLocalStreams","getRemoteStreams","getStreamById","addStream","removeStream","createDataChannel","ordered","maxPacketLifeTime","maxRetransmits","protocol","negotiated","id","ondatachannel","getStats","onnegotiationneeded","onicecandidate","onsignalingstatechange","onaddstream","stream","onremovestream","oniceconnectionstatechange","keys","get","set","remove","clear","connected","localAddress","localPort","peerAddress","peerPort","ERRCODE","SUCCESS","UNKNOWN","ALREADY_CONNECTED","INVALID_ARGUMENT","TIMED_OUT","NOT_CONNECTED","NETWORK_CHANGED","CONNECTION_CLOSED","CONNECTION_RESET","CONNECTION_REFUSED","CONNECTION_FAILED","onDisconnect","connect","secure","prepareSecure","write","onData","data","listen","onConnection","socket","host","port","ALREADY_BOUND","SNED_FAILED","bind","sendTo","destroy","resultCode","address","show","isSecure","postMessage","onMessage","onOpen","onError","reason","wasClean","open","string","abort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","getResponse","object","getResponseText","getResponseURL","getResponseType","setResponseType","getStatus","getStatusText","getTimeout","setTimeout","getWithCredentials","setWithCredentials","onloadstart","lengthComputable","loaded","total","onprogress","onabort","onload","ontimeout","onloadend","onreadystatechange","onuploadloadstart","onuploadprogress","onuploadabort","onuploaderror","onuploadload","onuploadtimeout","onuploadloadend","onuploadreadystatechange","OFFLINE","MALFORMEDPARAMETERS","LOGIN_BADCREDENTIALS","LOGIN_FAILEDCONNECTION","LOGIN_ALREADYONLINE","LOGIN_OAUTHERROR","SEND_INVALIDDESTINATION","STATUS","ONLINE","ONLINE_WITH_OTHER_APP","login","agent","version","url","interactive","rememberLogin","userId","clientId","status","lastUpdated","lastSeen","clearCachedCredentials","getClients","getUsers","sendMessage","logout","from","onUserProfile","imageData","onClientState","scope","SESSION","DEVICE_LOCAL","USER_LOCAL","SHARED","tag","process","global","$$utils$$objectOrFunction","x","$$utils$$isFunction","$$utils$$isMaybeThenable","$$utils$$F","$$asap$$useNextTick","nextTick","$$asap$$flush","$$asap$$useMutationObserver","iterations","observer","$$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","$$asap$$useMessageChannel","MessageChannel","port1","port2","$$asap$$useSetTimeout","$$asap$$len","callback","$$asap$$queue","arg","undefined","$$$internal$$noop","$$$internal$$selfFullfillment","TypeError","$$$internal$$cannotReturnOwn","$$$internal$$getThen","promise","then","$$$internal$$GET_THEN_ERROR","$$$internal$$tryThen","fulfillmentHandler","rejectionHandler","$$$internal$$handleForeignThenable","thenable","$$asap$$default","sealed","$$$internal$$resolve","$$$internal$$fulfill","$$$internal$$reject","_label","$$$internal$$handleOwnThenable","_state","$$$internal$$FULFILLED","_result","$$$internal$$REJECTED","$$$internal$$subscribe","$$$internal$$handleMaybeThenable","maybeThenable","$$$internal$$publishRejection","_onerror","$$$internal$$publish","$$$internal$$PENDING","_subscribers","parent","child","onFulfillment","onRejection","subscribers","settled","detail","$$$internal$$invokeCallback","$$$internal$$ErrorObject","this","$$$internal$$tryCatch","$$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","$$$internal$$initializePromise","resolver","$$$enumerator$$Enumerator","Constructor","input","abortOnReject","label","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","_enumerate","_validationError","$$es6$promise$promise$$needsResolver","$$es6$promise$promise$$needsNew","$$es6$promise$promise$$Promise","_id","$$es6$promise$promise$$counter","$$utils$$_isArray","Array","isArray","Object","prototype","toString","$$asap$$scheduleFlush","$$utils$$isArray","Date","now","getTime","create","arguments","$$asap$$browserGlobal","window","MutationObserver","WebKitMutationObserver","$$asap$$isWorker","Uint8ClampedArray","importScripts","$$$enumerator$$default","_eachEntry","entry","c","_settledAt","_willSettleAt","resolve","_makeResult","enumerator","$$promise$all$$default","entries","$$promise$race$$default","$$promise$resolve$$default","$$promise$reject$$default","$$es6$promise$promise$$default","all","race","reject","result","catch","$$es6$promise$polyfill$$default","local","self","es6PromiseSupport","Promise","es6$promise$umd$$ES6Promise","polyfill","define","noop","canSetImmediate","setImmediate","canMutationObserver","canPost","addEventListener","queue","hiddenDiv","createElement","queueList","slice","forEach","fn","attributes","setAttribute","push","ev","source","stopPropagation","shift","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","myRTCPeerConnection","myRTCSessionDescription","myRTCIceCandidate","renameIceURLs","config","server","fixChromeStatsResponse","response","standardReport","reports","report","standardStats","timestamp","names","stat","sessionHasData","desc","hasData","prefix","split","line","RTCPeerConnection","mozRTCPeerConnection","configuration","constraints","pc","dataEnabled","boundCreateDataChannel","dataChannelDict","dc","localDescription","remoteDescription","event","Event","webkitRTCPeerConnection","boundGetStats","selector","successCallback","failureCallback","successCallbackWrapper","chromeStatsResponse","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","util","Logger_console","cap","level","console","handleEvents","print","severity","msg","arr","freedom","unshift","maxLogLevel","freedomDump","dump","join","toUpperCase","__mozillaConsole__","apply","continuation","provider","flags","Echo_unprivileged","dispatchEvent","mod","Core","core","controlChannel","request","proxy","chan","m","str","OAuth","handlers","ongoing","register","boundHandlers","reset","redirectURIs","authUrl","stateObj","hasOwnProperty","SimpleDataPeer","peerName","stunServers","dataChannelCallbacks","mocks","channels","onConnectedQueue","optional","DtlsSrtpKeyAgreement","sendSignalMessage","onIceCallback","onNegotiationNeeded","onDataChannel","signalingState","pcState","SimpleDataPeerState","CONNECTED","map","DISCONNECTED","PeerConnection","portModule","Math","random","freedomModule","signallingChannel","peer","CONNECTING","constaints","runWhenConnected","func","dataChannel","addDataChannel","negotiateConnection","closeChannel","bufferedAmount","setSendSignalMessage","sendSignalMessageFn","handleSignalMessage","messageText","ice_candidate","json","JSON","parse","onDescription","isClosed","callbacks","readyState","onOpenFn","onCloseFn","onMessageFn","onErrorFn","description","stringify","logSuccess","logFail","onSignalingStateChange","signallingChannelId","initiateConnection","openDataChannelContinuation","ArrayBuffer","Blob","success","sendInfo","objToSend","unAttachedChannels","allocateChannel","RTCDataChannelAdapter","dispatchEvents","Connection","events","manageEvents","attach","binaryType","allocate","adapter","PromiseCompat","DataChannel","RTCPeerConnectionAdapter","connection","iceGatheringState","iceConnectionState","style","Storage_unprivileged","localStorage","key","val","getItem","setItem","removeItem","EventInterface","Consumer","Core_unprivileged","manager","unboundChannels","contextId","getChannel","delegate","toDelegate","flow","iface","getProxyInterface","doClose","remote","reply","toBind","newSource","createLink","p","cb","hub","getDestination","getInterface","setId","Core_View","listener","active","page","resources","root","frame","container","body","getElementById","width","height","display","appendChild","border","background","src","contentWindow","removeChild","removeEventListener","manifest","views","toResolve","main","files","concat","fname","resource","manifestId","PageProvider","WSHandle","nodeStyle","WS","protocols","WSImplementation","isNode","WebSocket","websocket","SyntaxError","toSend","Uint8Array","errorCode","setSocket","impl","XhrProvider","_dispatchEvent","_xhr","XMLHttpRequest","_events","_setupListeners","method","async","user","password","header","mime","responseType","responseText","responseURL","statusText","timeout","withCredentials","wc","eventName","upload","oAuthRedirectId","loadedOnStartup","location","href","indexOf","LocalPageAuth","listeners","here","pathname","storageListener","RemotePageAuth","Api","apis","providers","waiters","definition","args","inst","getCore","provideCore","cleanup","prop","doReject","waiter","Bundle","interfaces","registry","bundle","interfaceCls","nextId","ifaces","closeHandlers","errorHandlers","emits","reverse","emitChannel","to","teardown","eachProp","Iface","getInterfaceConstructor","getListener","instance","handler","obj","binder","doEmit","messageToPortable","template","externals","conform","portableToMessage","streams","separate","String","Number","Boolean","makeArrayBuffer","thing","DataView","recursiveFreezeObject","k","defineProperty","writable","enumerable","Debug","setLogger","logger","format","argarr","alist","quiet","splice","freedomGlobal","Hub","Manager","Policy","ProxyBinder","Resource","getGlobal","context","policy","link","Port","site_cfg","moduleContext","isModule","isModuleContext","mixin","substr","resolvers","portType","fallbackLogger","getIface","canonical_manifest","bindDefault","external","apps","routes","destination","app","trace","action","getSource","force","deregister","install","route","generateRoute","uninstall","Link","deliverMessage","start","addErrorHandler","emitMessage","WorkerLink","setupListener","setupWorker","stop","onMsg","worker","Worker","terminate","ModuleInternal","controlFlows","dataFlows","reverseFlowMap","origin","reverseFlow","overrideDest","addResolver","addRetriever","service","removeLink","getPort","portId","lineage","destName","toDest","outgoingName","outgoing","rflow","forgetFlow","Provider","Module","manifestURL","creator","externalPortMap","internalPortMap","dependantChannels","started","dependencies","deregisterFlow","provides","modInternal","internal","loadLinks","appId","dep","permissions","updateEnv","metadata","icon","manifests","pendingPorts","requests","updateManifest","defaultPort","externalChannel","objects","mapProxies","generateEnv","loadScripts","script","items","def","exp","manifestPredicate","onManifest","item","getExternal","CoreProv","provideAsynchronous","proxies","seen","scripts","scripts_count","load","importer","next","tryLoad","stack","runtimes","policies","pending","add","defaultPolicy","defaultConstraints","isolation","placement","loadManifest","overlay","runtime","findDestination","isRunning","fullMatch","okay","j","modules","getContents","modFingerprint","base","mode","synchronous","providerCls","asynchronous","promises","getProvider","onmsg","provideSynchronous","prov","providePromises","ids","BoundClass","reqId","ApiInterface","inflight","emitter","thisReq","httpResolver","nullResolver","contentRetrievers","http","xhrRetriever","https","chrome-extension","chrome","manifestRetriever","firstPromise","errors","eachReverse","proto","retriever","hasScheme","removeRelativePath","toRemove","idx","replace","charAt","dirname","protocolIdx","pathIdx","path","lastIndexOf","ref","ary","hasProp","target","guid","domain","crypto","getRandomValues","randomBytes","ceil","str2ab","bufferView","Uint16Array","charCodeAt","ab2str","fromCharCode","filter","eventState","DEBUG_BACKREF","multiple","maybemultiple","single","maybesingle","list","predicate","getBlob","WebKitBlobBuilder","builder","append","getElementsByTagName","getFreedomScript","currentScript","querySelector","oauth"],"mappings":"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","file":"freedom.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = [{\"name\":\"console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.echo\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"message\":{\"type\":\"event\",\"value\":\"string\"}}},{\"name\":\"core\",\"api\":{\"createChannel\":{\"type\":\"method\",\"value\":[],\"ret\":{\"channel\":\"proxy\",\"identifier\":\"string\"}},\"bindChannel\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getLogger\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"}}},{\"name\":\"core.oauth\",\"api\":{\"initiateOAuth\":{\"type\":\"method\",\"value\":[[\"array\",\"string\"]],\"ret\":{\"redirect\":\"string\",\"state\":\"string\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"launchAuthFlow\":{\"type\":\"method\",\"value\":[\"string\",{\"redirect\":\"string\",\"state\":\"string\"}],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"core.peerconnection\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"string\",[\"array\",\"string\"],\"boolean\"]},\"send\":{\"type\":\"method\",\"value\":[{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}]},\"onReceived\":{\"type\":\"event\",\"value\":{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"openDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"closeDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"onOpenDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"onCloseDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveVideo\":\"number\",\"offerToReceiveAudio\":\"number\",\"voiceActivityDetection\":\"boolean\",\"iceRestart\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[]},\"onClose\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"core.rtcdatachannel\",\"api\":{\"constructor\":{\"value\":[\"string\"]},\"getLabel\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getOrdered\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getMaxPacketLifeTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getMaxRetransmits\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getProtocol\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getNegotiated\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"onopen\":{\"type\":\"event\",\"value\":[]},\"onerror\":{\"type\":\"event\",\"value\":[]},\"onclose\":{\"type\":\"event\",\"value\":[]},\"close\":{\"type\":\"method\",\"value\":[]},\"onmessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"buffer\":\"buffer\"}},\"getBinaryType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setBinaryType\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"sendBuffer\":{\"type\":\"method\",\"value\":[\"buffer\"]}}},{\"name\":\"core.rtcpeerconnection\",\"api\":{\"constructor\":{\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}]},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveAudio\":\"number\",\"offerToReceiveVideo\":\"number\",\"iceRestart\":\"boolean\",\"voiceActivityDetection\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"createAnswer\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setLocalDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}]},\"getLocalDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setRemoteDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}],\"ret\":{}},\"getRemoteDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"getSignalingState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"updateIce\":{\"type\":\"method\",\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}],\"ret\":{}},\"addIceCandidate\":{\"type\":\"method\",\"value\":[{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}],\"ret\":{}},\"getIceGatheringState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getIceConnectionState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getConfiguration\":{\"type\":\"method\",\"value\":[],\"ret\":{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}},\"getLocalStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getRemoteStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getStreamById\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"addStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"removeStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":{}},\"createDataChannel\":{\"type\":\"method\",\"value\":[\"string\",{\"ordered\":\"boolean\",\"maxPacketLifeTime\":\"number\",\"maxRetransmits\":\"number\",\"protocol\":\"string\",\"negotiated\":\"boolean\",\"id\":\"number\"}],\"ret\":\"string\"},\"ondatachannel\":{\"type\":\"event\",\"value\":{\"channel\":\"string\"}},\"getStats\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"object\"},\"onnegotiationneeded\":{\"type\":\"event\",\"value\":[]},\"onicecandidate\":{\"type\":\"event\",\"value\":{\"candidate\":{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}}},\"onsignalingstatechange\":{\"type\":\"event\",\"value\":[]},\"onaddstream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"onremovestream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"oniceconnectionstatechange\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.storage\",\"api\":{\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\"},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"clear\":{\"type\":\"method\",\"value\":[]}}},{\"name\":\"core.tcpsocket\",\"api\":{\"constructor\":{\"value\":[\"number\"]},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"connected\":\"boolean\",\"localAddress\":\"string\",\"localPort\":\"number\",\"peerAddress\":\"string\",\"peerPort\":\"number\"}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_CONNECTED\":\"Socket already connected\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"TIMED_OUT\":\"Timed out\",\"NOT_CONNECTED\":\"Socket not connected\",\"NETWORK_CHANGED\":\"Network changed\",\"CONNECTION_CLOSED\":\"Connection closed gracefully\",\"CONNECTION_RESET\":\"Connection reset\",\"CONNECTION_REFUSED\":\"Connection refused\",\"CONNECTION_FAILED\":\"Connection failed\"}},\"close\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onDisconnect\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"connect\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"secure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"prepareSecure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"write\":{\"type\":\"method\",\"value\":[\"buffer\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"data\":\"buffer\"}},\"listen\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onConnection\":{\"type\":\"event\",\"value\":{\"socket\":\"number\",\"host\":\"string\",\"port\":\"number\"}}}},{\"name\":\"core.udpsocket\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_BOUND\":\"Socket already bound\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"NETWORK_CHANGED\":\"Network changed\",\"SNED_FAILED\":\"Send failed\"}},\"bind\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"localAddress\":\"string\",\"localPort\":\"number\"}},\"sendTo\":{\"type\":\"method\",\"value\":[\"buffer\",\"string\",\"number\"],\"ret\":\"number\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"destroy\":{\"type\":\"method\",\"value\":[]},\"onData\":{\"type\":\"event\",\"value\":{\"resultCode\":\"number\",\"address\":\"string\",\"port\":\"number\",\"data\":\"buffer\"}}}},{\"name\":\"core.view\",\"api\":{\"show\":{\"type\":\"method\",\"value\":[\"string\"]},\"isSecure\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"close\":{\"type\":\"method\",\"value\":[]},\"postMessage\":{\"type\":\"method\",\"value\":[\"object\"]},\"message\":{\"type\":\"event\",\"value\":\"object\"},\"onClose\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.websocket\",\"api\":{\"constructor\":{\"value\":[\"string\",[\"array\",\"string\"]]},\"send\":{\"type\":\"method\",\"value\":[{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"close\":{\"type\":\"method\",\"value\":[\"number\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"onOpen\":{\"type\":\"event\",\"value\":[]},\"onError\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onClose\":{\"type\":\"event\",\"value\":{\"code\":\"number\",\"reason\":\"string\",\"wasClean\":\"boolean\"}}}},{\"name\":\"core.xhr\",\"api\":{\"open\":{\"type\":\"method\",\"value\":[\"string\",\"string\",\"boolean\",\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[{\"string\":\"string\",\"buffer\":\"buffer\"}]},\"abort\":{\"type\":\"method\",\"value\":[]},\"getResponseHeader\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"getAllResponseHeaders\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setRequestHeader\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"overrideMimeType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getResponse\":{\"type\":\"method\",\"value\":[],\"ret\":{\"string\":\"string\",\"buffer\":\"buffer\",\"object\":\"object\"}},\"getResponseText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseURL\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setResponseType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getStatus\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getStatusText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getTimeout\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"setTimeout\":{\"type\":\"method\",\"value\":[\"number\"]},\"getWithCredentials\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"setWithCredentials\":{\"type\":\"method\",\"value\":[\"boolean\"]},\"onloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onerror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"ontimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onreadystatechange\":{\"type\":\"event\",\"value\":{}},\"onuploadloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploaderror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadtimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadreadystatechange\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"social\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"User is currently offline\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\",\"LOGIN_BADCREDENTIALS\":\"Error authenticating with server\",\"LOGIN_FAILEDCONNECTION\":\"Error connecting to server\",\"LOGIN_ALREADYONLINE\":\"User is already logged in\",\"LOGIN_OAUTHERROR\":\"OAuth Error\",\"SEND_INVALIDDESTINATION\":\"Message sent to an invalid destination\"}},\"STATUS\":{\"type\":\"constant\",\"value\":{\"OFFLINE\":\"OFFLINE\",\"ONLINE\":\"ONLINE\",\"ONLINE_WITH_OTHER_APP\":\"ONLINE_WITH_OTHER_APP\"}},\"login\":{\"type\":\"method\",\"value\":[{\"agent\":\"string\",\"version\":\"string\",\"url\":\"string\",\"interactive\":\"boolean\",\"rememberLogin\":\"boolean\"}],\"ret\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clearCachedCredentials\":{\"type\":\"method\",\"value\":[]},\"getClients\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getUsers\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"sendMessage\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"logout\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"from\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"message\":\"string\"}},\"onUserProfile\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"lastUpdated\":\"number\",\"name\":\"string\",\"url\":\"string\",\"imageData\":\"string\"}},\"onClientState\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"}}}},{\"name\":\"storage\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"storebuffer\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"transport\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"proxy\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"tag\":\"string\",\"data\":\"buffer\"}},\"onClose\":{\"type\":\"event\",\"value\":[]}}}];\n","(function (process,global){\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.0.1\n */\n\n(function() {\n    \"use strict\";\n\n    function $$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function $$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function $$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var $$utils$$_isArray;\n\n    if (!Array.isArray) {\n      $$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      $$utils$$_isArray = Array.isArray;\n    }\n\n    var $$utils$$isArray = $$utils$$_isArray;\n    var $$utils$$now = Date.now || function() { return new Date().getTime(); };\n    function $$utils$$F() { }\n\n    var $$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      $$utils$$F.prototype = o;\n      return new $$utils$$F();\n    });\n\n    var $$asap$$len = 0;\n\n    var $$asap$$default = function asap(callback, arg) {\n      $$asap$$queue[$$asap$$len] = callback;\n      $$asap$$queue[$$asap$$len + 1] = arg;\n      $$asap$$len += 2;\n      if ($$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        $$asap$$scheduleFlush();\n      }\n    };\n\n    var $$asap$$browserGlobal = (typeof window !== 'undefined') ? window : {};\n    var $$asap$$BrowserMutationObserver = $$asap$$browserGlobal.MutationObserver || $$asap$$browserGlobal.WebKitMutationObserver;\n\n    // test for web worker but not in IE10\n    var $$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function $$asap$$useNextTick() {\n      return function() {\n        process.nextTick($$asap$$flush);\n      };\n    }\n\n    function $$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new $$asap$$BrowserMutationObserver($$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function $$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = $$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function $$asap$$useSetTimeout() {\n      return function() {\n        setTimeout($$asap$$flush, 1);\n      };\n    }\n\n    var $$asap$$queue = new Array(1000);\n\n    function $$asap$$flush() {\n      for (var i = 0; i < $$asap$$len; i+=2) {\n        var callback = $$asap$$queue[i];\n        var arg = $$asap$$queue[i+1];\n\n        callback(arg);\n\n        $$asap$$queue[i] = undefined;\n        $$asap$$queue[i+1] = undefined;\n      }\n\n      $$asap$$len = 0;\n    }\n\n    var $$asap$$scheduleFlush;\n\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n      $$asap$$scheduleFlush = $$asap$$useNextTick();\n    } else if ($$asap$$BrowserMutationObserver) {\n      $$asap$$scheduleFlush = $$asap$$useMutationObserver();\n    } else if ($$asap$$isWorker) {\n      $$asap$$scheduleFlush = $$asap$$useMessageChannel();\n    } else {\n      $$asap$$scheduleFlush = $$asap$$useSetTimeout();\n    }\n\n    function $$$internal$$noop() {}\n    var $$$internal$$PENDING   = void 0;\n    var $$$internal$$FULFILLED = 1;\n    var $$$internal$$REJECTED  = 2;\n    var $$$internal$$GET_THEN_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function $$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.')\n    }\n\n    function $$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        $$$internal$$GET_THEN_ERROR.error = error;\n        return $$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function $$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function $$$internal$$handleForeignThenable(promise, thenable, then) {\n       $$asap$$default(function(promise) {\n        var sealed = false;\n        var error = $$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            $$$internal$$resolve(promise, value);\n          } else {\n            $$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          $$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          $$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function $$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, thenable._result);\n      } else if (promise._state === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, thenable._result);\n      } else {\n        $$$internal$$subscribe(thenable, undefined, function(value) {\n          $$$internal$$resolve(promise, value);\n        }, function(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function $$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        $$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = $$$internal$$getThen(maybeThenable);\n\n        if (then === $$$internal$$GET_THEN_ERROR) {\n          $$$internal$$reject(promise, $$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          $$$internal$$fulfill(promise, maybeThenable);\n        } else if ($$utils$$isFunction(then)) {\n          $$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          $$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function $$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        $$$internal$$reject(promise, $$$internal$$selfFullfillment());\n      } else if ($$utils$$objectOrFunction(value)) {\n        $$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        $$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function $$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      $$$internal$$publish(promise);\n    }\n\n    function $$$internal$$fulfill(promise, value) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = $$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n      } else {\n        $$asap$$default($$$internal$$publish, promise);\n      }\n    }\n\n    function $$$internal$$reject(promise, reason) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n      promise._state = $$$internal$$REJECTED;\n      promise._result = reason;\n\n      $$asap$$default($$$internal$$publishRejection, promise);\n    }\n\n    function $$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + $$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + $$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        $$asap$$default($$$internal$$publish, parent);\n      }\n    }\n\n    function $$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          $$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function $$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var $$$internal$$TRY_CATCH_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        $$$internal$$TRY_CATCH_ERROR.error = e;\n        return $$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function $$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = $$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = $$$internal$$tryCatch(callback, detail);\n\n        if (value === $$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          $$$internal$$reject(promise, $$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== $$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        $$$internal$$resolve(promise, value);\n      } else if (failed) {\n        $$$internal$$reject(promise, error);\n      } else if (settled === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, value);\n      } else if (settled === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, value);\n      }\n    }\n\n    function $$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          $$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        $$$internal$$reject(promise, e);\n      }\n    }\n\n    function $$$enumerator$$makeSettledResult(state, position, value) {\n      if (state === $$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n        return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function $$$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor($$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          $$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            $$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        $$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    $$$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return $$utils$$isArray(input);\n    };\n\n    $$$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    $$$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var $$$enumerator$$default = $$$enumerator$$Enumerator;\n\n    $$$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var promise = this.promise;\n      var input   = this._input;\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      if ($$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== $$$internal$$PENDING) {\n          entry._onerror = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else {\n          this._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult($$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === $$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === $$$internal$$REJECTED) {\n          $$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        $$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    $$$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      $$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt($$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt($$$internal$$REJECTED, i, reason);\n      });\n    };\n\n    var $$promise$all$$default = function all(entries, label) {\n      return new $$$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    };\n\n    var $$promise$race$$default = function race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor($$$internal$$noop, label);\n\n      if (!$$utils$$isArray(entries)) {\n        $$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        $$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        $$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        $$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    };\n\n    var $$promise$resolve$$default = function resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$resolve(promise, object);\n      return promise;\n    };\n\n    var $$promise$reject$$default = function reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$reject(promise, reason);\n      return promise;\n    };\n\n    var $$es6$promise$promise$$counter = 0;\n\n    function $$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function $$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var $$es6$promise$promise$$default = $$es6$promise$promise$$Promise;\n\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function $$es6$promise$promise$$Promise(resolver) {\n      this._id = $$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if ($$$internal$$noop !== resolver) {\n        if (!$$utils$$isFunction(resolver)) {\n          $$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof $$es6$promise$promise$$Promise)) {\n          $$es6$promise$promise$$needsNew();\n        }\n\n        $$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    $$es6$promise$promise$$Promise.all = $$promise$all$$default;\n    $$es6$promise$promise$$Promise.race = $$promise$race$$default;\n    $$es6$promise$promise$$Promise.resolve = $$promise$resolve$$default;\n    $$es6$promise$promise$$Promise.reject = $$promise$reject$$default;\n\n    $$es6$promise$promise$$Promise.prototype = {\n      constructor: $$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === $$$internal$$FULFILLED && !onFulfillment || state === $$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor($$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          $$asap$$default(function(){\n            $$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          $$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n\n    var $$es6$promise$polyfill$$default = function polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n        local = global;\n      } else if (typeof window !== 'undefined' && window.document) {\n        local = window;\n      } else {\n        local = self;\n      }\n\n      var es6PromiseSupport =\n        \"Promise\" in local &&\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        \"resolve\" in local.Promise &&\n        \"reject\" in local.Promise &&\n        \"all\" in local.Promise &&\n        \"race\" in local.Promise &&\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        (function() {\n          var resolve;\n          new local.Promise(function(r) { resolve = r; });\n          return $$utils$$isFunction(resolve);\n        }());\n\n      if (!es6PromiseSupport) {\n        local.Promise = $$es6$promise$promise$$default;\n      }\n    };\n\n    var es6$promise$umd$$ES6Promise = {\n      'Promise': $$es6$promise$promise$$default,\n      'polyfill': $$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = es6$promise$umd$$ES6Promise;\n    }\n}).call(this);\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","/*jslint node:true*/\n/*globals RTCPeerConnection, mozRTCPeerConnection, webkitRTCPeerConnection */\n/*globals RTCSessionDescription, mozRTCSessionDescription */\n/*globals RTCIceCandidate, mozRTCIceCandidate */\n'use strict';\n\nvar myRTCPeerConnection = null;\nvar myRTCSessionDescription = null;\nvar myRTCIceCandidate = null;\n\nvar renameIceURLs = function (config) {\n  if (!config) {\n    return;\n  }\n  if (!config.iceServers) {\n    return config;\n  }\n  config.iceServers.forEach(function (server) {\n    server.url = server.urls;\n    delete server.urls;\n  });\n  return config;\n};\n\nvar fixChromeStatsResponse = function(response) {\n  var standardReport = {};\n  var reports = response.result();\n  reports.forEach(function(report) {\n    var standardStats = {\n      id: report.id,\n      timestamp: report.timestamp,\n      type: report.type\n    };\n    report.names().forEach(function(name) {\n      standardStats[name] = report.stat(name);\n    });\n    standardReport[standardStats.id] = standardStats;\n  });\n\n  return standardReport;\n};\n\nvar sessionHasData = function(desc) {\n  if (!desc) {\n    return false;\n  }\n  var hasData = false;\n  var prefix = 'm=application';\n  desc.sdp.split('\\n').forEach(function(line) {\n    if (line.slice(0, prefix.length) === prefix) {\n      hasData = true;\n    }\n  });\n  return hasData;\n};\n\n// Unify PeerConnection Object.\nif (typeof RTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = RTCPeerConnection;\n} else if (typeof mozRTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = function (configuration, constraints) {\n    // Firefox uses 'url' rather than 'urls' for RTCIceServer.urls\n    var pc = new mozRTCPeerConnection(renameIceURLs(configuration), constraints);\n\n    // Firefox doesn't fire 'onnegotiationneeded' when a data channel is created\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n    var dataEnabled = false;\n    var boundCreateDataChannel = pc.createDataChannel.bind(pc);\n    pc.createDataChannel = function(label, dataChannelDict) {\n      var dc = boundCreateDataChannel(label, dataChannelDict);\n      if (!dataEnabled) {\n        dataEnabled = true;\n        if (pc.onnegotiationneeded &&\n            !sessionHasData(pc.localDescription) &&\n            !sessionHasData(pc.remoteDescription)) {\n          var event = new Event('negotiationneeded');\n          pc.onnegotiationneeded(event);\n        }\n      }\n      return dc;\n    };\n\n    return pc;\n  };\n} else if (typeof webkitRTCPeerConnection !== 'undefined') {\n  // Chrome returns a nonstandard, non-JSON-ifiable response from getStats.\n  myRTCPeerConnection = function(configuration, constraints) {\n    var pc = new webkitRTCPeerConnection(configuration, constraints);\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(chromeStatsResponse) {\n        successCallback(fixChromeStatsResponse(chromeStatsResponse));\n      };\n      // Chrome also takes its arguments in the wrong order.\n      boundGetStats(successCallbackWrapper, failureCallback, selector);\n    };\n    return pc;\n  };\n}\n\n// Unify SessionDescrption Object.\nif (typeof RTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = RTCSessionDescription;\n} else if (typeof mozRTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = mozRTCSessionDescription;\n}\n\n// Unify IceCandidate Object.\nif (typeof RTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = RTCIceCandidate;\n} else if (typeof mozRTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = mozRTCIceCandidate;\n}\n\nexports.RTCPeerConnection = myRTCPeerConnection;\nexports.RTCSessionDescription = myRTCSessionDescription;\nexports.RTCIceCandidate = myRTCIceCandidate;\n","(function (process){\n/*globals process, console */\n/*jslint indent:2,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A freedom.js logging provider that logs to chrome, firefox, and node consoles.\n * @Class Logger_console\n * @constructor\n * @private\n * @param {config: Object} cap Capabilities - console requires global config.\n */\nvar Logger_console = function (cap) {\n  this.level = (cap.config && cap.config.debug) || 'log';\n  this.console = (cap.config && cap.config.global.console);\n  util.handleEvents(this);\n};\n\n\n/**\n * Logging levels, for filtering output.\n * @private\n * @static\n */\nLogger_console.level = {\n  \"debug\": 0,\n  \"info\": 1,\n  \"log\": 2,\n  \"warn\": 3,\n  \"error\": 4\n};\n\n/**\n * Print a message with appropriate formatting.\n * @method print\n */\nLogger_console.prototype.print = function (severity, source, msg) {\n  var arr = msg;\n  if (typeof this.console === 'undefined' ||\n      this.console.freedom === true) {\n    return;\n  }\n  if (typeof arr === 'string') {\n    arr = [arr];\n  }\n  \n  if (Logger_console.level[this.level] !== undefined &&\n      Logger_console.level[severity] < Logger_console.level[this.level]) {\n    return;\n  }\n  \n  if (typeof process !== 'undefined' &&\n      {}.toString.call(process) === '[object process]' && source) {\n    arr.unshift('\\x1B[39m');\n    arr.unshift('\\x1B[31m' + source);\n    /*jslint nomen: true*/\n    // Firefox in JSM context.\n    // see: http://mxr.mozilla.org/mozilla-release/source/toolkit/devtools/Console.jsm\n    } else if (this.console.maxLogLevel && source) {\n      if (!this.console.freedomDump) {\n        this.console.freedomDump = this.console.dump;\n        this.console.dump = function() {};\n      }\n      this.console.freedomDump('{' + source + '}.' + severity + ': ' +\n          arr.join(' ') + '\\n');\n      arr.unshift(source.toUpperCase());\n  // Firefox in browser context.\n  } else if (this.console.__mozillaConsole__ && source) {\n    arr.unshift(source.toUpperCase());\n    /*jslint nomen: false*/\n  } else if (source) {\n    arr.unshift('color: red');\n    arr.unshift('%c ' + source);\n  }\n  if (!this.console[severity] && this.console.log) {\n    severity = 'log';\n  }\n  this.console[severity].apply(this.console, arr);\n};\n\n/**\n * Log a message to the console.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.log = function (source, msg, continuation) {\n  this.print('log', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with debug priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.debug = function (source, msg, continuation) {\n  this.print('debug', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with info priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.info = function (source, msg, continuation) {\n  this.print('info', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with warn priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.warn = function (source, msg, continuation) {\n  this.print('warn', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with error priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.error = function (source, msg, continuation) {\n  this.print('error', source, msg);\n  continuation();\n};\n\n/** REGISTER PROVIDER **/\nexports.provider = Logger_console;\nexports.name = 'core.console';\nexports.flags = {config: true};\n\n}).call(this,require('_process'))","/*globals console */\n/*jslint indent:2,white:true,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A minimal provider implementing the core.echo interface for interaction with\n * custom channels.  Primarily used for testing the robustness of the custom\n * channel implementation.\n * @Class Echo_unprivileged\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Echo_unprivileged = function(cap, dispatchEvent) {\n  this.mod = cap.module;\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n\n  // The Core object for managing channels.\n  this.mod.once('core', function(Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.mod.emit(this.mod.controlChannel, {\n    type: 'core request delegated to echo',\n    request: 'core'\n  });\n};\n\n/**\n * Setup the provider to echo on a specific proxy. Subsequent messages\n * From the custom channel bound here will be re-emitted as a message\n * from the provider.  Subsequent messages to the provider will be\n * emitted on the bound channel.\n * @param {Object} proxy The identifier for the custom channel to bind.\n * @param {Function} continuation Function to call when setup is complete.\n * @method setup\n */\nEcho_unprivileged.prototype.setup = function(proxy, continuation) {\n  continuation();\n  if (!this.core) {\n    this.dispatchEvent('message', 'no core available to setup proxy with at echo');\n    return;\n  }\n\n  this.core.bindChannel(proxy, function(chan) {\n    if (this.chan) {\n      this.chan.close();\n    }\n    this.chan = chan;\n    this.chan.onClose(function() {\n      delete this.chan;\n    }.bind(this));\n    this.dispatchEvent('message', 'channel bound to echo');\n    this.chan.on('message', function(m) {\n      this.dispatchEvent('message', 'from custom channel: ' + m);\n    }.bind(this));\n  }.bind(this));\n};\n\n/**\n * Send a message to the bound custom channel.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\nEcho_unprivileged.prototype.send = function(str, continuation) {\n  continuation();\n  if (this.chan) {\n    this.chan.emit('message', str);\n  } else {\n    this.dispatchEvent('message', 'no channel available');\n  }\n};\n\nexports.provider = Echo_unprivileged;\nexports.name = \"core.echo\";\nexports.flags = {module: true};\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true,node:true */\n\n/**\n * An oAuth meta-provider allowing multiple platform-dependant\n * oAuth implementations to serve as the redirectURL for an oAuth flow.\n * The core implementations are provided in providers/oauth, and are\n * supplemented in platform-dependent repositories.\n *\n */\nvar OAuth = function (handlers, cap, dispatchEvent) {\n  this.handlers = handlers;\n  this.dispatchEvent = dispatchEvent;\n  this.ongoing = {};\n};\n\n/**\n * Register oAuth handlers.\n * This method should be called before provider is used, and binds the current\n * oAuth provider to be associated with registered handlers. This is used so\n * that handlers which are registered by the user apply only the the freedom()\n * setup call they are associated with, while still being registered across\n * multiple instances of OAuth providers.\n *\n * @method register\n * @param {[constructor]} handlers\n * @private\n */\nOAuth.register = function (handlers) {\n  var i,\n      boundHandlers = [];\n  if (!handlers || !handlers.length) {\n    return OAuth.reset();\n  }\n\n  for (i = 0; i < handlers.length; i += 1) {\n    boundHandlers.push(new handlers[i]());\n  }\n  exports.provider = OAuth.bind(this, boundHandlers);\n};\n\n/**\n * Reset the oAuth provider registrations.\n * @method reset\n * @private\n */\nOAuth.reset = function () {\n  exports.provider = OAuth.bind(this, []);\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n */\nOAuth.prototype.initiateOAuth = function (redirectURIs, continuation) {\n  var promise, i, successCallback;\n  successCallback = function(result) {\n    this.ongoing[result.state] = this.handlers[i];\n    continuation(result);\n  }.bind(this);\n\n  for (i = 0; i < this.handlers.length; i += 1) {\n    if (this.handlers[i].initiateOAuth(redirectURIs, successCallback)) {\n      return;\n    }\n  }\n  //If here, we have no compatible providers\n  continuation(null, {\n    'errcode': 'UNKNOWN',\n    'message': 'No requested redirects can be handled.'\n  });\n  return;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nOAuth.prototype.launchAuthFlow = function(authUrl, stateObj, continuation) {\n  if (!this.ongoing.hasOwnProperty(stateObj.state)) {\n    continuation(undefined, {\n      'errcode': 'UNKNOWN',\n      'message': 'You must begin the oAuth flow with initiateOAuth first'\n    });\n    return;\n  }\n\n  this.ongoing[stateObj.state].launchAuthFlow(authUrl, stateObj, continuation);\n  delete this.ongoing[stateObj.state];\n};\n\nexports.register = OAuth.register;\nexports.reset = OAuth.reset;\nexports.provider = OAuth.bind(this, []);\nexports.name = 'core.oauth';\n","/*globals console, RTCPeerConnection, webkitRTCPeerConnection */\n/*globals mozRTCPeerConnection, RTCSessionDescription, RTCIceCandidate */\n/*globals mozRTCSessionDescription, mozRTCIceCandidate */\n/*globals ArrayBuffer, Blob */\n/*jslint indent:2,sloppy:true,node:true */\n/**\n * DataPeer - a class that wraps peer connections and data channels.\n */\n// TODO: check that Handling of pranswer is treated appropriately.\nvar SimpleDataPeerState = {\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED'\n};\n\nfunction SimpleDataPeer(peerName, stunServers, dataChannelCallbacks, mocks) {\n  var constraints,\n    config,\n    i;\n  this.peerName = peerName;\n  this.channels = {};\n  this.dataChannelCallbacks = dataChannelCallbacks;\n  this.onConnectedQueue = [];\n\n  if (typeof mocks.RTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mocks.RTCPeerConnection;\n  } else if (typeof webkitRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = webkitRTCPeerConnection;\n  } else if (typeof mozRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mozRTCPeerConnection;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCPeerConnection\");\n  }\n\n  if (typeof mocks.RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mocks.RTCSessionDescription;\n  } else if (typeof RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = RTCSessionDescription;\n  } else if (typeof mozRTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mozRTCSessionDescription;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCSessionDescription\");\n  }\n\n  if (typeof mocks.RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mocks.RTCIceCandidate;\n  } else if (typeof RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = RTCIceCandidate;\n  } else if (typeof mozRTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mozRTCIceCandidate;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCIceCandidate\");\n  }\n\n\n  constraints = {\n    optional: [{DtlsSrtpKeyAgreement: true}]\n  };\n  // A way to speak to the peer to send SDP headers etc.\n  this.sendSignalMessage = null;\n\n  this.pc = null;  // The peer connection.\n  // Get TURN servers for the peer connection.\n  config = {iceServers: []};\n  for (i = 0; i < stunServers.length; i += 1) {\n    config.iceServers.push({\n      'url' : stunServers[i]\n    });\n  }\n  this.pc = new this.RTCPeerConnection(config, constraints);\n  // Add basic event handlers.\n  this.pc.addEventListener(\"icecandidate\",\n                            this.onIceCallback.bind(this));\n  this.pc.addEventListener(\"negotiationneeded\",\n                            this.onNegotiationNeeded.bind(this));\n  this.pc.addEventListener(\"datachannel\",\n                            this.onDataChannel.bind(this));\n  this.pc.addEventListener(\"signalingstatechange\", function () {\n    // TODO: come up with a better way to detect connection.  We start out\n    // as \"stable\" even before we are connected.\n    // TODO: this is not fired for connections closed by the other side.\n    // This will be fixed in m37, at that point we should dispatch an onClose\n    // event here for freedom.transport to pick up.\n    if (this.pc.signalingState === \"stable\") {\n      this.pcState = SimpleDataPeerState.CONNECTED;\n      this.onConnectedQueue.map(function (callback) { callback(); });\n    }\n  }.bind(this));\n  // This state variable is used to fake offer/answer when they are wrongly\n  // requested and we really just need to reuse what we already have.\n  this.pcState = SimpleDataPeerState.DISCONNECTED;\n\n  // Note: to actually do something with data channels opened by a peer, we\n  // need someone to manage \"datachannel\" event.\n}\n\nSimpleDataPeer.prototype.createOffer = function (constaints, continuation) {\n  this.pc.createOffer(continuation, function () {\n    console.error('core.peerconnection createOffer failed.');\n  }, constaints);\n};\n\nSimpleDataPeer.prototype.runWhenConnected = function (func) {\n  if (this.pcState === SimpleDataPeerState.CONNECTED) {\n    func();\n  } else {\n    this.onConnectedQueue.push(func);\n  }\n};\n\nSimpleDataPeer.prototype.send = function (channelId, message, continuation) {\n  this.channels[channelId].send(message);\n  continuation();\n};\n\nSimpleDataPeer.prototype.openDataChannel = function (channelId, continuation) {\n  var dataChannel = this.pc.createDataChannel(channelId, {});\n  dataChannel.onopen = function () {\n    this.addDataChannel(channelId, dataChannel);\n    continuation();\n  }.bind(this);\n  dataChannel.onerror = function (err) {\n    //@(ryscheng) todo - replace with errors that work across the interface\n    console.error(err);\n    continuation(undefined, err);\n  };\n  // Firefox does not fire \"negotiationneeded\", so we need to\n  // negotate here if we are not connected.\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n  if (typeof mozRTCPeerConnection !== \"undefined\" &&\n      this.pcState === SimpleDataPeerState.DISCONNECTED) {\n    this.negotiateConnection();\n  }\n};\n\nSimpleDataPeer.prototype.closeChannel = function (channelId) {\n  if (this.channels[channelId] !== undefined) {\n    this.channels[channelId].close();\n    delete this.channels[channelId];\n  }\n};\n\nSimpleDataPeer.prototype.getBufferedAmount = function (channelId,\n                                                       continuation) {\n  if (this.channels[channelId] !== undefined) {\n    var dataChannel = this.channels[channelId];\n    return dataChannel.bufferedAmount;\n  }\n  throw new Error(\"No channel with id: \" + channelId);\n};\n\nSimpleDataPeer.prototype.setSendSignalMessage = function (sendSignalMessageFn) {\n  this.sendSignalMessage = sendSignalMessageFn;\n};\n\n// Handle a message send on the signalling channel to this peer.\nSimpleDataPeer.prototype.handleSignalMessage = function (messageText) {\n  //console.log(this.peerName + \": \" + \"handleSignalMessage: \\n\" + messageText);\n  var json = JSON.parse(messageText),\n    ice_candidate;\n\n  // TODO: If we are offering and they are also offerring at the same time,\n  // pick the one who has the lower randomId?\n  // (this.pc.signalingState == \"have-local-offer\" && json.sdp &&\n  //    json.sdp.type == \"offer\" && json.sdp.randomId < this.localRandomId)\n  if (json.sdp) {\n    // Set the remote description.\n    this.pc.setRemoteDescription(\n      new this.RTCSessionDescription(json.sdp),\n      // Success\n      function () {\n        //console.log(this.peerName + \": setRemoteDescription succeeded\");\n        if (this.pc.remoteDescription.type === \"offer\") {\n          this.pc.createAnswer(this.onDescription.bind(this),\n                               console.error);\n        }\n      }.bind(this),\n      // Failure\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setRemoteDescription failed:\", e);\n      }.bind(this)\n    );\n  } else if (json.candidate) {\n    // Add remote ice candidate.\n    //console.log(this.peerName + \": Adding ice candidate: \" + JSON.stringify(json.candidate));\n    ice_candidate = new this.RTCIceCandidate(json.candidate);\n    this.pc.addIceCandidate(ice_candidate);\n  } else {\n    console.warn(this.peerName + \": \" +\n        \"handleSignalMessage got unexpected message: \", messageText);\n  }\n};\n\n// Connect to the peer by the signalling channel.\nSimpleDataPeer.prototype.negotiateConnection = function () {\n  this.pcState = SimpleDataPeerState.CONNECTING;\n  this.pc.createOffer(\n    this.onDescription.bind(this),\n    function (e) {\n      console.error(this.peerName + \": \" +\n          \"createOffer failed: \", e.toString());\n      this.pcState = SimpleDataPeerState.DISCONNECTED;\n    }.bind(this)\n  );\n};\n\nSimpleDataPeer.prototype.isClosed = function () {\n  return !this.pc || this.pc.signalingState === \"closed\";\n};\n\nSimpleDataPeer.prototype.close = function () {\n  if (!this.isClosed()) {\n    this.pc.close();\n  }\n  //console.log(this.peerName + \": \" + \"Closed peer connection.\");\n};\n\nSimpleDataPeer.prototype.addDataChannel = function (channelId, channel) {\n  var callbacks = this.dataChannelCallbacks;\n  this.channels[channelId] = channel;\n\n  if (channel.readyState === \"connecting\") {\n    channel.onopen = callbacks.onOpenFn.bind(this, channel, {label: channelId});\n  }\n\n  channel.onclose = callbacks.onCloseFn.bind(this, channel, {label: channelId});\n\n  channel.onmessage = callbacks.onMessageFn.bind(this, channel,\n                                                 {label: channelId});\n\n  channel.onerror = callbacks.onErrorFn.bind(this, channel, {label: channel});\n};\n\n// When we get our description, we set it to be our local description and\n// send it to the peer.\nSimpleDataPeer.prototype.onDescription = function (description) {\n  if (this.sendSignalMessage) {\n    this.pc.setLocalDescription(\n      description,\n      function () {\n        //console.log(this.peerName + \": setLocalDescription succeeded\");\n        this.sendSignalMessage(JSON.stringify({'sdp': description}));\n      }.bind(this),\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setLocalDescription failed:\", e);\n      }.bind(this)\n    );\n  } else {\n    console.error(this.peerName + \": \" +\n        \"_onDescription: _sendSignalMessage is not set, so we did not \" +\n            \"set the local description. \");\n  }\n};\n\nSimpleDataPeer.prototype.onNegotiationNeeded = function (e) {\n  //console.log(this.peerName + \": \" + \"onNegotiationNeeded\",\n  //            JSON.stringify(this._pc), e);\n  if (this.pcState !== SimpleDataPeerState.DISCONNECTED) {\n    // Negotiation messages are falsely requested for new data channels.\n    //   https://code.google.com/p/webrtc/issues/detail?id=2431\n    // This code is a hack to simply reset the same local and remote\n    // description which will trigger the appropriate data channel open event.\n    // TODO: fix/remove this when Chrome issue is fixed.\n    var logSuccess = function (op) {\n      return function () {\n        //console.log(this.peerName + \": \" + op + \" succeeded \");\n      }.bind(this);\n    }.bind(this),\n      logFail = function (op) {\n        return function (e) {\n          //console.log(this.peerName + \": \" + op + \" failed: \" + e);\n        }.bind(this);\n      }.bind(this);\n    if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"offer\") {\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n    } else if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"answer\") {\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n    } else {\n      console.error(this.peerName + ', onNegotiationNeeded failed');\n    }\n    return;\n  }\n  this.negotiateConnection();\n};\n\nSimpleDataPeer.prototype.onIceCallback = function (event) {\n  if (event.candidate) {\n    // Send IceCandidate to peer.\n    //console.log(this.peerName + \": \" + \"ice callback with candidate\", event);\n    if (this.sendSignalMessage) {\n      this.sendSignalMessage(JSON.stringify({'candidate': event.candidate}));\n    } else {\n      console.warn(this.peerName + \": \" + \"_onDescription: _sendSignalMessage is not set.\");\n    }\n  }\n};\n\nSimpleDataPeer.prototype.onSignalingStateChange = function () {\n  //console.log(this.peerName + \": \" + \"onSignalingStateChange: \", this._pc.signalingState);\n  if (this.pc.signalingState === \"stable\") {\n    this.pcState = SimpleDataPeerState.CONNECTED;\n    this.onConnectedQueue.map(function (callback) { callback(); });\n  }\n};\n\nSimpleDataPeer.prototype.onDataChannel = function (event) {\n  this.addDataChannel(event.channel.label, event.channel);\n  // RTCDataChannels created by a RTCDataChannelEvent have an initial\n  // state of open, so the onopen event for the channel will not\n  // fire. We need to fire the onOpenDataChannel event here\n  // http://www.w3.org/TR/webrtc/#idl-def-RTCDataChannelState\n\n  // Firefox channels do not have an initial state of \"open\"\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=1000478\n  if (event.channel.readyState === \"open\") {\n    this.dataChannelCallbacks.onOpenFn(event.channel,\n                                       {label: event.channel.label});\n  }\n};\n\n// _signallingChannel is a channel for emitting events back to the freedom Hub.\nfunction PeerConnection(portModule, dispatchEvent,\n                        RTCPeerConnection, RTCSessionDescription,\n                        RTCIceCandidate) {\n  // Channel for emitting events to consumer.\n  this.dispatchEvent = dispatchEvent;\n\n  // a (hopefully unique) ID for debugging.\n  this.peerName = \"p\" + Math.random();\n\n  // This is the portApp (defined in freedom/src/port-app.js). A way to speak\n  // to freedom.\n  this.freedomModule = portModule.module;\n\n  // For tests we may mock out the PeerConnection and\n  // SessionDescription implementations\n  this.RTCPeerConnection = RTCPeerConnection;\n  this.RTCSessionDescription = RTCSessionDescription;\n  this.RTCIceCandidate = RTCIceCandidate;\n\n  // This is the a channel to send signalling messages.\n  this.signallingChannel = null;\n\n  // The DataPeer object for talking to the peer.\n  this.peer = null;\n\n  // The Core object for managing channels.\n  this.freedomModule.once('core', function (Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.freedomModule.emit(this.freedomModule.controlChannel, {\n    type: 'core request delegated to peerconnection',\n    request: 'core'\n  });\n}\n\n// Start a peer connection using the given freedomChannelId as the way to\n// communicate with the peer. The argument |freedomChannelId| is a way to speak\n// to an identity provide to send them SDP headers negotiate the address/port to\n// setup the peer to peerConnection.\n//\n// options: {\n//   peerName: string,   // For pretty printing messages about this peer.\n//   debug: boolean           // should we add extra\n// }\nPeerConnection.prototype.setup = function (signallingChannelId, peerName,\n                                           stunServers, initiateConnection,\n                                           continuation) {\n  this.peerName = peerName;\n  var mocks = {RTCPeerConnection: this.RTCPeerConnection,\n               RTCSessionDescription: this.RTCSessionDescription,\n               RTCIceCandidate: this.RTCIceCandidate},\n    self = this,\n    dataChannelCallbacks = {\n      // onOpenFn is called at the point messages will actually get through.\n      onOpenFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onOpenDataChannel\",\n                         { channelId: info.label});\n      },\n      onCloseFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onCloseDataChannel\",\n                         { channelId: info.label});\n      },\n      // Default on real message prints it to console.\n      onMessageFn: function (dataChannel, info, event) {\n        if (event.data instanceof ArrayBuffer) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'buffer': event.data\n          });\n        } else if (event.data instanceof Blob) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'binary': event.data\n          });\n        } else if (typeof (event.data) === 'string') {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'text': event.data\n          });\n        }\n      },\n      // Default on error, prints it.\n      onErrorFn: function (dataChannel, info, err) {\n        console.error(dataChannel.peerName + \": dataChannel(\" +\n                      dataChannel.dataChannel.label + \"): error: \", err);\n      }\n    },\n    channelId,\n    openDataChannelContinuation;\n\n  this.peer = new SimpleDataPeer(this.peerName, stunServers,\n                                 dataChannelCallbacks, mocks);\n\n  // Setup link between Freedom messaging and _peer's signalling.\n  // Note: the signalling channel should only be sending receiveing strings.\n  this.core.bindChannel(signallingChannelId, function (channel) {\n    this.signallingChannel = channel;\n    this.peer.setSendSignalMessage(function (msg) {\n      this.signallingChannel.emit('message', msg);\n    }.bind(this));\n    this.signallingChannel.on('message',\n        this.peer.handleSignalMessage.bind(this.peer));\n    this.signallingChannel.emit('ready');\n    if (!initiateConnection) {\n      this.peer.runWhenConnected(continuation);\n    }\n  }.bind(this));\n\n  if (initiateConnection) {\n    // Setup a connection right away, then invoke continuation.\n    console.log(this.peerName + ' initiating connection');\n    channelId = 'hello' + Math.random().toString();\n    openDataChannelContinuation = function (success, error) {\n      if (error) {\n        continuation(undefined, error);\n      } else {\n        this.closeDataChannel(channelId, continuation);\n      }\n    }.bind(this);\n    this.openDataChannel(channelId, openDataChannelContinuation);\n  }\n};\n\nPeerConnection.prototype.createOffer = function (constraints, continuation) {\n  this.peer.createOffer(constraints, continuation);\n};\n\n// TODO: delay continuation until the open callback from _peer is called.\nPeerConnection.prototype.openDataChannel = function (channelId, continuation) {\n  this.peer.openDataChannel(channelId, continuation);\n};\n\nPeerConnection.prototype.closeDataChannel = function (channelId, continuation) {\n  this.peer.closeChannel(channelId);\n  continuation();\n};\n\n// Called to send a message over the given datachannel to a peer. If the data\n// channel doesn't already exist, the DataPeer creates it.\nPeerConnection.prototype.send = function (sendInfo, continuation) {\n  var objToSend = sendInfo.text || sendInfo.buffer || sendInfo.binary;\n  if (typeof objToSend === 'undefined') {\n    console.error(\"No valid data to send has been provided.\", sendInfo);\n    return;\n  }\n  //DEBUG\n  // objToSend = new ArrayBuffer(4);\n  //DEBUG\n  this.peer.send(sendInfo.channelLabel, objToSend, continuation);\n};\n\nPeerConnection.prototype.getBufferedAmount = function (channelId, continuation) {\n  continuation(this.peer.getBufferedAmount(channelId));\n};\n\nPeerConnection.prototype.close = function (continuation) {\n  if (this.peer.isClosed()) {\n    // Peer already closed, run continuation without dispatching event.\n    continuation();\n    return;\n  }\n  this.peer.close();\n  this.dispatchEvent(\"onClose\");\n  continuation();\n};\n\nexports.provider = PeerConnection;\nexports.name = 'core.peerconnection';\nexports.flags = {module: true};\n","/*jslint indent:2,sloppy:true, node:true */\n\nvar util = require('../../src/util');\n\nvar unAttachedChannels = {};\nvar allocateChannel = function (dataChannel) {\n  var id = util.getId();\n  unAttachedChannels[id] = dataChannel;\n  return id;\n};\n\nvar RTCDataChannelAdapter = function (cap, dispatchEvents, id) {\n  this.dispatchEvent = dispatchEvents;\n  if (!unAttachedChannels[id]) {\n    console.warn('Invalid ID, creating acting on unattached DataChannel');\n    var Connection = require('./core.rtcpeerconnection').provider,\n      provider = new Connection();\n    id = provider.createDataChannel();\n    provider.close();\n  }\n\n  this.channel = unAttachedChannels[id];\n  delete unAttachedChannels[id];\n\n  this.events = [\n    'onopen',\n    'onerror',\n    'onclose',\n    'onmessage'\n  ];\n  this.manageEvents(true);\n};\n\n// Attach or detach listeners for events against the connection.\nRTCDataChannelAdapter.prototype.manageEvents = function (attach) {\n  this.events.forEach(function (event) {\n    if (attach) {\n      this[event] = this[event].bind(this);\n      this.channel[event] = this[event];\n    } else {\n      delete this.channel[event];\n    }\n  }.bind(this));\n};\n\nRTCDataChannelAdapter.prototype.getLabel = function (callback) {\n  callback(this.channel.label);\n};\n\nRTCDataChannelAdapter.prototype.getOrdered = function (callback) {\n  callback(this.channel.ordered);\n};\n\nRTCDataChannelAdapter.prototype.getMaxPacketLifeTime = function (callback) {\n  callback(this.channel.maxPacketLifeTime);\n};\n\nRTCDataChannelAdapter.prototype.getMaxRetransmits = function (callback) {\n  callback(this.channel.maxRetransmits);\n};\n\nRTCDataChannelAdapter.prototype.getProtocol = function (callback) {\n  callback(this.channel.protocol);\n};\n\nRTCDataChannelAdapter.prototype.getNegotiated = function (callback) {\n  callback(this.channel.negotiated);\n};\n\nRTCDataChannelAdapter.prototype.getId = function (callback) {\n  callback(this.channel.id);\n};\n\nRTCDataChannelAdapter.prototype.getReadyState = function (callback) {\n  callback(this.channel.readyState);\n};\n\nRTCDataChannelAdapter.prototype.getBufferedAmount = function (callback) {\n  callback(this.channel.bufferedAmount);\n};\n\nRTCDataChannelAdapter.prototype.getBinaryType = function (callback) {\n  callback(this.channel.binaryType);\n};\nRTCDataChannelAdapter.prototype.setBinaryType = function (binaryType, callback) {\n  this.channel.binaryType = binaryType;\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.send = function (text, callback) {\n  this.channel.send(text);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.sendBuffer = function (buffer, callback) {\n  this.channel.send(buffer);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.close = function (callback) {\n  if (!this.channel) {\n    return callback();\n  }\n  this.manageEvents(false);\n  this.channel.close();\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.onopen = function (event) {\n  this.dispatchEvent('onopen', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onerror = function (event) {\n  this.dispatchEvent('onerror', {\n    errcode: event.type,\n    message: event.message\n  });\n};\n\nRTCDataChannelAdapter.prototype.onclose = function (event) {\n  this.dispatchEvent('onclose', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onmessage = function (event) {\n  if (typeof event.data === 'string') {\n    this.dispatchEvent('onmessage', {text: event.data});\n  } else {\n    this.dispatchEvent('onmessage', {buffer: event.data});\n  }\n};\n\nexports.name = \"core.rtcdatachannel\";\nexports.provider = RTCDataChannelAdapter;\nexports.allocate = allocateChannel;\n","/*jslint indent:2,sloppy:true, node:true */\n\nvar adapter = require('webrtc-adapter');\nvar PromiseCompat = require('es6-promise').Promise;\nvar RTCPeerConnection = adapter.RTCPeerConnection;\nvar RTCSessionDescription = adapter.RTCSessionDescription;\nvar RTCIceCandidate = adapter.RTCIceCandidate;\n\nvar DataChannel = require('./core.rtcdatachannel');\n\nvar RTCPeerConnectionAdapter = function (cap, dispatchEvent, configuration) {\n  this.dispatchEvent = dispatchEvent;\n  try {\n    this.connection = new RTCPeerConnection(configuration);\n  } catch (e) {\n    // Note: You can't ask the provider to close you synchronously, since\n    // the constructor has not yet returned, so there's no 'this' that\n    // the provider can know about yet.\n    setTimeout(cap.provider.close.bind(cap.provider, this), 0);\n    return;\n  }\n\n  this.events = [\n    'ondatachannel',\n    'onnegotiationneeded',\n    'onicecandidate',\n    'onsignalingstatechange',\n    'onaddstream',\n    'onremovestream',\n    'oniceconnectionstatechange'\n  ];\n  this.manageEvents(true);\n};\n\n// Attach or detach listeners for events against the connection.\nRTCPeerConnectionAdapter.prototype.manageEvents = function (attach) {\n  this.events.forEach(function (event) {\n    if (attach) {\n      this[event] = this[event].bind(this);\n      this.connection[event] = this[event];\n    } else if (this.connection) {\n      delete this.connection[event];\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createOffer = function (constraints) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createOffer(resolve, reject, constraints);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createAnswer = function () {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createAnswer(resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.setLocalDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setLocalDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalDescription = function () {\n  return PromiseCompat.resolve(this.connection.localDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.setRemoteDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setRemoteDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteDescription = function () {\n  return PromiseCompat.resolve(this.connection.remoteDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.getSignalingState = function () {\n  return PromiseCompat.resolve(this.connection.signalingState);\n};\n\nRTCPeerConnectionAdapter.prototype.updateIce = function (configuration) {\n  this.connection.updateIce(configuration);\n  return PromiseCompat.resolve();\n};\n\nRTCPeerConnectionAdapter.prototype.addIceCandidate = function (candidate) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.addIceCandidate(new RTCIceCandidate(candidate),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getIceGatheringState = function () {\n  return PromiseCompat.resolve(this.connection.iceGatheringState);\n};\n\nRTCPeerConnectionAdapter.prototype.getIceConnectionState = function () {\n  return PromiseCompat.resolve(this.connection.iceConnectionState);\n};\n\nRTCPeerConnectionAdapter.prototype.getConfiguration = function () {\n  var configuration = this.connection.getConfiguration();\n  return PromiseCompat.resolve(configuration);\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getStreamById = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.addStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.removeStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.close = function () {\n  if (!this.connection) {\n    return PromiseCompat.resolve();\n  }\n  this.manageEvents(false);\n  try {\n    this.connection.close();\n    return PromiseCompat.resolve();\n  } catch (e) {\n    return PromiseCompat.reject({\n      errcode: e.name,\n      message: e.message\n    });\n  }\n};\n\nRTCPeerConnectionAdapter.prototype.createDataChannel = function (label, dataChannelDict) {\n  var id = DataChannel.allocate(this.connection.createDataChannel(label, dataChannelDict));\n  return PromiseCompat.resolve(id);\n};\n\nRTCPeerConnectionAdapter.prototype.getStats = function (selector) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.getStats(selector, resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.ondatachannel = function (event) {\n  var id = DataChannel.allocate(event.channel);\n  this.dispatchEvent('ondatachannel', {channel: id});\n};\n\nRTCPeerConnectionAdapter.prototype.onnegotiationneeded = function (event) {\n  this.dispatchEvent('onnegotiationneeded', event.message);\n};\n\nRTCPeerConnectionAdapter.prototype.onicecandidate = function (event) {\n  var msg;\n  if (event.candidate && event.candidate.candidate) {\n    msg = {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex\n      }\n    };\n  } else {\n    msg = {\n      candidate: null\n    };\n  }\n  this.dispatchEvent('onicecandidate', msg);\n};\n  \nRTCPeerConnectionAdapter.prototype.onsignalingstatechange = function (event) {\n  this.dispatchEvent('onsignalingstatechange', event.message);\n};\n  \nRTCPeerConnectionAdapter.prototype.onaddstream = function (event) {\n  //TODO: provide ID of allocated stream.\n  this.dispatchEvent('onaddstream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.onremovestream = function (event) {\n  //TODO: provide ID of deallocated stream.\n  this.dispatchEvent('onremovestream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.oniceconnectionstatechange = function (event) {\n  this.dispatchEvent('oniceconnectionstatechange', event.message);\n};\n\n\nexports.name = \"core.rtcpeerconnection\";\nexports.provider = RTCPeerConnectionAdapter;\nexports.style = \"providePromises\";\nexports.flags = {provider: true};\n","/*globals localStorage */\n/*jslint indent:2,sloppy:true,node:true */\nvar util = require('../../src/util');\n\n/**\n * A FreeDOM core.storage provider that depends on localStorage\n * Thus, this only works in the context of a webpage and has\n * some size limitations.\n * Note that this can conflict with other scripts using localStorage\n * as keys are raw\n * @Class Storage_unprivileged\n * @constructor\n * @private\n * @param {Object} cap Capabilities for the provider\n */\nvar Storage_unprivileged = function (cap, dispatchEvent) {\n  util.handleEvents(this);\n};\n\n/**\n * Lists keys in the storage repository\n * @method keys\n */\nStorage_unprivileged.prototype.keys = function (continuation) {\n  var result = [],\n    i;\n  for (i = 0; i < localStorage.length; i += 1) {\n    result.push(localStorage.key(i));\n  }\n  continuation(result);\n};\n\n/**\n * Get a key from the storage repository.\n * @param {String} key The item to get from storage.\n * @method get\n */\nStorage_unprivileged.prototype.get = function (key, continuation) {\n  try {\n    var val = localStorage.getItem(key);\n    continuation(val);\n  } catch (e) {\n    continuation(null);\n  }\n};\n\n/**\n * Set a key in the storage repository.\n * @param {String} key The item to save in storage.\n * @param {String} value The value to save in storage.\n * @method set\n */\nStorage_unprivileged.prototype.set = function (key, value, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.setItem(key, value);\n  continuation(ret);\n};\n\n/**\n * Remove a key from the storage repository.\n * @param {String} key The item to remove from storage;\n * @method remove\n */\nStorage_unprivileged.prototype.remove = function (key, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.removeItem(key);\n  continuation(ret);\n};\n\n/**\n * Reset the contents of the storage repository.\n * @method clear\n */\nStorage_unprivileged.prototype.clear = function (continuation) {\n  localStorage.clear();\n  continuation();\n};\n\nexports.provider = Storage_unprivileged;\nexports.name = 'core.storage';\n","/*jslint indent:2,white:true,sloppy:true,node:true */\nvar EventInterface = require('../../src/proxy/eventInterface');\nvar Consumer = require('../../src/consumer');\nvar util = require('../../src/util');\n\n/**\n * Core freedom services available to all modules.\n * Created by the environment helper in response to a 'core' request.\n * @Class Core_unprivileged\n * @constructor\n * @param {Manager} manager The manager this core is connected with.\n * @private\n */\nvar Core_unprivileged = function(manager, postMessage) {\n  this.manager = manager.module;\n  this.debug = this.manager.debug;\n};\n\nCore_unprivileged.unboundChannels = {};\n\nCore_unprivileged.contextId = undefined;\n\n/**\n * Create a custom channel.\n * Returns the structure {channel: Proxy, identifier: Object},\n * where the identifier can be 'redeemed' by another module or provider using\n * bind channel, at which point the deferred object will resolve with a channel\n * between the two endpoints.\n * @method createChannel\n * @params {Function} continuation Method to call with the cosntructed structure.\n */\nCore_unprivileged.prototype.createChannel = function(continuation) {\n  var proxy = new Consumer(EventInterface, this.manager.debug),\n      id = util.getId(),\n      chan = this.getChannel(proxy);\n  this.manager.setup(proxy);\n\n  if (this.manager.delegate && this.manager.toDelegate.core) {\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'register',\n        id: id\n      }\n    });\n  }\n  Core_unprivileged.unboundChannels[id] = {\n    local: true,\n    proxy: proxy\n  };\n\n  proxy.once('start', this.getChannel.bind(this, proxy));\n\n  continuation({\n    channel: chan,\n    identifier: id\n  });\n};\n\nCore_unprivileged.prototype.getChannel = function(proxy) {\n  var iface = proxy.getProxyInterface(),\n      chan = iface();\n  chan.close = iface.close;\n  chan.onClose = iface.onClose;\n  iface.onClose(chan, function() {\n    proxy.doClose();\n  });\n  return chan;\n};\n\n/**\n * Receive a message from another core instance.\n * Note: Core_unprivileged is not registered on the hub. it is a provider,\n *     as it's location and name would indicate. This function is called by\n *     port-app to relay messages up to higher levels.  More generally, the\n *     messages emitted by the core to 'this.manager.emit(this.mananage.delegate'\n *     Should be onMessaged to the controlling core.\n * @param {String} source The source of the message.\n * @param {Object} msg The messsage from an isolated core provider.\n */\nCore_unprivileged.prototype.onMessage = function(source, msg) {\n  if (msg.type === 'register') {\n    Core_unprivileged.unboundChannels[msg.id] = {\n      remote: true,\n      resolve: msg.reply,\n      source: source\n    };\n  } else if (msg.type === 'clear') {\n    delete Core_unprivileged.unboundChannels[msg.id];\n  } else if (msg.type === 'bind') {\n    if (Core_unprivileged.unboundChannels[msg.id]) {\n      this.bindChannel(msg.id, function() {}, source);\n    }\n  }\n};\n\n/**\n * Bind a custom channel.\n * Creates a proxy interface to the custom channel, which will be bound to\n * the proxy obtained through an earlier createChannel call.\n * channel to a proxy.\n * @method bindChannel\n * @param {Object} identifier An identifier obtained through createChannel.\n * @param {Function} continuation A function to be called with the proxy.\n */\nCore_unprivileged.prototype.bindChannel = function(identifier, continuation, source) {\n  var toBind = Core_unprivileged.unboundChannels[identifier],\n      newSource = !source;\n\n  // when bindChannel is called directly, source will be undefined.\n  // When it is propogated by onMessage, a source for binding will already exist.\n  if (newSource) {\n    this.debug.debug('making local proxy for core binding');\n    source = new Consumer(EventInterface, this.debug);\n    this.manager.setup(source);\n  }\n\n  // If this is a known identifier and is in the same context, binding is easy.\n  if (toBind && toBind.local) {\n    this.debug.debug('Binding a channel to port on this hub:' + source);\n    this.manager.createLink(source, identifier, toBind.proxy, 'default');\n    delete Core_unprivileged.unboundChannels[identifier];\n    if (this.manager.delegate && this.manager.toDelegate.core) {\n      this.manager.emit(this.manager.delegate, {\n        type: 'Delegation',\n        request: 'handle',\n        flow: 'core',\n        message: {\n          type: 'clear',\n          id: identifier\n        }\n      });\n    }\n  } else if (toBind && toBind.remote) {\n    this.debug.debug('Binding a channel into a module.');\n    this.manager.createLink(\n        source,\n        newSource ? 'default' : identifier,\n        toBind.source,\n        identifier);\n    toBind.resolve({\n      type: 'Bind Channel',\n      request:'core',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    delete Core_unprivileged.unboundChannels[identifier];\n  } else if (this.manager.delegate && this.manager.toDelegate.core) {\n    this.debug.info('delegating channel bind for an unknown ID:' + identifier);\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    source.once('start', function(p, cb) {\n      cb(this.getChannel(p));\n    }.bind(this, source, continuation));\n    this.manager.createLink(source,\n        'default',\n        this.manager.hub.getDestination(this.manager.delegate),\n        identifier);\n    delete Core_unprivileged.unboundChannels[identifier];\n    return;\n  } else {\n    this.debug.warn('Asked to bind unknown channel: ' + identifier);\n    this.debug.log(Core_unprivileged.unboundChannels);\n    continuation();\n    return;\n  }\n\n  if (source.getInterface) {\n    continuation(this.getChannel(source));\n  } else {\n    continuation();\n  }\n};\n\n/**\n * Get the ID of the current freedom.js context.  Provides an\n * array of module URLs, the lineage of the current context.\n * When not in an application context, the ID is the lineage\n * of the current View.\n * @method getId\n * @param {Function} callback The function called with ID information.\n */\nCore_unprivileged.prototype.getId = function(callback) {\n  // TODO: make sure contextID is properly frozen.\n  callback(Core_unprivileged.contextId);\n};\n\n/**\n * Get a logger for logging to the freedom.js logger. Provides a\n * log object with an interface similar to the standard javascript console,\n * which logs via debug.\n * @method getLogger\n * @param {String} name The name of the logger, used as its 'source'\n * @param {Function} callback The function to call with the logger.\n */\nCore_unprivileged.prototype.getLogger = function(name, callback) {\n  callback(this.manager.debug.getLogger(name));\n};\n\n/**\n * Set the ID of the current freedom.js context.\n * @method setId\n * @private\n * @param {String[]} id The lineage of the current context.\n */\nCore_unprivileged.prototype.setId = function(id) {\n  Core_unprivileged.contextId = id;\n};\n\nexports.provider = Core_unprivileged;\nexports.name = \"core\";\nexports.flags = {module: true};\n","/*globals document */\r\n/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('../../src/util');\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\n/**\r\n * A freedom.js view is the interface for user interaction.\r\n * A view exists as an iFrame, which is shown to the user in some way.\r\n * communication between the view and the freedom.js module is performed\r\n * through the HTML5 postMessage mechanism, which this provider translates\r\n * to freedom.js message events.\r\n * @Class View_unprivileged\r\n * @constructor\r\n * @private\r\n * @param {View Provider} provider\r\n * @param {provider:Provider,module:Module} cap The instantiator of the view.\r\n * @param {Function} dispatchEvent Function to call to emit events.\r\n */\r\nvar Core_View = function (provider, cap, dispatchEvent) {\r\n  this.provider = provider;\r\n  this.dispatchEvent = dispatchEvent;\r\n  setTimeout(cap.provider.onClose.bind(\r\n    cap.provider,\r\n    this,\r\n    this.close.bind(this, function () {})\r\n  ), 0);\r\n  this.module = cap.module;\r\n  util.handleEvents(this);\r\n};\r\n\r\n/**\r\n * The is the default provider for core.view, unless overridden by context or\r\n * a user supplied provider. The interface is documented at:\r\n * https://github.com/freedomjs/freedom/wiki/freedom.js-Views\r\n *\r\n * Generally, a view provider consists of 3 methods:\r\n * onOpen is called when a view should be shown.\r\n *     id - is a unique identifier for this view, used on subsequent calls\r\n *          for communication and to eventually close the view.\r\n *     name - is the name of the view (as defined in the manifest),\r\n *            in order to place it appropriately.\r\n *     page - is the resolved URL to open.\r\n *     resources - is an array of resolved URLs which are referenced.\r\n *     postMessage - is a function to call when messages are emitted\r\n *                   by the window in which the view is opened.\r\n * onOpen returns a promise that completes when the view is loaded.\r\n * onMessage is called to send a message to an open view.\r\n *     id - is the unique identifier for the open view.\r\n *     message - is the message to postMessage to the view's window.\r\n * onClose is called to close a view.\r\n *     id - is the unique identifier for the view.\r\n */\r\nCore_View.provider = {\r\n  listener: undefined,\r\n  active: {},\r\n  onOpen: function (id, name, page, resources, postMessage) {\r\n    var container = document.body,\r\n      root,\r\n      frame;\r\n    \r\n    if (!this.listener) {\r\n      this.listener = function (msg) {\r\n        var i;\r\n        for (i in this.active) {\r\n          if (this.active.hasOwnProperty(i) &&\r\n              this.active[i].source === msg.source) {\r\n            this.active[i].postMessage(msg.data);\r\n          }\r\n        }\r\n      }.bind(this);\r\n      window.addEventListener('message', this.listener, true);\r\n    }\r\n\r\n    // Views open by default in an element with their ID, or fill the page\r\n    // otherwise.\r\n    if (document.getElementById(name)) {\r\n      container = document.getElementById(name);\r\n    }\r\n\r\n    root = document.createElement(\"div\");\r\n    root.style.width = \"100%\";\r\n    root.style.height = \"100%\";\r\n    root.style.display = \"relative\";\r\n\r\n    container.appendChild(root);\r\n    \r\n    return new PromiseCompat(function (resolve, reject) {\r\n      frame = document.createElement(\"iframe\");\r\n      frame.setAttribute(\"sandbox\", \"allow-scripts allow-forms\");\r\n      frame.style.width = \"100%\";\r\n      frame.style.height = \"100%\";\r\n      frame.style.border = \"0\";\r\n      frame.style.background = \"transparent\";\r\n      frame.src = page;\r\n      frame.addEventListener('load', resolve, true);\r\n      frame.addEventListener('error', reject, true);\r\n\r\n      root.appendChild(frame);\r\n\r\n      this.active[id] = {\r\n        postMessage: postMessage,\r\n        container: container,\r\n        root: root,\r\n        source: frame.contentWindow\r\n      };\r\n    }.bind(this));\r\n  },\r\n  onMessage: function (id, message) {\r\n    this.active[id].source.postMessage(message, '*');\r\n  },\r\n  onClose: function (id) {\r\n    this.active[id].container.removeChild(this.active[id].root);\r\n    delete this.active[id];\r\n    \r\n    if (Object.keys(this.active).length === 0) {\r\n      window.removeEventListener('message', this.listener, true);\r\n      this.listener = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Ask for this view to open a specific location, either a File relative to\r\n * the loader, or an explicit code location.\r\n * @method show\r\n * @param {String} name The identifier of the view.\r\n * @param {Function} continuation Function to call when view is loaded.\r\n */\r\nCore_View.prototype.show = function (name, continuation) {\r\n  if (this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'ALREADY_OPEN',\r\n      message: 'Cannot show multiple views through one instance.'\r\n    });\r\n  }\r\n  this.id = util.getId();\r\n\r\n  var config = this.module.manifest.views,\r\n    toResolve = [];\r\n  if (!config || !config[name]) {\r\n    return continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n\r\n  if (config[name].main && config[name].files) {\r\n    toResolve = config[name].files.concat(config[name].main);\r\n    PromiseCompat.all(toResolve.map(function (fname) {\r\n      return this.module.resource.get(this.module.manifestId, fname);\r\n    }.bind(this))).then(function (files) {\r\n      this.provider.onOpen(this.id,\r\n          name,\r\n          files[files.length - 1],\r\n          files,\r\n          this.dispatchEvent.bind(this, 'message')).then(\r\n        function (c) {\r\n          // Make sure continuation is called without an argument.\r\n          c();\r\n        }.bind({}, continuation),\r\n        continuation.bind({}, undefined)\r\n      );\r\n    }.bind(this), function (err) {\r\n      this.module.debug.error('Unable to open view ' + name + ': ', err);\r\n      continuation(undefined, {\r\n        errcode: 'VIEW_MALFORMED',\r\n        message: 'Malformed View Declaration: ' + err\r\n      });\r\n    });\r\n  } else {\r\n    continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * isSecure determines whether the module can have confidence that its\r\n * communication with its view cannot be intercepted by an untrusted 3rd party.\r\n * In practice, this means that its okay for the runtime to have access to the\r\n * messages, and if the context is a web server or a browser extension then\r\n * that context is trusted. However, if a provider wants to allow their e.g.\r\n * social provider to be used on arbitrary websites, this mechanism means that\r\n * if the website uses a trusted version of the freedom.js library, then the\r\n * module can be used.\r\n * @method isSecure\r\n * @returns {Boolean} if the channel to the view is secure.\r\n */\r\nCore_View.prototype.isSecure = function (continuation) {\r\n  continuation(false);\r\n};\r\n\r\n/**\r\n * Send a message to an open view.\r\n * @method postMessage\r\n */\r\nCore_View.prototype.postMessage = function (msg, continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot post message to uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onMessage(this.id, msg);\r\n  continuation();\r\n};\r\n\r\n/**\r\n * Close an active view.\r\n * @method close\r\n */\r\nCore_View.prototype.close = function (continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot close uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onClose(this.id);\r\n  delete this.id;\r\n\r\n  continuation();\r\n};\r\n\r\n\r\n/**\r\n * Allow a web page to redefine behavior for how views are shown.\r\n * @method register\r\n * @static\r\n * @param {Function} PageProvider The custom view behavior.\r\n */\r\nCore_View.register = function (PageProvider) {\r\n  var provider = PageProvider ? new PageProvider() : Core_View.provider;\r\n  exports.provider = Core_View.bind(this, provider);\r\n};\r\n\r\nexports.provider = Core_View.bind(this, Core_View.provider);\r\nexports.name = 'core.view';\r\nexports.register = Core_View.register;\r\nexports.flags = {provider: true, module: true};\r\n","/*globals WebSocket, ArrayBuffer, Blob, Uint8Array, console */\n/*jslint sloppy:true, node:true */\n\nvar WSHandle = null;\nvar nodeStyle = false;\n\n/**\n * A WebSocket core provider\n *\n * @param {Object} cap Capabilities for the provider\n * @param {Function} dispatchEvent Function to dispatch events.\n * @param {String} url The Remote URL to connect with.\n * @param {String[]} protocols SubProtocols to open.\n * @param {WebSocket?} socket An alternative socket class to use.\n */\nvar WS = function (cap, dispatchEvent, url, protocols, socket) {\n  var WSImplementation = null,\n    error;\n  this.isNode = nodeStyle;\n  if (typeof socket !== 'undefined') {\n    WSImplementation = socket;\n  } else if (WSHandle !== null) {\n    WSImplementation = WSHandle;\n  } else if (typeof WebSocket !== 'undefined') {\n    WSImplementation = WebSocket;\n  } else {\n    console.error('Platform does not support WebSocket');\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    if (protocols) {\n      this.websocket = new WSImplementation(url, protocols);\n    } else {\n      this.websocket = new WSImplementation(url);\n    }\n    this.websocket.binaryType = 'arraybuffer';\n  } catch (e) {\n    error = {};\n    if (e instanceof SyntaxError) {\n      error.errcode = 'SYNTAX';\n    } else {\n      error.errcode = e.name;\n    }\n    error.message = e.message;\n    dispatchEvent('onError', error);\n    return;\n  }\n\n  if (this.isNode) {\n    this.websocket.on('message', this.onMessage.bind(this));\n    this.websocket.on('open', this.onOpen.bind(this));\n    // node.js websocket implementation not compliant\n    this.websocket.on('close', this.onClose.bind(this, {\n      code: 0,\n      reason: 'UNKNOWN',\n      wasClean: true\n    }));\n    this.websocket.on('error', this.onError.bind(this));\n  } else {\n    this.websocket.onopen = this.onOpen.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n};\n\nWS.prototype.send = function (data, continuation) {\n  var toSend = data.text || data.binary || data.buffer,\n    errcode,\n    message;\n\n  if (toSend) {\n    try {\n      // For node.js, we have to do weird buffer stuff\n      if (this.isNode && toSend instanceof ArrayBuffer) {\n        this.websocket.send(\n          new Uint8Array(toSend),\n          { binary: true },\n          this.onError.bind(this)\n        );\n      } else {\n        this.websocket.send(toSend);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        errcode = \"SYNTAX\";\n      } else {\n        errcode = \"INVALID_STATE\";\n      }\n      message = e.message;\n    }\n  } else {\n    errcode = \"BAD_SEND\";\n    message = \"No text, binary, or buffer data found.\";\n  }\n\n  if (errcode) {\n    continuation(undefined, {\n      errcode: errcode,\n      message: message\n    });\n  } else {\n    continuation();\n  }\n};\n\nWS.prototype.getReadyState = function (continuation) {\n  continuation(this.websocket.readyState);\n};\n\nWS.prototype.getBufferedAmount = function (continuation) {\n  continuation(this.websocket.bufferedAmount);\n};\n\nWS.prototype.close = function (code, reason, continuation) {\n  try {\n    if (code && reason) {\n      this.websocket.close(code, reason);\n    } else {\n      this.websocket.close();\n    }\n    continuation();\n  } catch (e) {\n    var errorCode;\n    if (e instanceof SyntaxError) {\n      errorCode = \"SYNTAX\";\n    } else {\n      errorCode = \"INVALID_ACCESS\";\n    }\n    continuation(undefined, {\n      errcode: errorCode,\n      message: e.message\n    });\n  }\n};\n\nWS.prototype.onOpen = function (event) {\n  this.dispatchEvent('onOpen');\n};\n\nWS.prototype.onMessage = function (event, flags) {\n  var data = {};\n  if (this.isNode && flags && flags.binary) {\n    data.buffer = new Uint8Array(event).buffer;\n  } else if (this.isNode) {\n    data.text = event;\n  } else if (typeof ArrayBuffer !== 'undefined' && event.data instanceof ArrayBuffer) {\n    data.buffer = event.data;\n  } else if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n    data.binary = event.data;\n  } else if (typeof event.data === 'string') {\n    data.text = event.data;\n  }\n  this.dispatchEvent('onMessage', data);\n};\n\nWS.prototype.onError = function (event) {\n  // Nothing to pass on\n  // See: http://stackoverflow.com/a/18804298/300539\n  this.dispatchEvent('onError');\n};\n\nWS.prototype.onClose = function (event) {\n  this.dispatchEvent('onClose',\n                     {code: event.code,\n                      reason: event.reason,\n                      wasClean: event.wasClean});\n};\n\nexports.provider = WS;\nexports.name = 'core.websocket';\nexports.setSocket = function (impl, isNode) {\n  WSHandle = impl;\n  nodeStyle = isNode;\n};\n","/*jshint node:true*/\n/*global */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar XhrProvider = function(cap, dispatchEvent) {\n  \"use strict\";\n  this._dispatchEvent = dispatchEvent;\n  this._xhr = new XMLHttpRequest();\n\n  setTimeout(cap.provider.onClose.bind(\n    cap.provider,\n    this,\n    this.abort.bind(this)\n  ), 0);\n\n  this._events = [\n    \"loadstart\",\n    \"progress\",\n    \"abort\",\n    \"error\",\n    \"load\",\n    \"timeout\",\n    \"loadend\",\n    \"readystatechange\"\n  ];\n  this._setupListeners();\n\n};\n\nXhrProvider.prototype.open = function(method, url, async, user, password) {\n  \"use strict\";\n  if (typeof async !== \"undefined\" && async !== true) {\n    return PromiseCompat.reject({\n      errcode: \"InvalidAccessError\",\n      message: \"async should always be set to true\"\n    });\n  }\n\n  this._xhr.open(method, url, async, user, password);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.send = function(data) {\n  \"use strict\";\n  if (!(data instanceof Object)) {\n    this._xhr.send();\n  } else if (data.hasOwnProperty(\"string\")) {\n    this._xhr.send(data.string);\n  } else if (data.hasOwnProperty(\"buffer\")) {\n    this._xhr.send(data.buffer);\n  } else {\n    this._xhr.send();\n  }\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.abort = function() {\n  \"use strict\";\n  this._xhr.abort();\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getResponseHeader = function(header) {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getResponseHeader(header));\n};\n\nXhrProvider.prototype.getAllResponseHeaders = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getAllResponseHeaders());\n};\n\nXhrProvider.prototype.setRequestHeader = function(header, value) {\n  \"use strict\";\n  this._xhr.setRequestHeader(header, value);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.overrideMimeType = function(mime) {\n  \"use strict\";\n  this._xhr.overrideMimeType(mime);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getReadyState = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.readyState);\n};\n\nXhrProvider.prototype.getResponse = function() {\n  \"use strict\";\n  if (this._xhr.response === null) {\n    return PromiseCompat.resolve(null);\n  } else if (this._xhr.responseType === \"text\" || this._xhr.responseType === \"\") {\n    return PromiseCompat.resolve({ string: this._xhr.response });\n  } else if (this._xhr.responseType === \"arraybuffer\") {\n    return PromiseCompat.resolve({ buffer: this._xhr.response });\n  } else if (this._xhr.responseType === \"json\") {\n    return PromiseCompat.resolve({ object: this._xhr.response });\n  }\n\n  return PromiseCompat.reject(\"core.xhr cannot determine type of response\");\n};\n\nXhrProvider.prototype.getResponseText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseText);\n};\n\nXhrProvider.prototype.getResponseURL = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseURL);\n};\n\nXhrProvider.prototype.getResponseType = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseType);\n};\n\nXhrProvider.prototype.setResponseType = function(type) {\n  \"use strict\";\n  this._xhr.responseType = type;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getStatus = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.status);\n};\n\nXhrProvider.prototype.getStatusText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.statusText);\n};\n\nXhrProvider.prototype.getTimeout = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.timeout);\n};\n\nXhrProvider.prototype.setTimeout = function(timeout) {\n  \"use strict\";\n  this._xhr.timeout = timeout;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getWithCredentials = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.withCredentials);\n};\n\nXhrProvider.prototype.setWithCredentials = function(wc) {\n  \"use strict\";\n  this._xhr.withCredentials = wc;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype._setupListeners = function() {\n  \"use strict\";\n  // Download events\n  this._events.forEach(function (eventName) {\n    this._xhr.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"on\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n\n  // Upload events\n  this._events.forEach(function (eventName) {\n    this._xhr.upload.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"onupload\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n};\n\nexports.name = \"core.xhr\";\nexports.provider = XhrProvider;\nexports.style = \"providePromises\";\nexports.flags = { provider: true };\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar loadedOnStartup = false;\n/**\n * If there is redirection back to the page, and oAuthRedirectID is set,\n * then report the auth and close the window.\n */\nif (typeof window !== 'undefined' && window && window.location &&\n    window.addEventListener) {\n  window.addEventListener('load', function () {\n    \"use strict\";\n    loadedOnStartup = true;\n  }, true);\n\n  if (window.localStorage &&\n      window.location.href.indexOf(oAuthRedirectId) > 0) {\n    // This will trigger a 'storage' event on the window. See storageListener\n    window.localStorage.setItem(oAuthRedirectId, new Date());\n    window.close();\n  }\n}\n\nvar LocalPageAuth = function() {\n  \"use strict\";\n  this.listeners = {};\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nLocalPageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof window !== 'undefined' && window && loadedOnStartup) {\n    var here = window.location.protocol + \"//\" + window.location.host +\n        window.location.pathname;\n    if (redirectURIs.indexOf(here) > -1) {\n      continuation({\n        redirect: here,\n        state: oAuthRedirectId + Math.random()\n      });\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nLocalPageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, continuation) {\n  \"use strict\";\n  var listener = this.storageListener.bind(this, continuation, stateObj);\n  this.listeners[stateObj.state] = listener;\n  window.addEventListener(\"storage\", listener, false);\n  // Start 'er up\n  window.open(authUrl);\n};\n\n/**\n * Handler for storage events, which relays them to waiting clients.\n * For the schema of the storage msg, see:\n * http://tutorials.jenkov.com/html5/local-storage.html#storage-events\n * @param {Function} continuation function to call with result\n * @param {Object.<string, string>} stateObj the return value from initiateOAuth\n * @param {Object} msg storage event\n */\nLocalPageAuth.prototype.storageListener = function(continuation, stateObj, msg) {\n  'use strict';\n  if (msg.url.indexOf(stateObj.state) > -1) {\n    window.removeEventListener(\"storage\", this.listeners[stateObj.state], false);\n    delete this.listeners[stateObj.state];\n    continuation(msg.url);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = LocalPageAuth;\n","(function (global){\n/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nfunction RemotePageAuth() {\n  \"use strict\";\n  this.listeners = {};\n}\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nRemotePageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof global !== 'undefined' && global && global.document) {\n    for (var i=0; i<redirectURIs.length; i++) {\n      // TODO: remove restriction on URL pattern match.\n      if ((redirectURIs[i].indexOf('http://') === 0 ||\n          redirectURIs[i].indexOf('https://') === 0) &&\n          redirectURIs[i].indexOf('oauth-relay.html') > 0) {\n        continuation({\n          redirect: redirectURIs[i],\n          state: oAuthRedirectId + Math.random()\n        });\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nRemotePageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, continuation) {\n  \"use strict\";\n  var frame = global.document.createElement('iframe');\n  frame.src = stateObj.redirect;\n  frame.style.display = 'none';\n\n  global.document.body.appendChild(frame);\n  frame.addEventListener('load', function () {\n    this.listeners[stateObj.state] = continuation;\n    window.open(authUrl);\n\n    frame.contentWindow.postMessage(stateObj.state, '*');\n  }.bind(this));\n\n  window.addEventListener('message', function (frame, msg) {\n    if (msg.data && msg.data.key && msg.data.url && this.listeners[msg.data.key]) {\n      this.listeners[msg.data.key](msg.data.url);\n      delete this.listeners[msg.data.key];\n      try {\n        document.body.removeChild(frame);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }.bind(this, frame), false);\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = RemotePageAuth;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\n/**\n * The API registry for freedom.js.  Used to look up requested APIs,\n * and provides a bridge for core APIs to act like normal APIs.\n * @Class API\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Api = function(debug) {\n  this.debug = debug;\n  this.apis = {};\n  this.providers = {};\n  this.waiters = {};\n};\n\n/**\n * Get an API.\n * @method get\n * @param {String} api The API name to get.\n * @returns {{name:String, definition:API}} The API if registered.\n */\nApi.prototype.get = function(api) {\n  if (!this.apis[api]) {\n    return false;\n  }\n  return {\n    name: api,\n    definition: this.apis[api]\n  };\n};\n\n/**\n * Set an API to a definition.\n * @method set\n * @param {String} name The API name.\n * @param {API} definition The JSON object defining the API.\n */\nApi.prototype.set = function(name, definition) {\n  this.apis[name] = definition;\n};\n\n/**\n * Register a core API provider.\n * @method register\n * @param {String} name the API name.\n * @param {Function} constructor the function to create a provider for the API.\n * @param {String?} style The style the provider is written in. Valid styles\n *   are documented in fdom.port.Provider.prototype.getInterface. Defaults to\n *   provideAsynchronous\n * @param {Object?} flags Prefixed arguments needed by the core provider.\n *   valid keys are 'module', 'provider', and 'config'.\n */\nApi.prototype.register = function(name, constructor, style, flags) {\n  var i,\n    args;\n\n  this.providers[name] = {\n    constructor: constructor,\n    style: style || 'provideAsynchronous',\n    flags: flags || {}\n  };\n\n  if (this.waiters[name]) {\n    for (i = 0; i < this.waiters[name].length; i += 1) {\n      args = {};\n      if (flags.module) {\n        args.module = this.waiters[name][i].from;\n      }\n      if (flags.config) {\n        args.config = this.waiters[name][i].from.config;\n      }\n      this.waiters[name][i].resolve({\n        args: args,\n        inst: constructor.bind({}, args)\n      });\n    }\n    delete this.waiters[name];\n  }\n};\n\n/**\n * Get a core API connected to a given FreeDOM module.\n * @method getCore\n * @param {String} name the API to retrieve.\n * @param {Module} from The instantiating App.\n * @returns {Promise} A promise of a fdom.App look-alike (and argument object),\n * matching a local API definition.\n */\nApi.prototype.getCore = function(name, from) {\n  return new PromiseCompat(function(resolve, reject) {\n    if (this.apis[name]) {\n      if (this.providers[name]) {\n        var args = {};\n        if (this.providers[name].flags.module) {\n          args.module = from;\n        }\n        if (this.providers[name].flags.config) {\n          args.config = from.config;\n        }\n        resolve({\n          args: args,\n          inst: this.providers[name].constructor.bind({}, args)\n        });\n      } else {\n        if (!this.waiters[name]) {\n          this.waiters[name] = [];\n        }\n        this.waiters[name].push({\n          resolve: resolve,\n          reject: reject,\n          from: from\n        });\n      }\n    } else {\n      this.debug.warn('Api.getCore asked for unknown core: ' + name);\n      reject(null);\n    }\n  }.bind(this));\n};\n\n/**\n * Configure a {Provider} to provide a named core api on behalf of a\n * given port.\n * @param {String} name The name of the provider\n * @param {Provider} provider The provider that will provide the named api\n * @param {Module} from The module requesting the core provider.\n */\nApi.prototype.provideCore = function (name, provider, from) {\n  return this.getCore(name, from).then(function (core) {\n    var flags = this.providers[name].flags,\n      iface = provider.getProxyInterface();\n    if (flags.provider) {\n      core.args.provider = iface;\n    }\n    iface()[this.providers[name].style](core.inst);\n  }.bind(this), function (err) {\n    this.debug.error('Could not provide core: ', err);\n  }.bind(this));\n};\n\n/**\n * Shutdown the API registry, and reject any pending waiters.\n */\nApi.prototype.cleanup = function () {\n  var prop,\n    doReject = function (waiter) {\n      waiter.reject();\n    };\n  for (prop in this.waiters) {\n    if (this.waiters.hasOwnProperty(prop)) {\n      this.waiters[prop].forEach(doReject);\n    }\n  }\n  delete this.waiters;\n};\n\n/**\n * Defines the apis module and provider registry.\n */\nmodule.exports = Api;\n","/*jslint indent:2,node:true */\n\nvar Bundle = function () {\n  'use strict';\n  this.interfaces = require('../dist/bundle.compiled');\n};\n\n/**\n * Populate an API registry with provided providers, and with known API\n * definitions.\n * @static\n * @method register\n * @param {{name: string, provider: Function, style?: string}[]} providers\n *   The core providers made available to this freedom.js instance.\n * @param {Api} registry The API registry to populate.\n */\nexports.register = function (providers, registry) {\n  'use strict';\n  var bundle = new Bundle();\n  bundle.interfaces.forEach(function (api) {\n    if (api && api.name && api.api) {\n      registry.set(api.name, api.api);\n    }\n  });\n\n  providers.forEach(function (provider) {\n    if (provider.name) {\n      registry.register(provider.name,\n                        provider.provider,\n                        provider.style,\n                        provider.flags);\n    }\n  });\n};\n","/*globals Blob, ArrayBuffer, DataView */\n/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable api.\n * @class Consumer\n * @implements Port\n * @uses handleEvents\n * @param {Object} interfaceCls The api interface exposed by this consumer.\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Consumer = function (interfaceCls, debug) {\n  this.id = Consumer.nextId();\n  this.interfaceCls = interfaceCls;\n  this.debug = debug;\n  util.handleEvents(this);\n  \n  this.ifaces = {};\n  this.closeHandlers = {};\n  this.errorHandlers = {};\n  this.emits = {};\n};\n\n/**\n * Receive incoming messages for this consumer.\n * @method onMessage\n * @param {String} source The source of the message.\n * @param {Object} message The received message.\n */\nConsumer.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.emitChannel = message.channel;\n    this.emit(this.emitChannel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    delete this.controlChannel;\n    this.doClose();\n  } else {\n    if (!this.emitChannel && message.channel) {\n      this.emitChannel = message.channel;\n      this.emit('start');\n      return;\n    }\n    if (message.type === 'close' && message.to) {\n      this.teardown(message.to);\n      return;\n    }\n    if (message.type === 'error') {\n      this.error(message.to, message.message);\n      return;\n    }\n    if (message.to) {\n      if (this.emits[message.to]) {\n        this.emits[message.to]('message', message.message);\n      } else {\n        this.debug.warn('Could not deliver message, no such interface: ' + message.to);\n      }\n    } else {\n      var msg = message.message;\n      util.eachProp(this.emits, function (iface) {\n        iface('message', message.message);\n      });\n    }\n  }\n};\n\n/**\n * Create a consumer.Interface associated with this consumer.\n * An interface is returned, which is supplied with important control of the\n * api via constructor arguments: (bound below in getInterfaceConstructor)\n * \n * onMsg: function(binder) sets the function to call when messages for this\n *    interface arrive on the channel,\n * emit: function(msg) allows this interface to emit messages,\n * id: string is the Identifier for this interface.\n * @method getInterface\n */\nConsumer.prototype.getInterface = function () {\n  var Iface = this.getInterfaceConstructor(),\n    args = Array.prototype.slice.call(arguments, 0);\n  if (args.length) {\n    Iface = Iface.bind.apply(Iface, [Iface].concat(args));\n  }\n  return new Iface();\n};\n\n/**\n * Attach an 'onEvent' listener to an interface, allowing external consumers\n * to either listen to channel state, or register callbacks on lifetime events\n * of individual instances of the interface.\n * @method getListener\n * @parma {String} name The event to listen to.\n * @private\n */\nConsumer.prototype.getListener = function (name) {\n  return function (instance, handler) {\n    // Listen to the channel directly.\n    if (typeof instance === 'function' && handler === undefined) {\n      this.once(name, instance);\n      return;\n    }\n\n    // Listen to a specific instance.\n    var handlers = name + 'Handlers';\n    util.eachProp(this.ifaces, function (candidate, id) {\n      if (candidate === instance) {\n        if (this[handlers][id]) {\n          this[handlers][id].push(handler);\n        } else {\n          this[handlers][id] = [handler];\n        }\n        return true;\n      }\n    }.bind(this));\n  }.bind(this);\n};\n\n/**\n * Create a function that can be used to get interfaces from this api consumer\n * from a user-visible point.\n * @method getProxyInterface\n */\nConsumer.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    if (args.length > 0) {\n      return p.getInterface.apply(p, args);\n    } else {\n      return p.getInterface();\n    }\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (candidate, id) {\n        if (candidate === iface) {\n          this.teardown(id);\n          this.emit(this.emitChannel, {\n            type: 'close',\n            to: id\n          });\n          return true;\n        }\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.doClose();\n    }\n  }.bind(this);\n\n  func.onClose = this.getListener('close');\n  func.onError = this.getListener('error');\n\n  return func;\n};\n\n/**\n * Provides a bound class for creating a consumer.Interface associated\n * with this api. This partial level of construction can be used\n * to allow the consumer to be used as a provider for another API.\n * @method getInterfaceConstructor\n * @private\n */\nConsumer.prototype.getInterfaceConstructor = function () {\n  var id = Consumer.nextId();\n  return this.interfaceCls.bind(\n    {},\n    function (id, obj, binder) {\n      this.ifaces[id] = obj;\n      this.emits[id] = binder;\n    }.bind(this, id),\n    this.doEmit.bind(this, id),\n    this.debug\n  );\n};\n\n/**\n * Emit a message on the channel once setup is complete.\n * @method doEmit\n * @private\n * @param {String} to The ID of the flow sending the message.\n * @param {Object} msg The message to emit\n * @param {Boolean} all Send message to all recipients.\n */\nConsumer.prototype.doEmit = function (to, msg, all) {\n  if (all) {\n    to = false;\n  }\n  if (this.emitChannel) {\n    this.emit(this.emitChannel, {to: to, type: 'message', message: msg});\n  } else {\n    this.once('start', this.doEmit.bind(this, to, msg));\n  }\n};\n\n/**\n * Teardown a single interface of this api.\n * @method teardown\n * @param {String} id The id of the interface to tear down.\n */\nConsumer.prototype.teardown = function (id) {\n  if (this.emits[id]) {\n    this.emits[id]('close');\n  }\n  delete this.emits[id];\n  if (this.closeHandlers[id]) {\n    util.eachProp(this.closeHandlers[id], function (prop) {\n      prop();\n    });\n  }\n  delete this.ifaces[id];\n  delete this.closeHandlers[id];\n  delete this.errorHandlers[id];\n};\n\n/**\n * Handle a message error reported to this api.\n * @method error\n * @param {String?} id The id of the interface where the error occured.\n * @param {Object} message The message which failed, if relevant.\n */\nConsumer.prototype.error = function (id, message) {\n  if (id && this.errorHandlers[id]) {\n    util.eachProp(this.errorHandlers[id], function (prop) {\n      prop(message);\n    });\n  } else if (!id) {\n    this.emit('error', message);\n  }\n};\n\n\n/**\n * Close / teardown the flow this api terminates.\n * @method doClose\n */\nConsumer.prototype.doClose = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Channel Closing',\n      request: 'close'\n    });\n  }\n\n  util.eachProp(this.emits, function (emit, id) {\n    this.teardown(id);\n  }.bind(this));\n\n  this.emit('close');\n  this.off();\n\n  this.emitChannel = null;\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return The description of this port.\n */\nConsumer.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Consumer \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Consumer]\";\n  }\n};\n\n/**\n * Get the next ID for an api channel.\n * @method nextId\n * @static\n * @private\n */\nConsumer.nextId = function () {\n  if (!Consumer.id) {\n    Consumer.id = 1;\n  }\n  return (Consumer.id += 1);\n};\n\n/**\n * Convert a structured data structure into a message stream conforming to\n * a template and an array of binary data elements.\n * @static\n * @method messageToPortable\n * @param {Object} template The template to conform to\n * @param {Object} value The instance of the data structure to confrom\n * @param {Debug} debug A debugger for errors.\n * @return {{text: Object, binary: Array}} Separated data streams.\n */\nConsumer.messageToPortable = function (template, value, debug) {\n  var externals = [],\n    message = Consumer.conform(template, value, externals, true, debug);\n  return {\n    text: message,\n    binary: externals\n  };\n};\n\n/**\n * Convert Structured Data streams into a data structure conforming to a\n * template.\n * @static\n * @method portableToMessage\n * @param {Object} template The template to conform to\n * @param {{text: Object, binary: Array}} streams The streams to conform\n * @param {Debug} debug A debugger for errors.\n * @return {Object} The data structure matching the template.\n */\nConsumer.portableToMessage = function (template, streams, debug) {\n  return Consumer.conform(template, streams.text, streams.binary, false, debug);\n};\n\n/**\n * Force a collection of values to look like the types and length of an API\n * template.\n * @static\n * @method conform\n * @param {Object} template The template to conform to\n * @param {Object} from The value to conform\n * @param {Array} externals Listing of binary elements in the template\n * @param {Boolean} Whether to to separate or combine streams.\n * @aparam {Debug} debug A debugger for errors.\n */\nConsumer.conform = function (template, from, externals, separate, debug) {\n  /* jshint -W086 */\n  if (typeof (from) === 'function') {\n    //from = undefined;\n    //throw \"Trying to conform a function\";\n    return undefined;\n  } else if (typeof (from) === 'undefined') {\n    return undefined;\n  } else if (from === null) {\n    return null;\n  } else if (template === undefined) {\n    debug.error(\"Message discarded for not matching declared type!\", from);\n    return undefined;\n  }\n\n  switch (template) {\n  case 'string':\n    return String('') + from;\n  case 'number':\n    return Number(1) * from;\n  case 'boolean':\n    return Boolean(from === true);\n  case 'object':\n    // TODO(willscott): Allow removal if sandboxing enforces this.\n    if (typeof from === 'undefined') {\n      return undefined;\n    } else {\n      return JSON.parse(JSON.stringify(from));\n    }\n  case 'blob':\n    if (separate) {\n      if (from instanceof Blob) {\n        externals.push(from);\n        return externals.length - 1;\n      } else {\n        debug.error('conform expecting Blob, but saw ' + (typeof from));\n        externals.push(new Blob([]));\n        return externals.length - 1;\n      }\n    } else {\n      return externals[from];\n    }\n  case 'buffer':\n    if (separate) {\n      externals.push(Consumer.makeArrayBuffer(from, debug));\n      return externals.length - 1;\n    } else {\n      return Consumer.makeArrayBuffer(externals[from], debug);\n    }\n  case 'proxy':\n    return from;\n  }\n  var val, i;\n  if (Array.isArray(template) && from !== undefined) {\n    val = [];\n    i = 0;\n    if (template.length === 2 && template[0] === 'array') {\n      //console.log(\"template is array, value is \" + JSON.stringify(value));\n      for (i = 0; i < from.length; i += 1) {\n        val.push(Consumer.conform(template[1], from[i], externals,\n                                  separate, debug));\n      }\n    } else {\n      for (i = 0; i < template.length; i += 1) {\n        if (from[i] !== undefined) {\n          val.push(Consumer.conform(template[i], from[i], externals,\n                                    separate, debug));\n        } else {\n          val.push(undefined);\n        }\n      }\n    }\n    return val;\n  } else if (typeof template === 'object' && from !== undefined) {\n    val = {};\n    util.eachProp(template, function (prop, name) {\n      if (from[name] !== undefined) {\n        val[name] = Consumer.conform(prop, from[name], externals, separate,\n                                     debug);\n      }\n    });\n    return val;\n  }\n  debug.error('Unknown template provided: ' + template);\n};\n\n/**\n * Make a thing into an Array Buffer\n * @static\n * @method makeArrayBuffer\n * @param {Object} thing\n * @param {Debug} debug A debugger in case of errors.\n * @return {ArrayBuffer} An Array Buffer\n */\nConsumer.makeArrayBuffer = function (thing, debug) {\n  if (!thing) {\n    return new ArrayBuffer(0);\n  }\n\n  if (thing instanceof ArrayBuffer) {\n    return thing;\n  } else if (thing.constructor.name === \"ArrayBuffer\" &&\n      typeof thing.prototype === \"undefined\") {\n    // Workaround for webkit origin ownership issue.\n    // https://github.com/UWNetworksLab/freedom/issues/28\n    return new DataView(thing).buffer;\n  } else {\n    debug.error('expecting ArrayBuffer, but saw ' +\n        (typeof thing) + ': ' + JSON.stringify(thing));\n    return new ArrayBuffer(0);\n  }\n};\n\n/**\n * Recursively traverse a [nested] object and freeze its keys from being\n * writable. Note, the result can have new keys added to it, but existing ones\n * cannot be  overwritten. Doesn't do anything for arrays or other collections.\n *\n * @method recursiveFreezeObject\n * @static\n * @param {Object} obj - object to be frozen\n * @return {Object} obj\n **/\nConsumer.recursiveFreezeObject = function (obj) {\n  var k, ret = {};\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      Object.defineProperty(ret, k, {\n        value: Consumer.recursiveFreezeObject(obj[k]),\n        writable: false,\n        enumerable: true\n      });\n    }\n  }\n  return ret;\n};\n\nmodule.exports = Consumer;\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom entry point for debugging.\n * @uses handleEvents\n * @implements Port\n * @constructor\n */\nvar Debug = function (logger) {\n  this.id = 'debug';\n  this.emitChannel = false;\n  this.config = false;\n  util.handleEvents(this);\n};\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the textual description.\n */\nDebug.prototype.toString = function () {\n  return '[Console]';\n};\n\n/**\n * Register a logger for outputting debugging messages.\n * @method setLogger\n * @param {Console} logger The logger to register\n */\nDebug.prototype.setLogger = function (logger) {\n  if (this.logger) {\n    this.info('Replacing Logger.');\n  }\n  this.logger = logger;\n  this.emit('logger');\n};\n\n/**\n * Handler for receiving messages sent to the debug port.\n * These messages are used to retreive config for exposing console.\n * @method onMessage\n * @param {String} source the source identifier for the message.\n * @param {Object} message the received message.\n */\nDebug.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.channel && !this.emitChannel) {\n    this.emitChannel = message.channel;\n    this.config = message.config;\n    if (!this.config.global.console) {\n      if (typeof console !== 'undefined') {\n        this.config.global.console = console;\n      } else {\n        this.config.global.console = this.getLogger('Console');\n      }\n    }\n    this.emit('ready');\n  }\n};\n\n/**\n * Dispatch a debug message with arbitrary severity.\n * All debug messages are routed through the manager, to allow for delegation.\n * @method format\n * @param {String} severity the severity of the message.\n * @param {String} source The location of message.\n * @param {String[]} args The contents of the message.\n * @private\n */\nDebug.prototype.format = function (severity, source, args) {\n  var i, alist = [], argarr;\n  if (typeof args === \"string\" && source) {\n    try {\n      argarr = JSON.parse(args);\n      if (argarr instanceof Array) {\n        args = argarr;\n      }\n    } catch (e) {\n      // pass.\n    }\n  }\n\n  if (typeof args === \"string\") {\n    alist.push(args);\n  } else {\n    for (i = 0; i < args.length; i += 1) {\n      alist.push(args[i]);\n    }\n  }\n  if (!this.emitChannel) {\n    this.on('ready', this.format.bind(this, severity, source, alist));\n    return;\n  }\n  this.emit(this.emitChannel, {\n    severity: severity,\n    source: source,\n    quiet: true,\n    request: 'debug',\n    msg: JSON.stringify(alist)\n  });\n};\n\n/**\n * Print received messages on the console.\n * This is called by the manager in response to an emission from format.\n * @method print\n * @param {Object} message The message emitted by {@see format} to print.\n */\nDebug.prototype.print = function (message) {\n  if (!this.logger) {\n    this.once('logger', this.print.bind(this, message));\n    return;\n  }\n\n  var args, arr = [], i = 0;\n  args = JSON.parse(message.msg);\n  if (typeof args === \"string\") {\n    arr.push(args);\n  } else {\n    while (args[i] !== undefined) {\n      arr.push(args[i]);\n      i += 1;\n    }\n  }\n  this.logger[message.severity].call(this.logger, message.source, arr, function () {});\n};\n\n/**\n * Print a log message to the console.\n * @method log\n */\nDebug.prototype.log = function () {\n  this.format('log', undefined, arguments);\n};\n\n/**\n * Print an info message to the console.\n * @method log\n */\nDebug.prototype.info = function () {\n  this.format('info', undefined, arguments);\n};\n\n/**\n * Print a debug message to the console.\n * @method log\n */\nDebug.prototype.debug = function () {\n  this.format('debug', undefined, arguments);\n};\n\n/**\n * Print a warning message to the console.\n * @method warn\n */\nDebug.prototype.warn = function () {\n  this.format('warn', undefined, arguments);\n};\n\n/**\n * Print an error message to the console.\n * @method error\n */\nDebug.prototype.error = function () {\n  this.format('error', undefined, arguments);\n};\n\n/**\n * Get a logger that logs messages prefixed by a given name.\n * @method getLogger\n * @param {String} name The prefix for logged messages.\n * @returns {Console} A console-like object.\n */\nDebug.prototype.getLogger = function (name) {\n  var log = function (severity, source) {\n    var args = Array.prototype.splice.call(arguments, 2);\n    this.format(severity, source, args);\n  },\n    logger = {\n      freedom: true,\n      debug: log.bind(this, 'debug', name),\n      info: log.bind(this, 'info', name),\n      log: log.bind(this, 'log', name),\n      warn: log.bind(this, 'warn', name),\n      error: log.bind(this, 'error', name)\n    };\n  return logger;\n};\n\nmodule.exports = Debug;\n","(function (global){\n/*jslint indent:2,node:true */\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\nvar Api = require('./api');\r\nvar Debug = require('./debug');\r\nvar Hub = require('./hub');\r\nvar Manager = require('./manager');\r\nvar Policy = require('./policy');\r\nvar ProxyBinder = require('./proxybinder');\r\nvar Resource = require('./resource');\r\nvar util = require('./util');\r\nvar Bundle = require('./bundle');\r\n\r\nvar freedomGlobal;\r\nvar getGlobal = function () {\r\n  'use strict';\r\n  \r\n  // Node.js\r\n  if (typeof global !== 'undefined' && global.prototype === undefined) {\r\n    freedomGlobal = global;\r\n  // Browsers\r\n  } else {\r\n    setTimeout(function () {\r\n      freedomGlobal = this;\r\n    }, 0);\r\n  }\r\n};\r\ngetGlobal();\r\n\r\n/**\r\n * Create a new freedom context.\r\n * @param {Object} context Information about the local context.\r\n * @see {util/workerEntry.js}\r\n * @param {String} manifest The manifest to load.\r\n * @param {Object} config Configuration keys set by the user.\r\n * @returns {Promise} A promise for the module defined in the manifest.\r\n */\r\nvar setup = function (context, manifest, config) {\r\n  'use strict';\r\n  var debug = new Debug(),\r\n    hub = new Hub(debug),\r\n    resource = new Resource(debug),\r\n    api = new Api(debug),\r\n    manager = new Manager(hub, resource, api),\r\n    binder = new ProxyBinder(manager),\r\n    policy,\r\n    site_cfg = {\r\n      'debug': 'log',\r\n      'manifest': manifest,\r\n      'moduleContext': (!context || typeof (context.isModule) === \"undefined\") ?\r\n          util.isModuleContext() :\r\n          context.isModule\r\n    },\r\n    link,\r\n    Port,\r\n    cleanup = function () {\r\n      api.cleanup();\r\n      manager.destroy();\r\n    };\r\n\r\n  if (config) {\r\n    util.mixin(site_cfg, config, true);\r\n  }\r\n  site_cfg.global = freedomGlobal;\r\n  if (context) {\r\n    util.mixin(site_cfg, context, true);\r\n  }\r\n\r\n  // Register user-supplied extensions.\r\n  // For example the 'core.oauth' provider defines a register function,\r\n  // which enables site_cfg.oauth to be registered with it.\r\n  context.providers.forEach(function (provider) {\r\n    var name;\r\n    if (provider.name.indexOf('core.') === 0 &&\r\n        typeof provider.register === 'function') {\r\n      name = provider.name.substr(5);\r\n      // Invert priority and prefer user config over local context for these.\r\n      if (config && config[name]) {\r\n        provider.register(config[name]);\r\n      } else if (site_cfg[name]) {\r\n        provider.register(site_cfg[name]);\r\n      } else {\r\n        provider.register(undefined);\r\n      }\r\n    }\r\n  });\r\n  \r\n  Bundle.register(context.providers, api);\r\n  resource.register(context.resolvers || []);\r\n\r\n  return new PromiseCompat(function (resolve, reject) {\r\n    if (site_cfg.moduleContext) {\r\n      Port = site_cfg.portType;\r\n      link = new Port('Outbound', resource);\r\n      manager.setup(link);\r\n\r\n      // Delay debug messages until delegation to the parent context is setup.\r\n      manager.once('delegate', manager.setup.bind(manager, debug));\r\n    } else {\r\n      manager.setup(debug);\r\n      policy = new Policy(manager, resource, site_cfg);\r\n\r\n      // Define how to load a root module.\r\n      var fallbackLogger, getIface;\r\n      fallbackLogger = function (message) {\r\n        api.getCore('core.console', {\r\n          config: site_cfg\r\n        }).then(function (provider) {\r\n          var logger = new provider.inst();\r\n          debug.setLogger(logger);\r\n          if (message) {\r\n            debug.error(message);\r\n          }\r\n        });\r\n      };\r\n      getIface = function (manifest) {\r\n        return resource.get(site_cfg.location, manifest).then(\r\n          function (canonical_manifest) {\r\n            return policy.get([], canonical_manifest);\r\n          }\r\n        ).then(function (instance) {\r\n          manager.setup(instance);\r\n          return binder.bindDefault(instance, api, instance.manifest);\r\n        });\r\n      };\r\n\r\n      // Load appropriate Logger.\r\n      if (site_cfg.logger) {\r\n        getIface(site_cfg.logger).then(function (iface) {\r\n          if (iface.external.api !== 'console') {\r\n            fallbackLogger(\"Unwilling to use logger with unknown API:\",\r\n              iface.external.api);\r\n          } else {\r\n            debug.setLogger(iface.external());\r\n          }\r\n        }, fallbackLogger);\r\n      } else {\r\n        fallbackLogger();\r\n      }\r\n\r\n      // Load root module.\r\n      getIface(site_cfg.manifest).then(function (iface) {\r\n        iface.port.once('close', cleanup);\r\n        return iface.external;\r\n      }, function (err) {\r\n        debug.error('Failed to retrieve manifest: ' + err);\r\n        throw err;\r\n      }).then(resolve, reject);\r\n    }\r\n\r\n    hub.emit('config', site_cfg);\r\n  });\r\n};\r\n\r\nmodule.exports = setup;\r\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('./util');\r\n\r\n/**\r\n * Defines fdom.Hub, the core message hub between freedom modules.\r\n * Incomming messages from apps are sent to hub.onMessage()\r\n * @class Hub\r\n * @param {Debug} debug Logger for debugging.\r\n * @constructor\r\n */\r\nvar Hub = function (debug) {\r\n  this.debug = debug;\r\n  this.config = {};\r\n  this.apps = {};\r\n  this.routes = {};\r\n\r\n  util.handleEvents(this);\r\n  this.on('config', function (config) {\r\n    util.mixin(this.config, config);\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * Handle an incoming message from a freedom app.\r\n * @method onMessage\r\n * @param {String} source The identifiying source of the message.\r\n * @param {Object} message The sent message.\r\n */\r\nHub.prototype.onMessage = function (source, message) {\r\n  var destination = this.routes[source], type;\r\n  if (!destination || !destination.app) {\r\n    this.debug.warn(\"Message dropped from unregistered source \" + source);\r\n    return;\r\n  }\r\n\r\n  if (!this.apps[destination.app]) {\r\n    this.debug.warn(\"Message dropped to destination \" + destination.app);\r\n    return;\r\n  }\r\n\r\n  // The firehose tracing all internal freedom.js messages.\r\n  if (!message.quiet && !destination.quiet && this.config && this.config.trace) {\r\n    type = message.type;\r\n    if (message.type === 'message' && message.message &&\r\n        message.message.action === 'method') {\r\n      type = 'method.' + message.message.type;\r\n    } else if (message.type === 'method' && message.message &&\r\n        message.message.type === 'method') {\r\n      type = 'return.' + message.message.name;\r\n    } else if (message.type === 'message' && message.message &&\r\n        message.message.type === 'event') {\r\n      type = 'event.' + message.message.name;\r\n    }\r\n    this.debug.debug(this.apps[destination.source].toString() +\r\n        \" -\" + type + \"-> \" +\r\n        this.apps[destination.app].toString() + \".\" + destination.flow);\r\n  }\r\n\r\n  this.apps[destination.app].onMessage(destination.flow, message);\r\n};\r\n\r\n/**\r\n * Get the local destination port of a flow.\r\n * @method getDestination\r\n * @param {String} source The flow to retrieve.\r\n * @return {Port} The destination port.\r\n */\r\nHub.prototype.getDestination = function (source) {\r\n  var destination = this.routes[source];\r\n  if (!destination) {\r\n    return null;\r\n  }\r\n  return this.apps[destination.app];\r\n};\r\n\r\n/**\r\n * Get the local source port of a flow.\r\n * @method getSource\r\n * @param {Port} source The flow identifier to retrieve.\r\n * @return {Port} The source port.\r\n */\r\nHub.prototype.getSource = function (source) {\r\n  if (!source) {\r\n    return false;\r\n  }\r\n  if (!this.apps[source.id]) {\r\n    this.debug.warn(\"No registered source '\" + source.id + \"'\");\r\n    return false;\r\n  }\r\n  return this.apps[source.id];\r\n};\r\n\r\n/**\r\n * Register a destination for messages with this hub.\r\n * @method register\r\n * @param {Port} app The Port to register.\r\n * @param {Boolean} [force] Whether to override an existing port.\r\n * @return {Boolean} Whether the app was registered.\r\n */\r\nHub.prototype.register = function (app, force) {\r\n  if (!this.apps[app.id] || force) {\r\n    this.apps[app.id] = app;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Deregister a destination for messages with the hub.\r\n * Note: does not remove associated routes. As such, deregistering will\r\n * prevent the installation of new routes, but will not distrupt existing\r\n * hub routes.\r\n * @method deregister\r\n * @param {Port} app The Port to deregister\r\n * @return {Boolean} Whether the app was deregistered.\r\n */\r\nHub.prototype.deregister = function (app) {\r\n  if (!this.apps[app.id]) {\r\n    return false;\r\n  }\r\n  delete this.apps[app.id];\r\n  return true;\r\n};\r\n\r\n/**\r\n * Install a new route in the hub.\r\n * @method install\r\n * @param {Port} source The source of the route.\r\n * @param {Port} destination The destination of the route.\r\n * @param {String} flow The flow where the destination will receive messages.\r\n * @param {Boolean} quiet Whether messages on this route should be suppressed.\r\n * @return {String} A routing source identifier for sending messages.\r\n */\r\nHub.prototype.install = function (source, destination, flow, quiet) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n  if (!destination) {\r\n    this.debug.warn(\"Unwilling to generate blackhole flow from \" + source.id);\r\n    return;\r\n  }\r\n\r\n  var route = this.generateRoute();\r\n  this.routes[route] = {\r\n    app: destination,\r\n    flow: flow,\r\n    source: source.id,\r\n    quiet: quiet\r\n  };\r\n  if (typeof source.on === 'function') {\r\n    source.on(route, this.onMessage.bind(this, route));\r\n  }\r\n\r\n  return route;\r\n};\r\n\r\n/**\r\n * Uninstall a hub route.\r\n * @method uninstall\r\n * @param {Port} source The source of the route.\r\n * @param {String} flow The route to uninstall.\r\n * @return {Boolean} Whether the route was able to be uninstalled.\r\n */\r\nHub.prototype.uninstall = function (source, flow) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n\r\n  var route = this.routes[flow];\r\n  if (!route) {\r\n    return false;\r\n  } else if (route.source !== source.id) {\r\n    this.debug.warn(\"Flow \" + flow + \" does not belong to port \" + source.id);\r\n    return false;\r\n  }\r\n\r\n  delete this.routes[flow];\r\n  if (typeof source.off === 'function') {\r\n    source.off(route);\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Remove all listeners and notify all connected destinations of their removal.\r\n * @method teardown\r\n */\r\nHub.prototype.teardown = function () {\r\n  util.eachProp(this.apps, function (source) {\r\n    if (typeof source.off === 'function') {\r\n      source.off();\r\n    }\r\n  });\r\n  this.apps = {};\r\n  this.routes = {};\r\n};\r\n\r\n/**\r\n * Generate a unique routing identifier.\r\n * @method generateRoute\r\n * @return {String} a routing source identifier.\r\n * @private\r\n */\r\nHub.prototype.generateRoute = function () {\r\n  return util.getId();\r\n};\r\n\r\nmodule.exports = Hub;\r\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A link connects two freedom hubs. This is an abstract class\n * providing common functionality of translating control channels,\n * and integrating config information.\n * @class Link\n * @implements Port\n * @constructor\n */\nvar Link = function (name, resource) {\n  this.id = 'Link' + Math.random();\n  this.name = name;\n  this.resource = resource;\n  this.config = {};\n  this.src = null;\n\n  util.handleEvents(this);\n  util.mixin(this, Link.prototype);\n};\n\n/**\n * Receive messages from the hub to this port.\n * Manages startup, and passes others to 'deliverMessage' implemented\n * in derived classes.\n * @method onMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nLink.prototype.onMessage = function (flow, message) {\n  if (flow === 'control' && !this.controlChannel) {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.start();\n    }\n  } else {\n    this.deliverMessage(flow, message);\n  }\n};\n\n/**\n * Register a handler to alert of errors on this port.\n * @method addErrorHandler\n * @param {Function} handler Method to call with errors.\n */\nLink.prototype.addErrorHandler = function (handler) {\n  this.onError = handler;\n};\n\n/**\n * Report an error on this link.\n * @method onerror\n * @param {Error} err The error that occurred.\n */\nLink.prototype.onError = function (err) {\n  //Filled in by addErrorHandler\n};\n\n/**\n * Emit messages to the the hub, mapping control channels.\n * @method emitMessage\n * @param {String} flow the flow to emit the message on.\n * @param {Object} messgae The message to emit.\n */\nLink.prototype.emitMessage = function (flow, message) {\n  if (flow === 'control' && this.controlChannel) {\n    flow = this.controlChannel;\n  }\n  this.emit(flow, message);\n};\n\nmodule.exports = Link;\n","/*globals Worker */\n/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar Link = require('../link');\n\n/**\n * A port providing message transport between two freedom contexts via Worker.\n * @class Worker\n * @extends Link\n * @uses handleEvents\n * @constructor\n */\nvar WorkerLink = function(id, resource) {\n  Link.call(this, id, resource);\n  if (id) {\n    this.id = id;\n  }\n};\n\n/**\n * Start this port by listening or creating a worker.\n * @method start\n * @private\n */\nWorkerLink.prototype.start = function() {\n  if (this.config.moduleContext) {\n    this.setupListener();\n  } else {\n    this.setupWorker();\n  }\n};\n\n/**\n * Stop this port by destroying the worker.\n * @method stop\n * @private\n */\nWorkerLink.prototype.stop = function() {\n  // Function is determined by setupListener or setupFrame as appropriate.\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nWorkerLink.prototype.toString = function() {\n  return \"[Worker \" + this.id + \"]\";\n};\n\n/**\n * Set up a global listener to handle incoming messages to this\n * freedom.js context.\n * @method setupListener\n */\nWorkerLink.prototype.setupListener = function() {\n  var onMsg = function(msg) {\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this);\n  this.obj = this.config.global;\n  this.obj.addEventListener('message', onMsg, true);\n  this.stop = function() {\n    this.obj.removeEventListener('message', onMsg, true);\n    delete this.obj;\n  };\n  this.emit('started');\n  this.obj.postMessage(\"Ready For Messages\");\n};\n\n/**\n * Set up a worker with an isolated freedom.js context inside.\n * @method setupWorker\n */\nWorkerLink.prototype.setupWorker = function() {\n  var worker,\n    blob,\n    self = this;\n  worker = new Worker(this.config.source + '#' + this.id);\n\n  worker.addEventListener('error', function(err) {\n    this.onError(err);\n  }.bind(this), true);\n  worker.addEventListener('message', function(worker, msg) {\n    if (!this.obj) {\n      this.obj = worker;\n      this.emit('started');\n      return;\n    }\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this, worker), true);\n  this.stop = function() {\n    worker.terminate();\n    if (this.obj) {\n      delete this.obj;\n    }\n  };\n};\n\n/**\n * Receive messages from the hub to this port.\n * Received messages will be emitted from the other side of the port.\n * @method deliverMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nWorkerLink.prototype.deliverMessage = function(flow, message) {\n  if (flow === 'control' && message.type === 'close' &&\n      message.channel === 'control') {\n    this.stop();\n  } else {\n    if (this.obj) {\n      this.obj.postMessage({\n        flow: flow,\n        message: message\n      });\n    } else {\n      this.once('started', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\nmodule.exports = WorkerLink;\n\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar ModuleInternal = require('./moduleinternal');\n\n/**\n * A freedom port which manages the control plane of of changing hub routes.\n * @class Manager\n * @implements Port\n * @param {Hub} hub The routing hub to control.\n * @param {Resource} resource The resource manager for the runtime.\n * @param {Api} api The API manager for the runtime.\n * @constructor\n */\nvar Manager = function (hub, resource, api) {\n  this.id = 'control';\n  this.config = {};\n  this.controlFlows = {};\n  this.dataFlows = {};\n  this.dataFlows[this.id] = [];\n  this.reverseFlowMap = {};\n\n  this.debug = hub.debug;\n  this.hub = hub;\n  this.resource = resource;\n  this.api = api;\n\n  this.delegate = null;\n  this.toDelegate = {};\n  \n  this.hub.on('config', function (config) {\n    util.mixin(this.config, config);\n    this.emit('config');\n  }.bind(this));\n  \n  util.handleEvents(this);\n  this.hub.register(this);\n};\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nManager.prototype.toString = function () {\n  return \"[Local Controller]\";\n};\n\n/**\n * Process messages sent to this port.\n * The manager, or 'control' destination handles several types of messages,\n * identified by the request property.  The actions are:\n * 1. debug. Prints the message to the console.\n * 2. link. Creates a link between the source and a provided destination port.\n * 3. environment. Instantiate a module environment defined in ModuleInternal.\n * 4. delegate. Routes a defined set of control messages to another location.\n * 5. resource. Registers the source as a resource resolver.\n * 6. core. Generates a core provider for the requester.\n * 7. close. Tears down routes involing the requesting port.\n * 8. unlink. Tears down a route from the requesting port.\n * @method onMessage\n * @param {String} flow The source identifier of the message.\n * @param {Object} message The received message.\n */\nManager.prototype.onMessage = function (flow, message) {\n  var reverseFlow = this.controlFlows[flow], origin;\n  if (!reverseFlow) {\n    this.debug.warn(\"Unknown message source: \" + flow);\n    return;\n  }\n  origin = this.hub.getDestination(reverseFlow);\n\n  if (this.delegate && reverseFlow !== this.delegate &&\n      this.toDelegate[flow]) {\n    // Ship off to the delegee\n    this.emit(this.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      quiet: true,\n      flow: flow,\n      message: message\n    });\n    return;\n  }\n\n  if (message.request === 'debug') {\n    this.debug.print(message);\n    return;\n  }\n\n  if (message.request === 'link') {\n    this.createLink(origin, message.name, message.to, message.overrideDest);\n  } else if (message.request === 'environment') {\n    this.createLink(origin, message.name, new ModuleInternal(this));\n  } else if (message.request === 'delegate') {\n    // Initate Delegation.\n    if (this.delegate === null) {\n      this.delegate = reverseFlow;\n    }\n    this.toDelegate[message.flow] = true;\n    this.emit('delegate');\n  } else if (message.request === 'resource') {\n    this.resource.addResolver(message.args[0]);\n    this.resource.addRetriever(message.service, message.args[1]);\n  } else if (message.request === 'core') {\n    if (this.core && reverseFlow === this.delegate) {\n      (new this.core()).onMessage(origin, message.message);\n      return;\n    }\n    this.getCore(function (to, core) {\n      this.hub.onMessage(to, {\n        type: 'core',\n        core: core\n      });\n    }.bind(this, reverseFlow));\n  } else if (message.request === 'close') {\n    this.destroy(origin);\n  } else if (message.request === 'unlink') {\n    this.removeLink(origin, message.to);\n  } else {\n    this.debug.warn(\"Unknown control request: \" + message.request);\n    this.debug.log(JSON.stringify(message));\n    return;\n  }\n};\n\n/**\n * Get the port messages will be routed to given its id.\n * @method getPort\n * @param {String} portId The ID of the port.\n * @returns {fdom.Port} The port with that ID.\n */\nManager.prototype.getPort = function (portId) {\n  return this.hub.getDestination(this.controlFlows[portId]);\n};\n\n/**\n * Set up a port with the hub.\n * @method setup\n * @param {Port} port The port to register.\n */\nManager.prototype.setup = function (port) {\n  if (!port.id) {\n    this.debug.warn(\"Refusing to setup unidentified port \");\n    return false;\n  }\n\n  if (this.controlFlows[port.id]) {\n    this.debug.warn(\"Refusing to re-initialize port \" + port.id);\n    return false;\n  }\n\n  if (!this.config.global) {\n    this.once('config', this.setup.bind(this, port));\n    return;\n  }\n\n  this.hub.register(port);\n  var flow = this.hub.install(this, port.id, \"control\"),\n    reverse = this.hub.install(port, this.id, port.id);\n  this.controlFlows[port.id] = flow;\n  this.dataFlows[port.id] = [reverse];\n  this.reverseFlowMap[flow] = reverse;\n  this.reverseFlowMap[reverse] = flow;\n\n  if (port.lineage) {\n    this.emit('moduleAdd', {id: port.id, lineage: port.lineage});\n  }\n  \n  this.hub.onMessage(flow, {\n    type: 'setup',\n    channel: reverse,\n    config: this.config\n  });\n\n  return true;\n};\n\n/**\n * Tear down a port on the hub, or the full local hub.\n * @method destroy\n * @apram {Port?} port The port to unregister.\n */\nManager.prototype.destroy = function (port) {\n  if (!port) {\n    // Tear down everything!\n    util.eachProp(this.controlFlows, function (flow) {\n      this.hub.onMessage(flow, {\n        type: 'close'\n      });\n    }.bind(this));\n    this.hub.teardown();\n    return;\n  }\n\n  if (!port.id) {\n    this.debug.warn(\"Unable to tear down unidentified port\");\n    return false;\n  }\n\n  if (port.lineage) {\n    this.emit('moduleRemove', {id: port.id, lineage: port.lineage});\n  }\n\n  // Remove the port.\n  delete this.controlFlows[port.id];\n\n  // Remove associated links.\n  var i;\n  for (i = this.dataFlows[port.id].length - 1; i >= 0; i -= 1) {\n    this.removeLink(port, this.dataFlows[port.id][i]);\n  }\n\n  // Remove the port.\n  delete this.dataFlows[port.id];\n  this.hub.deregister(port);\n};\n\n/**\n * Create a link between two ports.  Links are created in both directions,\n * and a message with those capabilities is sent to the source port.\n * @method createLink\n * @param {Port} port The source port.\n * @param {String} name The flow for messages from destination to port.\n * @param {Port} destination The destination port.\n * @param {String} [destName] The flow name for messages to the destination.\n * @param {Boolean} [toDest] Tell the destination about the link.\n */\nManager.prototype.createLink = function (port, name, destination, destName,\n                                         toDest) {\n  if (!this.config.global) {\n    this.once('config',\n      this.createLink.bind(this, port, name, destination, destName));\n    return;\n  }\n  \n  if (!this.controlFlows[port.id]) {\n    this.debug.warn('Unwilling to link from non-registered source.');\n    return;\n  }\n\n  if (!this.controlFlows[destination.id]) {\n    if (this.setup(destination) === false) {\n      this.debug.warn('Could not find or setup destination.');\n      return;\n    }\n  }\n  var quiet = destination.quiet || false,\n    outgoingName = destName || 'default',\n    outgoing = this.hub.install(port, destination.id, outgoingName, quiet),\n    reverse;\n\n  // Recover the port so that listeners are installed.\n  destination = this.hub.getDestination(outgoing);\n  reverse = this.hub.install(destination, port.id, name, quiet);\n\n  this.reverseFlowMap[outgoing] = reverse;\n  this.dataFlows[port.id].push(outgoing);\n  this.reverseFlowMap[reverse] = outgoing;\n  this.dataFlows[destination.id].push(reverse);\n\n  if (toDest) {\n    this.hub.onMessage(this.controlFlows[destination.id], {\n      type: 'createLink',\n      name: outgoingName,\n      channel: reverse,\n      reverse: outgoing\n    });\n  } else {\n    this.hub.onMessage(this.controlFlows[port.id], {\n      name: name,\n      type: 'createLink',\n      channel: outgoing,\n      reverse: reverse\n    });\n  }\n};\n\n/**\n * Remove a link between to ports. The reverse link will also be removed.\n * @method removeLink\n * @param {Port} port The source port.\n * @param {String} name The flow to be removed.\n */\nManager.prototype.removeLink = function (port, name) {\n  var reverse = this.hub.getDestination(name),\n    rflow = this.reverseFlowMap[name],\n    i;\n\n  if (!reverse || !rflow) {\n    this.debug.warn(\"Could not find metadata to remove flow: \" + name);\n    return;\n  }\n\n  if (this.hub.getDestination(rflow).id !== port.id) {\n    this.debug.warn(\"Source port does not own flow \" + name);\n    return;\n  }\n\n  // Notify ports that a channel is closing.\n  i = this.controlFlows[port.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: name\n    });\n  }\n  i = this.controlFlows[reverse.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: rflow\n    });\n  }\n\n  // Uninstall the channel.\n  this.hub.uninstall(port, name);\n  this.hub.uninstall(reverse, rflow);\n\n  delete this.reverseFlowMap[name];\n  delete this.reverseFlowMap[rflow];\n  this.forgetFlow(reverse.id, rflow);\n  this.forgetFlow(port.id, name);\n};\n\n/**\n * Forget the flow from id with a given name.\n * @method forgetFlow\n * @private\n * @param {String} id The port ID of the source.\n * @param {String} name The flow name.\n */\nManager.prototype.forgetFlow = function (id, name) {\n  var i;\n  if (this.dataFlows[id]) {\n    for (i = 0; i < this.dataFlows[id].length; i += 1) {\n      if (this.dataFlows[id][i] === name) {\n        this.dataFlows[id].splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Get the core freedom.js API active on the current hub.\n * @method getCore\n * @private\n * @param {Function} cb Callback to fire with the core object.\n */\nManager.prototype.getCore = function (cb) {\n  if (this.core) {\n    cb(this.core);\n  } else {\n    this.api.getCore('core', this).then(function (core) {\n      this.core = core.inst;\n      cb(this.core);\n    }.bind(this), function () {\n      cb(undefined);\n    });\n  }\n};\n\nmodule.exports = Manager;\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar Provider = require('./provider');\n\n/**\n * The external Port face of a module on a hub.\n * @class Module\n * @extends Port\n * @param {String} manifestURL The manifest this module loads.\n * @param {String[]} creator The lineage of creation for this module.\n * @param {Policy} Policy The policy loader for dependencies.\n * @constructor\n */\nvar Module = function (manifestURL, manifest, creator, policy) {\n  this.api = policy.api;\n  this.policy = policy;\n  this.resource = policy.resource;\n  this.debug = policy.debug;\n\n  this.config = {};\n\n  this.id = manifestURL + Math.random();\n  this.manifestId = manifestURL;\n  this.manifest = manifest;\n  this.lineage = [this.manifestId].concat(creator);\n\n  this.quiet = this.manifest.quiet || false;\n\n  this.externalPortMap = {};\n  this.internalPortMap = {};\n  this.dependantChannels = [];\n  this.started = false;\n\n  util.handleEvents(this);\n};\n\n/**\n * Receive a message for the Module.\n * @method onMessage\n * @param {String} flow The origin of the message.\n * @param {Object} message The message received.\n */\nModule.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (message.type === 'setup') {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.emit(this.controlChannel, {\n        type: 'Core Provider',\n        request: 'core'\n      });\n      this.start();\n      return;\n    } else if (message.type === 'createLink' && message.channel) {\n      this.debug.debug(this + 'got create link for ' + message.name);\n      this.externalPortMap[message.name] = message.channel;\n      if (this.internalPortMap[message.name] === undefined) {\n        this.internalPortMap[message.name] = false;\n      }\n      var msg = {\n        type: 'default channel announcement',\n        channel: message.reverse\n      };\n      if (this.manifest.dependencies &&\n          this.manifest.dependencies[message.name]) {\n        msg.api = this.manifest.dependencies[message.name].api;\n      }\n      this.emit(message.channel, msg);\n      return;\n    } else if (message.core) {\n      this.core = new message.core();\n      this.emit('core', message.core);\n      return;\n    } else if (message.type === 'close') {\n      // Closing channel.\n      if (!message.channel || message.channel === 'control') {\n        this.stop();\n      }\n      this.deregisterFlow(message.channel, false);\n    } else {\n      this.port.onMessage(flow, message);\n    }\n  } else {\n    if ((this.externalPortMap[flow] === false ||\n        !this.externalPortMap[flow]) && message.channel) {\n      this.debug.debug(this + 'handling channel announcement for ' + flow);\n      this.externalPortMap[flow] = message.channel;\n      if (this.internalPortMap[flow] === undefined) {\n        this.internalPortMap[flow] = false;\n\n        // New incoming connection attempts should get routed to modInternal.\n        if (this.manifest.provides && this.modInternal) {\n          this.port.onMessage(this.modInternal, {\n            type: 'Connection',\n            channel: flow,\n            api: message.api\n          });\n        } else if (this.manifest.provides) {\n          this.once('modInternal', function (flow, api) {\n            this.port.onMessage(this.modInternal, {\n              type: 'Connection',\n              channel: flow,\n              api: api\n            });\n          }.bind(this, flow, message.api));\n        // First connection retains legacy mapping as 'default'.\n        } else if (!this.externalPortMap['default'] && message.channel) {\n          this.externalPortMap['default'] = message.channel;\n          this.once('internalChannelReady', function (flow) {\n            this.internalPortMap[flow] = this.internalPortMap['default'];\n          }.bind(this, flow));\n        }\n      }\n      return;\n    } else if (!this.started) {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    } else {\n      if (this.internalPortMap[flow] === false) {\n        console.warn('waiting on internal channel for msg');\n        this.once('internalChannelReady', this.onMessage.bind(this, flow, message));\n      } else if (!this.internalPortMap[flow]) {\n        this.debug.error('Unexpected message from ' + flow);\n        return;\n      } else {\n        this.port.onMessage(this.internalPortMap[flow], message);\n      }\n    }\n  }\n};\n\n/**\n * Clean up after a flow which is no longer used / needed.\n * @method deregisterFLow\n * @param {String} flow The flow to remove mappings for.\n * @param {Boolean} internal If the flow name is the internal identifier.\n * @returns {Boolean} Whether the flow was successfully deregistered.\n * @private\n */\nModule.prototype.deregisterFlow = function (flow, internal) {\n  var key,\n    map = internal ? this.internalPortMap : this.externalPortMap;\n  // TODO: this is inefficient, but seems less confusing than a 3rd\n  // reverse lookup map.\n  for (key in map) {\n    if (map[key] === flow) {\n      if (internal) {\n        this.emit(this.controlChannel, {\n          type: 'Channel Teardown',\n          request: 'unlink',\n          to: this.externalPortMap[key]\n        });\n      } else if (this.port) {\n        this.port.onMessage('control', {\n          type: 'close',\n          channel: this.internalPortMap[key]\n        });\n      }\n      delete this.externalPortMap[key];\n      delete this.internalPortMap[key];\n\n      // When there are still non-dependant channels, keep running\n      for (key in this.externalPortMap) {\n        if (this.externalPortMap.hasOwnProperty(key)) {\n          if (this.dependantChannels.indexOf(key) < 0) {\n            return true;\n          }\n        }\n      }\n      // Otherwise shut down the module.\n      this.stop();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Attempt to start the module once the remote freedom context\n * exists.\n * @method start\n * @private\n */\nModule.prototype.start = function () {\n  var Port;\n  if (this.started || this.port) {\n    return false;\n  }\n  if (this.controlChannel) {\n    this.loadLinks();\n    Port = this.config.portType;\n    this.port = new Port(this.manifest.name, this.resource);\n    // Listen to all port messages.\n    this.port.on(this.emitMessage.bind(this));\n    this.port.addErrorHandler(function (err) {\n      this.debug.warn('Module Failed', err);\n      this.stop();\n    }.bind(this));\n    // Tell the local port to ask us for help.\n    this.port.onMessage('control', {\n      channel: 'control',\n      config: this.config\n    });\n\n    // Tell the remote location to delegate debugging.\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'debug'\n    });\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'core'\n    });\n    \n    // Tell the container to instantiate the counterpart to this external view.\n    this.port.onMessage('control', {\n      type: 'Environment Configuration',\n      request: 'environment',\n      name: 'ModInternal'\n    });\n  }\n};\n\n/**\n * Stop the module when it is no longer needed, and tear-down state.\n * @method stop\n * @private\n */\nModule.prototype.stop = function () {\n  if (!this.started) {\n    return;\n  }\n  this.emit('close');\n  if (this.port) {\n    this.port.off();\n    this.port.onMessage('control', {\n      type: 'close',\n      channel: 'control'\n    });\n    this.port.stop();\n    delete this.port;\n  }\n  delete this.policy;\n  this.started = false;\n};\n\n/**\n * Textual Description of the Port\n * @method toString\n * @return {String} The description of this Port.\n */\nModule.prototype.toString = function () {\n  return \"[Module \" + this.manifest.name + \"]\";\n};\n\n/**\n * Intercept messages as they arrive from the module,\n * mapping them between internal and external flow names.\n * @method emitMessage\n * @param {String} name The destination the module wants to send to.\n * @param {Object} message The message to send.\n * @private\n */\nModule.prototype.emitMessage = function (name, message) {\n  if (this.internalPortMap[name] === false && message.channel) {\n    this.internalPortMap[name] = message.channel;\n    this.emit('internalChannelReady');\n    return;\n  }\n  // Terminate debug redirection requested in start().\n  if (name === 'control') {\n    if (message.flow === 'debug' && message.message) {\n      this.debug.format(message.message.severity,\n          message.message.source || this.toString(),\n          message.message.msg);\n    } else if (message.flow === 'core' && message.message) {\n      if (!this.core) {\n        this.once('core', this.emitMessage.bind(this, name, message));\n        return;\n      }\n      if (message.message.type === 'register') {\n        message.message.reply = this.port.onMessage.bind(this.port, 'control');\n        this.externalPortMap[message.message.id] = false;\n      }\n      this.core.onMessage(this, message.message);\n    } else if (message.name === 'ModInternal' && !this.modInternal) {\n      this.modInternal = message.channel;\n      this.port.onMessage(this.modInternal, {\n        type: 'Initialization',\n        id: this.manifestId,\n        appId: this.id,\n        manifest: this.manifest,\n        lineage: this.lineage,\n        channel: message.reverse\n      });\n      this.emit('modInternal');\n    } else if (message.type === 'createLink') {\n      this.internalPortMap[message.name] = message.channel;\n      this.port.onMessage(message.channel, {\n        type: 'channel announcement',\n        channel: message.reverse\n      });\n      this.emit('internalChannelReady');\n    } else if (message.type === 'close') {\n      this.deregisterFlow(message.channel, true);\n    }\n  } else if (name === 'ModInternal' && message.type === 'ready' && !this.started) {\n    this.started = true;\n    this.emit('start');\n  } else if (name === 'ModInternal' && message.type === 'resolve') {\n    this.resource.get(this.manifestId, message.data).then(function (id, data) {\n      this.port.onMessage(this.modInternal, {\n        type: 'resolve response',\n        id: id,\n        data: data\n      });\n    }.bind(this, message.id), function () {\n      this.debug.warn('Error Resolving URL for Module.');\n    }.bind(this));\n  } else {\n    this.emit(this.externalPortMap[name], message);\n  }\n  return false;\n};\n\n/**\n * Request the external routes used by this module.\n * @method loadLinks\n * @private\n */\nModule.prototype.loadLinks = function () {\n  var i, channels = ['default'], name, dep;\n\n  if (this.manifest.permissions) {\n    for (i = 0; i < this.manifest.permissions.length; i += 1) {\n      name = this.manifest.permissions[i];\n      if (channels.indexOf(name) < 0 && name.indexOf('core.') === 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n        dep = new Provider(this.api.get(name).definition, this.debug);\n        this.api.provideCore(name, dep, this);\n\n        this.emit(this.controlChannel, {\n          type: 'Core Link to ' + name,\n          request: 'link',\n          name: name,\n          to: dep\n        });\n      }\n    }\n  }\n  if (this.manifest.dependencies) {\n    util.eachProp(this.manifest.dependencies, function (desc, name) {\n      if (channels.indexOf(name) < 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n      }\n      this.resource.get(this.manifestId, desc.url).then(function (url) {\n        this.policy.get(this.lineage, url).then(function (dep) {\n          this.updateEnv(name, dep.manifest);\n          this.emit(this.controlChannel, {\n            type: 'Link to ' + name,\n            request: 'link',\n            name: name,\n            overrideDest: name + '.' + this.id,\n            to: dep\n          });\n        }.bind(this), function (err) {\n          this.debug.warn('failed to load dep: ', name, err);\n        }.bind(this));\n      }.bind(this), function (err) {\n        this.debug.warn('failed to load dep: ', name, err);\n      }.bind(this));\n    }.bind(this));\n  }\n  // Note that messages can be synchronous, so some ports may already be bound.\n  for (i = 0; i < channels.length; i += 1) {\n    this.externalPortMap[channels[i]] = this.externalPortMap[channels[i]] || false;\n    this.internalPortMap[channels[i]] = false;\n  }\n};\n\n/**\n * Update the module environment with information about a dependent manifest.\n * @method updateEnv\n * @param {String} dep The dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModule.prototype.updateEnv = function (dep, manifest) {\n  if (!manifest) {\n    return;\n  }\n  if (!this.modInternal) {\n    this.once('modInternal', this.updateEnv.bind(this, dep, manifest));\n    return;\n  }\n  \n  var metadata;\n\n  // Decide if/what other properties should be exported.\n  // Keep in sync with ModuleInternal.updateEnv\n  metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description,\n    api: manifest.api\n  };\n  \n  this.port.onMessage(this.modInternal, {\n    type: 'manifest',\n    name: dep,\n    manifest: metadata\n  });\n};\n\nmodule.exports = Module;\n","/*jslint indent:2, node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar Provider = require('./provider');\nvar ProxyBinder = require('./proxybinder');\nvar util = require('./util');\n\n/**\n * The internal logic for module setup, which makes sure the public\n * facing exports have appropriate properties, and load user scripts.\n * @class ModuleInternal\n * @extends Port\n * @param {Port} manager The manager in this module to use for routing setup.\n * @constructor\n */\nvar ModuleInternal = function (manager) {\n  this.config = {};\n  this.manager = manager;\n  this.debug = manager.debug;\n  this.binder = new ProxyBinder(this.manager);\n  this.api = this.manager.api;\n  this.manifests = {};\n  this.providers = {};\n  \n  this.id = 'ModuleInternal';\n  this.pendingPorts = 0;\n  this.requests = {};\n\n  util.handleEvents(this);\n};\n\n/**\n * Message handler for this port.\n * This port only handles two messages:\n * The first is its setup from the manager, which it uses for configuration.\n * The second is from the module controller (fdom.port.Module), which provides\n * the manifest info for the module.\n * @method onMessage\n * @param {String} flow The detination of the message.\n * @param {Object} message The message.\n */\nModuleInternal.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n    }\n  } else if (flow === 'default' && !this.appId) {\n    // Recover the ID of this module:\n    this.port = this.manager.hub.getDestination(message.channel);\n    this.externalChannel = message.channel;\n    this.appId = message.appId;\n    this.lineage = message.lineage;\n\n    var objects = this.mapProxies(message.manifest);\n\n    this.generateEnv(message.manifest, objects).then(function () {\n      return this.loadLinks(objects);\n    }.bind(this)).then(this.loadScripts.bind(this, message.id,\n        message.manifest.app.script)).then(null, function (err) {\n      this.debug.error('Could not set up module ' + this.appId + ': ', err);\n    }.bind(this));\n  } else if (flow === 'default' && this.requests[message.id]) {\n    this.requests[message.id](message.data);\n    delete this.requests[message.id];\n  } else if (flow === 'default' && message.type === 'manifest') {\n    this.emit('manifest', message);\n    this.updateManifest(message.name, message.manifest);\n  } else if (flow === 'default' && message.type === 'Connection') {\n    // Multiple connections can be made to the default provider.\n    if (message.api && this.providers[message.api]) {\n      this.manager.createLink(this.providers[message.api], message.channel,\n                             this.port, message.channel);\n    } else if (this.defaultPort &&\n               (message.api === this.defaultPort.api || !message.api)) {\n      this.manager.createLink(this.defaultPort, message.channel,\n                              this.port, message.channel);\n    } else {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\n/**\n * Get a textual description of this Port.\n * @method toString\n * @return {String} a description of this Port.\n */\nModuleInternal.prototype.toString = function () {\n  return \"[Environment Helper]\";\n};\n\n/**\n * Generate an externaly visisble namespace\n * @method generateEnv\n * @param {Object} manifest The manifest of the module.\n * @param {Object[]} items Other interfaces to load.\n * @returns {Promise} A promise when the external namespace is visible.\n * @private\n */\nModuleInternal.prototype.generateEnv = function (manifest, items) {\n  return this.binder.bindDefault(this.port, this.api, manifest, true).then(\n    function (binding) {\n      var i = 0;\n      binding.port.api = binding.external.api;\n      this.defaultPort = binding.port;\n      if (binding.external.api) {\n        for (i = 0; i < items.length; i += 1) {\n          if (items[i].name === binding.external.api && items[i].def.provides) {\n            items.splice(i, 1);\n            break;\n          }\n        }\n      }\n      this.config.global.freedom = binding.external;\n    }.bind(this)\n  );\n};\n\n/**\n * Attach a proxy to the externally visible namespace.\n * @method attach\n * @param {String} name The name of the proxy.\n * @param {Boolean} provides If this proxy is a provider.\n * @param {ProxyInterface} proxy The proxy to attach.\n * @param {String} api The API the proxy implements.\n * @private.\n */\nModuleInternal.prototype.attach = function (name, provides, proxy) {\n  var exp = this.config.global.freedom;\n  \n  if (provides) {\n    this.providers[name] = proxy.port;\n  }\n\n  if (!exp[name]) {\n    exp[name] = proxy.external;\n    if (this.manifests[name]) {\n      exp[name].manifest = this.manifests[name];\n    }\n  }\n\n  this.pendingPorts -= 1;\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n};\n\n/**\n * Request a set of proxy interfaces, and bind them to the external\n * namespace.\n * @method loadLinks\n * @param {Object[]} items Descriptors of the proxy ports to load.\n * @private\n * @returns {Promise} Promise for when all links are loaded.\n */\n//TODO(willscott): promise should be chained, rather than going through events.\nModuleInternal.prototype.loadLinks = function (items) {\n  var i, proxy, provider, core,\n    manifestPredicate = function (name, flow, msg) {\n      return flow === 'manifest' && msg.name === name;\n    },\n    onManifest = function (item, msg) {\n      var definition = {\n        name: item.api\n      };\n      if (!msg.manifest.api || !msg.manifest.api[item.api]) {\n        definition.definition = null;\n      } else {\n        definition.definition = msg.manifest.api[item.api];\n      }\n      this.binder.getExternal(this.port, item.name, definition).then(\n        this.attach.bind(this, item.name, false)\n      );\n    }.bind(this),\n    promise = new PromiseCompat(function (resolve, reject) {\n      this.once('start', resolve);\n    }.bind(this));\n\n  for (i = 0; i < items.length; i += 1) {\n    if (items[i].api && !items[i].def) {\n      if (this.manifests[items[i].name]) {\n        onManifest(items[i], {\n          manifest: this.manifests[items[i].name]\n        });\n      } else {\n        this.once(manifestPredicate.bind({}, items[i].name),\n                  onManifest.bind(this, items[i]));\n      }\n    } else {\n      this.binder.getExternal(this.port, items[i].name, items[i].def).then(\n        this.attach.bind(this, items[i].name, items[i].def &&\n                         items[i].def.provides)\n      );\n    }\n    this.pendingPorts += 1;\n  }\n  \n  // Allow resolution of files by parent.\n  this.manager.resource.addResolver(function (manifest, url, resolve) {\n    var id = util.getId();\n    this.requests[id] = resolve;\n    this.emit(this.externalChannel, {\n      type: 'resolve',\n      id: id,\n      data: url\n    });\n    return true;\n  }.bind(this));\n\n  // Attach Core.\n  this.pendingPorts += 1;\n\n  core = this.api.get('core').definition;\n  provider = new Provider(core, this.debug);\n  this.manager.getCore(function (CoreProv) {\n    new CoreProv(this.manager).setId(this.lineage);\n    provider.getInterface().provideAsynchronous(CoreProv);\n  }.bind(this));\n\n  this.emit(this.controlChannel, {\n    type: 'Link to core',\n    request: 'link',\n    name: 'core',\n    to: provider\n  });\n  \n  this.binder.getExternal(provider, 'default', {\n    name: 'core',\n    definition: core\n  }).then(\n    this.attach.bind(this, 'core', false)\n  );\n\n\n//  proxy = new Proxy(ApiInterface.bind({}, core), this.debug);\n//  this.manager.createLink(provider, 'default', proxy);\n//  this.attach('core', {port: pr, external: proxy});\n\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return promise;\n};\n\n/**\n * Update the exported manifest of a dependency.\n * Sets it internally if not yet exported, or attaches the property if it\n * is loaded after the module has started (we don't delay start to retreive\n * the manifest of the dependency.)\n * @method updateManifest\n * @param {String} name The Dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModuleInternal.prototype.updateManifest = function (name, manifest) {\n  var exp = this.config.global.freedom;\n\n  if (exp && exp[name]) {\n    exp[name].manifest = manifest;\n  } else {\n    this.manifests[name] = manifest;\n  }\n};\n\n/**\n * Determine which proxy ports should be exposed by this module.\n * @method mapProxies\n * @param {Object} manifest the module JSON manifest.\n * @return {Object[]} proxy descriptors defined in the manifest.\n */\nModuleInternal.prototype.mapProxies = function (manifest) {\n  var proxies = [], seen = ['core'], i, obj;\n  \n  if (manifest.permissions) {\n    for (i = 0; i < manifest.permissions.length; i += 1) {\n      obj = {\n        name: manifest.permissions[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (seen.indexOf(obj.name) < 0 && obj.def) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n  \n  if (manifest.dependencies) {\n    util.eachProp(manifest.dependencies, function (desc, name) {\n      obj = {\n        name: name,\n        api: desc.api\n      };\n      if (seen.indexOf(name) < 0) {\n        if (desc.api) {\n          obj.def = this.api.get(desc.api);\n        }\n        proxies.push(obj);\n        seen.push(name);\n      }\n    }.bind(this));\n  }\n  \n  if (manifest.provides) {\n    for (i = 0; i < manifest.provides.length; i += 1) {\n      obj = {\n        name: manifest.provides[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (obj.def) {\n        obj.def.provides = true;\n      } else if (manifest.api && manifest.api[obj.name]) {\n        obj.def = {\n          name: obj.name,\n          definition: manifest.api[obj.name],\n          provides: true\n        };\n      } else {\n        this.debug.warn('Module will not provide \"' + obj.name +\n          '\", since no declaration can be found.');\n        /*jslint continue:true*/\n        continue;\n      }\n      /*jslint continue:false*/\n      if (seen.indexOf(obj.name) < 0) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  return proxies;\n};\n\n/**\n * Load external scripts into this namespace.\n * @method loadScripts\n * @param {String} from The URL of this modules's manifest.\n * @param {String[]} scripts The URLs of the scripts to load.\n */\nModuleInternal.prototype.loadScripts = function (from, scripts) {\n  // TODO(salomegeo): add a test for failure.\n  var importer = function (script, resolve, reject) {\n    try {\n      this.config.global.importScripts(script);\n      resolve(true);\n    } catch (e) {\n      reject(e);\n    }\n  }.bind(this),\n    scripts_count,\n    load;\n  if (typeof scripts === 'string') {\n    scripts_count = 1;\n  } else {\n    scripts_count = scripts.length;\n  }\n\n  load = function (next) {\n    if (next === scripts_count) {\n      this.emit(this.externalChannel, {\n        type: \"ready\"\n      });\n      return;\n    }\n\n    var script;\n    if (typeof scripts === 'string') {\n      script = scripts;\n    } else {\n      script = scripts[next];\n    }\n\n    this.manager.resource.get(from, script).then(function (url) {\n      this.tryLoad(importer, url).then(function () {\n        load(next + 1);\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n\n\n  if (!this.config.global.importScripts) {\n    importer = function (url, resolve, reject) {\n      var script = this.config.global.document.createElement('script');\n      script.src = url;\n      script.addEventListener('load', resolve, true);\n      this.config.global.document.body.appendChild(script);\n    }.bind(this);\n  }\n\n  load(0);\n};\n\n/**\n * Attempt to load resolved scripts into the namespace.\n * @method tryLoad\n * @private\n * @param {Function} importer The actual import function\n * @param {String[]} urls The resoved URLs to load.\n * @returns {Promise} completion of load\n */\nModuleInternal.prototype.tryLoad = function (importer, url) {\n  return new PromiseCompat(importer.bind({}, url)).then(function (val) {\n    return val;\n  }, function (e) {\n    this.debug.warn(e.stack);\n    this.debug.error(\"Error loading \" + url, e);\n    this.debug.error(\"If the stack trace is not useful, see https://\" +\n        \"github.com/freedomjs/freedom/wiki/Debugging-Script-Parse-Errors\");\n  }.bind(this));\n};\n\nmodule.exports = ModuleInternal;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\nvar Module = require('./module');\nvar util = require('./util');\n\n/**\n * The Policy registry for freedom.js.  Used to look up modules and provide\n * migration and coallesing of execution.\n * @Class Policy\n * @param {Manager} manager The manager of the active runtime.\n * @param {Resource} resource The resource loader of the active runtime.\n * @param {Object} config The local config.\n * @constructor\n */\nvar Policy = function(manager, resource, config) {\n  this.api = manager.api;\n  this.debug = manager.debug;\n  this.location = config.location;\n  this.resource = resource;\n\n  this.config = config;\n  this.runtimes = [];\n  this.policies = [];\n  this.pending = {};\n  util.handleEvents(this);\n\n  this.add(manager, config.policy);\n  this.runtimes[0].local = true;\n};\n\n/**\n * The policy a runtime is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultPolicy\n */\nPolicy.prototype.defaultPolicy = {\n  background: false, // Can this runtime run 'background' modules?\n  interactive: true // Is there a view associated with this runtime?\n  // TODO: remaining runtime policy.\n};\n\n/**\n * The constraints a code modules is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultConstraints\n */\nPolicy.prototype.defaultConstraints = {\n  isolation: \"always\", // values: always, app, never\n  placement: \"local\" // values: local, stable, redundant\n  // TODO: remaining constraints, express platform-specific dependencies.\n};\n\n/**\n * Resolve a module from its canonical URL.\n * Reponds with the promise of a port representing the module, \n * @method get\n * @param {String[]} lineage The lineage of the requesting module.\n * @param {String} id The canonical ID of the module to get.\n * @returns {Promise} A promise for the local port towards the module.\n */\nPolicy.prototype.get = function(lineage, id) {\n  \n  // Make sure that a module isn't getting located twice at the same time.\n  // This is resolved by delaying if it until we see it in a 'moduleAdd' event.\n  if (this.pending[id]) {\n    return new PromiseCompat(function (resolve, reject) {\n      this.once('placed', function(l, i) {\n        this.get(l, i).then(resolve, reject);\n      }.bind(this, lineage, id));\n    }.bind(this));\n  } else {\n    this.pending[id] = true;\n  }\n\n  return this.loadManifest(id).then(function(manifest) {\n    var constraints = this.overlay(this.defaultConstraints, manifest.constraints),\n        runtime = this.findDestination(lineage, id, constraints),\n        portId;\n    if (runtime.local) {\n      portId = this.isRunning(runtime, id, lineage,\n                             constraints.isolation !== 'never');\n      if(constraints.isolation !== 'always' && portId) {\n        this.debug.info('Reused port ' + portId);\n        delete this.pending[id];\n        this.emit('placed');\n        return runtime.manager.getPort(portId);\n      } else {\n        return new Module(id, manifest, lineage, this);\n      }\n    } else {\n      // TODO: Create a port to go to the remote runtime.\n      this.debug.error('Unexpected location selected for module placement');\n      return false;\n    }\n  }.bind(this), function(err) {\n    this.debug.error('Policy Error Resolving ' + id, err);\n    throw(err);\n  }.bind(this));\n};\n\n/**\n * Find the runtime destination for a module given its constraints and the\n * module creating it.\n * @method findDestination\n * @param {String[]} lineage The identity of the module creating this module.\n * @param {String] id The canonical url of the module\n * @param {Object} constraints Constraints for the module.\n * @returns {Object} The element of this.runtimes where the module should run.\n */\nPolicy.prototype.findDestination = function(lineage, id, constraints) {\n  var i;\n\n  // Step 1: if an instance already exists, the m\n  if (constraints.isolation !== 'always') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.isRunning(this.runtimes[i], id, lineage,\n                         constraints.isolation !== 'never')) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 2: if the module wants stability, it may need to be remote.\n  if (constraints.placement === 'local') {\n    return this.runtimes[0];\n  } else if (constraints.placement === 'stable') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.policies[i].background) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 3: if the module needs longevity / interactivity, it may want to be remote.\n  return this.runtimes[0];\n};\n\n/**\n * Determine if a known runtime is running an appropriate instance of a module.\n * @method isRunning\n * @param {Object} runtime The runtime to check.\n * @param {String} id The module to look for.\n * @param {String[]} from The identifier of the requesting module.\n * @param {Boolean} fullMatch If the module needs to be in the same app.\n * @returns {String|Boolean} The Module id if it is running, or false if not.\n */\nPolicy.prototype.isRunning = function(runtime, id, from, fullMatch) {\n  var i = 0, j = 0, okay;\n  for (i = 0; i < runtime.modules.length; i += 1) {\n    if (fullMatch && runtime.modules[i].length === from.length + 1) {\n      okay = true;\n      for (j = 0; j < from.length; j += 1) {\n        if (runtime.modules[i][j + 1].indexOf(from[j]) !== 0) {\n          okay = false;\n          break;\n        }\n      }\n      if (runtime.modules[i][0].indexOf(id) !== 0) {\n        okay = false;\n      }\n\n      if (okay) {\n        return runtime.modules[i][0];\n      }\n    } else if (!fullMatch && runtime.modules[i][0].indexOf(id) === 0) {\n      return runtime.modules[i][0];\n    }\n  }\n  return false;\n};\n\n/**\n * Get a promise of the manifest for a module ID.\n * @method loadManifest\n * @param {String} manifest The canonical ID of the manifest\n * @returns {Promise} Promise for the json contents of the manifest.\n */\nPolicy.prototype.loadManifest = function(manifest) {\n  return this.resource.getContents(manifest).then(function(data) {\n    var resp = {};\n    try {\n      return JSON.parse(data);\n    } catch(err) {\n      this.debug.error(\"Failed to load \" + manifest + \": \" + err);\n      throw new Error(\"No Manifest Available\");\n    }\n  }.bind(this));\n};\n\n/**\n * Add a runtime to keep track of in this policy.\n * @method add\n * @param {fdom.port} port The port to use for module lifetime info\n * @param {Object} policy The policy of the runtime.\n */\nPolicy.prototype.add = function(port, policy) {\n  var runtime = {\n    manager: port,\n    modules: []\n  };\n  this.runtimes.push(runtime);\n  this.policies.push(this.overlay(this.defaultPolicy, policy));\n\n  port.on('moduleAdd', function(runtime, info) {\n    var lineage = [];\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    runtime.modules.push(lineage);\n    if (this.pending[info.lineage[0]]) {\n      delete this.pending[info.lineage[0]];\n      this.emit('placed');\n    }\n  }.bind(this, runtime));\n  port.on('moduleRemove', function(runtime, info) {\n    var lineage = [], i, modFingerprint;\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    modFingerprint = lineage.toString();\n\n    for (i = 0; i < runtime.modules.length; i += 1) {\n      if (runtime.modules[i].toString() === modFingerprint) {\n        runtime.modules.splice(i, 1);\n        return;\n      }\n    }\n    this.debug.warn('Unknown module to remove: ', info.id);\n  }.bind(this, runtime));\n};\n\n/**\n * Overlay a specific policy or constraint instance on default settings.\n * TODO: consider making static.\n * @method overlay\n * @private\n * @param {Object} base The default object\n * @param {Object} overlay The superceeding object\n * @returns {Object} A new object with base parameters when not set in overlay.\n */\nPolicy.prototype.overlay = function(base, overlay) {\n  var ret = {};\n\n  util.mixin(ret, base);\n  if (overlay) {\n    util.mixin(ret, overlay, true);\n  }\n  return ret;\n};\n\nmodule.exports = Policy;\n","/*jslint indent:2, node:true, sloppy:true, browser:true */\nvar Consumer = require('./consumer');\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable provider.\n * @class Provider\n * @implements Port\n * @uses handleEvents\n * @param {Object} def The interface of the provider.\n * @param {Debug} debug The debugger to use for logging.\n * @contructor\n */\nvar Provider = function (def, debug) {\n  this.id = Consumer.nextId();\n  util.handleEvents(this);\n  this.debug = debug;\n  \n  this.definition = def;\n  this.mode = Provider.mode.synchronous;\n  this.channels = {};\n  this.iface = null;\n  this.closeHandlers = {};\n  this.providerCls = null;\n\n  this.ifaces = {};\n  this.emits = {};\n};\n\n/**\n * Provider modes of operation.\n * @property mode\n * @static\n * @type number\n */\nProvider.mode = {\n  synchronous: 0,\n  asynchronous: 1,\n  promises: 2\n};\n\n/**\n * Receive external messages for the provider.\n * @method onMessage\n * @param {String} source the source identifier of the message.\n * @param {Object} message The received message.\n */\nProvider.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.channels[message.name] = message.channel;\n    this.emit(message.channel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    if (message.channel === this.controlChannel) {\n      delete this.controlChannel;\n    }\n    this.close();\n  } else {\n    if (!this.channels[source] && message.channel) {\n      this.channels[source] = message.channel;\n      this.emit('start');\n      return;\n    } else if (!this.channels[source]) {\n      this.debug.warn('Message from unconfigured source: ' + source);\n      return;\n    }\n\n    if (message.type === 'close' && message.to) {\n      this.teardown(source, message.to);\n    } else if (message.to && this.emits[source] &&\n               this.emits[source][message.to]) {\n      message.message.to = message.to;\n      this.emits[source][message.to](message.message);\n    } else if (message.to && message.message &&\n        message.message.type === 'construct') {\n      var args = Consumer.portableToMessage(\n          (this.definition.constructor && this.definition.constructor.value) ?\n              this.definition.constructor.value : [],\n          message.message,\n          this.debug\n        ),\n        instance;\n      if (!this.ifaces[source]) {\n        this.ifaces[source] = {};\n        this.emits[source] = {};\n      }\n      this.ifaces[source][message.to] = true;\n      instance = this.getProvider(source, message.to, args);\n      // don't save a reference to instance if it closed itself already.\n      if (this.ifaces[source] &&\n          this.ifaces[source][message.to]) {\n        this.ifaces[source][message.to] = instance.instance;\n        this.emits[source][message.to] = instance.onmsg;\n      }\n    } else {\n      this.debug.warn(this.toString() + ' dropping message ' +\n          JSON.stringify(message));\n    }\n  }\n};\n\n/**\n * Close / teardown the flow this provider terminates.\n * @method close\n */\nProvider.prototype.close = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Provider Closing',\n      request: 'close'\n    });\n    delete this.controlChannel;\n  }\n  this.emit('close');\n\n  // Release references.\n  delete this.iface;\n  delete this.providerCls;\n  this.ifaces = {};\n  this.emits = {};\n  this.emitChannel = null;\n};\n\n/**\n * Teardown a single instance of an object fulfilling this provider.\n * @method teardown\n * @param {String} source The consumer source of the instance.\n * @param {String} id The id of the instance to tear down.\n */\nProvider.prototype.teardown = function (source, id) {\n  // Ignore teardown of non-existant ids.\n  if (!this.ifaces[source]) {\n    return;\n  }\n\n  delete this.ifaces[source][id];\n  delete this.emits[source][id];\n  if (this.closeHandlers[source] && this.closeHandlers[source][id]) {\n    util.eachProp(this.closeHandlers[source][id], function (prop) {\n      prop();\n    });\n    delete this.closeHandlers[source][id];\n  }\n};\n\n/**\n * Get an interface to expose externally representing this port.\n * Providers are registered with the port using either\n * provideSynchronous or provideAsynchronous depending on the desired\n * return interface.\n * @method getInterface\n * @return {Object} The external interface of this Provider.\n */\nProvider.prototype.getInterface = function () {\n  if (this.iface) {\n    return this.iface;\n  } else {\n    this.iface = {\n      provideSynchronous: function (prov) {\n        this.providerCls = prov;\n        this.mode = Provider.mode.synchronous;\n      }.bind(this),\n      provideAsynchronous: function (prov) {\n        this.providerCls = prov;\n        this.mode = Provider.mode.asynchronous;\n      }.bind(this),\n      providePromises: function (prov) {\n        this.providerCls = prov;\n        this.mode = Provider.mode.promises;\n      }.bind(this)\n    };\n\n    util.eachProp(this.definition, function (prop, name) {\n      switch (prop.type) {\n      case \"constant\":\n        Object.defineProperty(this.iface, name, {\n          value: Consumer.recursiveFreezeObject(prop.value),\n          writable: false\n        });\n        break;\n      }\n    }.bind(this));\n\n    return this.iface;\n  }\n};\n\n/**\n * Create a function that can be used to get interfaces from this provider from\n * a user-visible point.\n * @method getProxyInterface\n */\nProvider.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    return p.getInterface();\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (ids, source) {\n        util.eachProp(ids, function (candidate, id) {\n          if (candidate === iface) {\n            this.teardown(source, id);\n            this.emit(this.channels[source], {\n              type: 'close',\n              to: id\n            });\n            return true;\n          }\n        }.bind(this));\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.close();\n    }\n  }.bind(this);\n\n  func.onClose = function (iface, handler) {\n    // Listen to the channel directly.\n    if (typeof iface === 'function' && handler === undefined) {\n      this.once('close', iface);\n      return;\n    }\n\n    util.eachProp(this.ifaces, function (ids, source) {\n      util.eachProp(ids, function (candidate, id) {\n        if (candidate === iface) {\n          if (!this.closeHandlers[source]) {\n            this.closeHandlers[source] = {};\n          }\n          if (!this.closeHandlers[source][id]) {\n            this.closeHandlers[source][id] = [];\n          }\n          this.closeHandlers[source][id].push(handler);\n          return true;\n        }\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n  return func;\n};\n\n/**\n * Get a new instance of the registered provider.\n * @method getProvider\n * @param {String} source The port this instance is interactign with.\n * @param {String} identifier the messagable address for this provider.\n * @param {Array} args Constructor arguments for the provider.\n * @return {Function} A function to send messages to the provider.\n */\nProvider.prototype.getProvider = function (source, identifier, args) {\n  if (!this.providerCls) {\n    this.debug.error('Cannot instantiate provider, since it is not provided');\n    return {instance: undefined, onmsg: undefined};\n  }\n\n  var events = {},\n    dispatchEvent,\n    BoundClass,\n    instance;\n\n  util.eachProp(this.definition, function (prop, name) {\n    if (prop.type === 'event') {\n      events[name] = prop;\n    }\n  });\n\n  dispatchEvent = function (src, ev, id, name, value) {\n    if (ev[name]) {\n      var streams = Consumer.messageToPortable(ev[name].value, value,\n                                                   this.debug);\n      this.emit(this.channels[src], {\n        type: 'message',\n        to: id,\n        message: {\n          name: name,\n          type: 'event',\n          text: streams.text,\n          binary: streams.binary\n        }\n      });\n    }\n  }.bind(this, source, events, identifier);\n\n  // this is all to say: new providerCls(dispatchEvent, args[0], args[1],...)\n  BoundClass = this.providerCls.bind.apply(this.providerCls,\n      [this.providerCls, dispatchEvent].concat(args || []));\n  instance = new BoundClass();\n\n  return {\n    instance: instance,\n    onmsg: function (port, src, msg) {\n      if (msg.action === 'method') {\n        if (typeof this[msg.type] !== 'function') {\n          port.debug.warn(\"Provider does not implement \" + msg.type + \"()!\");\n          return;\n        }\n        var prop = port.definition[msg.type],\n          debug = port.debug,\n          args = Consumer.portableToMessage(prop.value, msg, debug),\n          ret = function (src, msg, prop, resolve, reject) {\n            var streams = Consumer.messageToPortable(prop.ret, resolve,\n                                                         debug);\n            this.emit(this.channels[src], {\n              type: 'method',\n              to: msg.to,\n              message: {\n                to: msg.to,\n                type: 'method',\n                reqId: msg.reqId,\n                name: msg.type,\n                text: streams.text,\n                binary: streams.binary,\n                error: reject\n              }\n            });\n          }.bind(port, src, msg, prop);\n        if (!Array.isArray(args)) {\n          args = [args];\n        }\n        if (port.mode === Provider.mode.synchronous) {\n          try {\n            ret(this[msg.type].apply(this, args));\n          } catch (e) {\n            ret(undefined, e.message);\n          }\n        } else if (port.mode === Provider.mode.asynchronous) {\n          this[msg.type].apply(instance, args.concat(ret));\n        } else if (port.mode === Provider.mode.promises) {\n          this[msg.type].apply(this, args).then(ret, ret.bind({}, undefined));\n        }\n      }\n    }.bind(instance, this, source)\n  };\n};\n\n/**\n * Get a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nProvider.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Provider \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Provider]\";\n  }\n};\n\nmodule.exports = Provider;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('../util');\nvar Consumer = require('../consumer');\n\nvar ApiInterface = function(def, onMsg, emit, debug) {\n  var inflight = {},\n      events = null,\n      emitter = null,\n      reqId = 0,\n      args = arguments;\n\n  util.eachProp(def, function(prop, name) {\n    switch(prop.type) {\n    case 'method':\n      this[name] = function() {\n        // Note: inflight should be registered before message is passed\n        // in order to prepare for synchronous in-window pipes.\n        var thisReq = reqId,\n            promise = new PromiseCompat(function(resolve, reject) {\n              inflight[thisReq] = {\n                resolve:resolve,\n                reject:reject,\n                template: prop.ret\n              };\n            }),\n            streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        reqId += 1;\n        emit({\n          action: 'method',\n          type: name,\n          reqId: thisReq,\n          text: streams.text,\n          binary: streams.binary\n        });\n        return promise;\n      };\n      break;\n    case 'event':\n      if(!events) {\n        util.handleEvents(this);\n        emitter = this.emit;\n        delete this.emit;\n        events = {};\n      }\n      events[name] = prop;\n      break;\n    case 'constant':\n      Object.defineProperty(this, name, {\n        value: Consumer.recursiveFreezeObject(prop.value),\n        writable: false\n      });\n      break;\n    }\n  }.bind(this));\n\n  onMsg(this, function(type, msg) {\n    if (type === 'close') {\n      if (this.off) {\n        this.off();\n      }\n      util.eachProp(inflight, function (obj) {\n        obj.reject('closed');\n      });\n      inflight = {};\n      return;\n    }\n    if (!msg) {\n      return;\n    }\n    if (msg.type === 'method') {\n      if (inflight[msg.reqId]) {\n        var resolver = inflight[msg.reqId],\n            template = resolver.template;\n        delete inflight[msg.reqId];\n        if (msg.error) {\n          resolver.reject(msg.error);\n        } else {\n          resolver.resolve(Consumer.portableToMessage(template, msg, debug));\n        }\n      } else {\n        debug.error('Incoming message claimed to be an RPC ' +\n                         'returning for unregistered call', msg.reqId);\n      }\n    } else if (msg.type === 'event') {\n      if (events[msg.name]) {\n        emitter(msg.name, Consumer.portableToMessage(events[msg.name].value,\n                msg, debug));\n      }\n    }\n  }.bind(this));\n\n  args = Consumer.messageToPortable(\n      (def.constructor && def.constructor.value) ? def.constructor.value : [],\n      Array.prototype.slice.call(args, 4),\n      debug);\n\n  emit({\n    type: 'construct',\n    text: args.text,\n    binary: args.binary\n  });\n};\n\nmodule.exports = ApiInterface;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar util = require('../util');\n\nvar EventInterface = function(onMsg, emit, debug) {\n  util.handleEvents(this);\n  \n  onMsg(this, function(emit, type, msg) {\n    if (type === 'close') {\n      return;\n    }\n    emit(msg.type, msg.message);\n  }.bind(this, this.emit));\n\n  this.emit = function(emitter, type, msg) {\n    emitter({type: type, message: msg}, true);\n  }.bind({}, emit);\n};\n\nmodule.exports = EventInterface;\n","/*jslint indent:2, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar EventInterface = require('./proxy/eventInterface');\nvar Consumer = require('./consumer');\nvar Provider = require('./provider');\n\n/**\n * A Proxy Binder manages the external interface, and creates one of\n * the different types of objects exposed by freedom either as a global\n * within a worker / module context, or returned by an external call to\n * create a freedom runtime.\n * @Class ProxyBinder\n * @param {Manager} manager The manager for the active runtime.\n */\nvar ProxyBinder = function (manager) {\n  'use strict';\n  this.manager = manager;\n};\n\n/**\n * Create a proxy for a freedom port, and return it once loaded.\n * @method getExternal\n * @param {Port} port The port for the proxy to communicate with.\n * @param {String} name The name of the proxy.\n * @param {Object} [definition] The definition of the API to expose.\n * @param {String} definition.name The name of the API.\n * @param {Object} definition.definition The definition of the API.\n * @param {Boolean} definition.provides Whether this is a consumer or provider.\n * @returns {Promise} A promise for the active proxy interface.\n */\nProxyBinder.prototype.getExternal = function (port, name, definition) {\n  'use strict';\n  var proxy, api;\n  return new PromiseCompat(function (resolve, reject) {\n    if (definition) {\n      api = definition.name;\n      if (definition.provides) {\n        proxy = new Provider(definition.definition, this.manager.debug);\n      } else {\n        proxy = new Consumer(ApiInterface.bind({},\n            definition.definition),\n            this.manager.debug);\n      }\n    } else {\n      proxy = new Consumer(EventInterface, this.manager.debug);\n    }\n\n    proxy.once('start', function () {\n      var iface = proxy.getProxyInterface();\n      if (api) {\n        iface.api = api;\n      }\n      resolve({\n        port: proxy,\n        external: iface\n      });\n    });\n\n    this.manager.createLink(port, name, proxy);\n  }.bind(this));\n};\n\n/**\n * Bind the default proxy for a freedom port.\n * @method bindDefault\n * @param {Port} port The port for the proxy to communicate with.\n * @param {Api} api The API loader with API definitions.\n * @param {Object} manifest The manifest of the module to expose.\n * @param {Boolean} internal Whether the interface is for inside the module.\n * @returns {Promise} A promise for a proxy interface.\n * @private\n */\nProxyBinder.prototype.bindDefault = function (port, api, manifest, internal) {\n  'use strict';\n  var metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description\n  }, def;\n\n  if (manifest['default']) {\n    def = api.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      def = {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    if (internal && manifest.provides &&\n        manifest.provides.indexOf(manifest['default']) !== false) {\n      def.provides = true;\n    } else if (internal) {\n      api.debug.warn(\"default API not provided, \" +\n                     \"are you missing a provides key in your manifest?\");\n    }\n  }\n\n  return this.getExternal(port, 'default', def).then(\n    function (metadata, info) {\n      info.external.manifest = metadata;\n      return info;\n    }.bind(this, metadata)\n  );\n};\n\nmodule.exports = ProxyBinder;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('./util');\n\n/**\n * The Resource registry for FreeDOM.  Used to look up requested Resources,\n * and provide lookup and migration of resources.\n * @Class Resource\n * @param {Debug} debug The logger to use for debugging.\n * @constructor\n */\nvar Resource = function (debug) {\n  this.debug = debug;\n  this.files = {};\n  this.resolvers = [this.httpResolver, this.nullResolver];\n  this.contentRetrievers = {\n    'http': this.xhrRetriever,\n    'https': this.xhrRetriever,\n    'chrome-extension': this.xhrRetriever,\n    'resource': this.xhrRetriever,\n    'chrome': this.xhrRetriever,\n    'app': this.xhrRetriever,\n    'manifest': this.manifestRetriever\n  };\n};\n\n/**\n * Resolve a resurce URL requested from a module.\n * @method get\n * @param {String} manifest The canonical address of the module requesting.\n * @param {String} url The resource to get.\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.get = function (manifest, url) {\n  var key = JSON.stringify([manifest, url]);\n  \n  return new PromiseCompat(function (resolve, reject) {\n    if (this.files[key]) {\n      resolve(this.files[key]);\n    } else {\n      this.resolve(manifest, url).then(function (key, resolve, address) {\n        this.files[key] = address;\n        //fdom.debug.log('Resolved ' + key + ' to ' + address);\n        resolve(address);\n      }.bind(this, key, resolve), reject);\n    }\n  }.bind(this));\n};\n\n/**\n * Get the contents of a resource.\n * @method getContents\n * @param {String} url The resource to read.\n * @returns {Promise} A promise for the resource contents.\n */\nResource.prototype.getContents = function (url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var prop;\n    if (!url) {\n      this.debug.warn(\"Asked to get contents of undefined URL.\");\n      return reject();\n    }\n    for (prop in this.contentRetrievers) {\n      if (this.contentRetrievers.hasOwnProperty(prop)) {\n        if (url.indexOf(prop + \"://\") === 0) {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        } else if (url.indexOf(\"://\") === -1 && prop === \"null\") {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        }\n      }\n    }\n    reject();\n  }.bind(this));\n};\n\n/**\n * Return a promise that resolves when the first of an array of promises\n * resolves, or rejects after all promises reject. Can be thought of as\n * the missing 'Promise.any' - race is no good, since early rejections\n * preempt a subsequent resolution.\n * @private\n * @static\n * @method FirstPromise\n * @param {Promise[]} Promises to select from\n * @returns {Promise} Promise resolving with a value from arguments.\n */\nvar firstPromise = function(promises) {\n  return new PromiseCompat(function(resolve, reject) {\n    var errors = [];\n    promises.forEach(function(promise) {\n      promise.then(resolve, function(err) {\n        errors.push(err);\n        if (errors.length === promises.length) {\n          reject(errors);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Resolve a resource using known resolvers. Unlike get, resolve does\n * not cache resolved resources.\n * @method resolve\n * @private\n * @param {String} manifest The module requesting the resource.\n * @param {String} url The resource to resolve;\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.resolve = function (manifest, url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var promises = [];\n    if (url === undefined) {\n      return reject();\n    }\n    util.eachReverse(this.resolvers, function (resolver) {\n      promises.push(new PromiseCompat(resolver.bind({}, manifest, url)));\n    }.bind(this));\n    firstPromise(promises).then(resolve, function() {\n      reject('No resolvers to handle url: ' + JSON.stringify([manifest, url]));\n    });\n  }.bind(this));\n};\n\n/**\n * Register resolvers: code that knows how to get resources\n * needed by the runtime. A resolver will be called with four\n * arguments: the absolute manifest of the requester, the\n * resource being requested, and a resolve / reject pair to\n * fulfill a promise.\n * @method addResolver\n * @param {Function} resolver The resolver to add.\n */\nResource.prototype.addResolver = function (resolver) {\n  this.resolvers.push(resolver);\n};\n\n/**\n * Register retrievers: code that knows how to load resources\n * needed by the runtime. A retriever will be called with a URL\n * to retrieve with a protocol that it is able to handle.\n * @method addRetriever\n * @param {String} proto The protocol to register for.\n * @param {Function} retriever The retriever to add.\n */\nResource.prototype.addRetriever = function (proto, retriever) {\n  if (this.contentRetrievers[proto]) {\n    this.debug.warn(\"Unwilling to override file retrieval for \" + proto);\n    return;\n  }\n  this.contentRetrievers[proto] = retriever;\n};\n\n/**\n * Register external resolvers and retreavers\n * @method register\n * @param {{\"proto\":String, \"resolver\":Function, \"retreaver\":Function}[]}\n *     resolvers The list of retreivers and resolvers.\n */\nResource.prototype.register = function (resolvers) {\n  if (!resolvers.length) {\n    return;\n  }\n\n  resolvers.forEach(function (item) {\n    if (item.resolver) {\n      this.addResolver(item.resolver);\n    } else if (item.proto && item.retriever) {\n      this.addRetriever(item.proto, item.retriever);\n    }\n  }.bind(this));\n};\n\n/**\n * Determine if a URL is an absolute URL of a given Scheme.\n * @method hasScheme\n * @static\n * @private\n * @param {String[]} protocols Whitelisted protocols\n * @param {String} URL the URL to match.\n * @returns {Boolean} If the URL is an absolute example of one of the schemes.\n */\nResource.hasScheme = function (protocols, url) {\n  var i;\n  for (i = 0; i < protocols.length; i += 1) {\n    if (url.indexOf(protocols[i] + \"://\") === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Remove './' and '../' from a URL\n * Required because Chrome Apps for Mobile (cca) doesn't understand\n * XHR paths with these relative components in the URL.\n * @method removeRelativePath\n * @param {String} url The URL to modify\n * @returns {String} url without './' and '../'\n **/\nResource.removeRelativePath = function (url) {\n  var idx = url.indexOf(\"://\") + 3,\n    stack,\n    toRemove,\n    result;\n  // Remove all instances of /./\n  url = url.replace(/\\/\\.\\//g, \"/\");\n  //Weird bug where in cca, manifest starts with 'chrome:////'\n  //This forces there to only be 2 slashes\n  while (url.charAt(idx) === \"/\") {\n    url = url.slice(0, idx) + url.slice(idx + 1, url.length);\n  }\n\n  // Advance to next /\n  idx = url.indexOf(\"/\", idx);\n  // Removing ../\n  stack = url.substr(idx + 1).split(\"/\");\n  while (stack.indexOf(\"..\") !== -1) {\n    toRemove = stack.indexOf(\"..\");\n    if (toRemove === 0) {\n      stack.shift();\n    } else {\n      stack.splice((toRemove - 1), 2);\n    }\n  }\n  \n  //Rebuild string\n  result = url.substr(0, idx);\n  for (idx = 0; idx < stack.length; idx += 1) {\n    result += \"/\" + stack[idx];\n  }\n  return result;\n};\n\n/**\n * Resolve URLs which can be accessed using standard HTTP requests.\n * @method httpResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.httpResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"http\", \"https\", \"chrome\", \"chrome-extension\", \"resource\",\n                   \"app\"],\n    dirname,\n    protocolIdx,\n    pathIdx,\n    path,\n    base,\n    result;\n\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(Resource.removeRelativePath(url));\n    return true;\n  }\n  \n  if (!manifest) {\n    reject();\n    return false;\n  }\n  if (Resource.hasScheme(protocols, manifest) &&\n      url.indexOf(\"://\") === -1) {\n    dirname = manifest.substr(0, manifest.lastIndexOf(\"/\"));\n    protocolIdx = dirname.indexOf(\"://\");\n    pathIdx = protocolIdx + 3 + dirname.substr(protocolIdx + 3).indexOf(\"/\");\n    path = dirname.substr(pathIdx);\n    base = dirname.substr(0, pathIdx);\n    if (url.indexOf(\"/\") === 0) {\n      resolve(Resource.removeRelativePath(base + url));\n    } else {\n      resolve(Resource.removeRelativePath(base + path + \"/\" + url));\n    }\n    return true;\n  }\n  reject();\n};\n\n/**\n * Resolve URLs which are self-describing.\n * @method nullResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.nullResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"manifest\"];\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(url);\n    return true;\n  } else if (url.indexOf('data:') === 0) {\n    resolve(url);\n    return true;\n  }\n  reject();\n};\n\n/**\n * Retrieve manifest content from a self-descriptive manifest url.\n * These urls are used to reference a manifest without requiring subsequent,\n * potentially non-CORS requests.\n * @method manifestRetriever\n * @private\n * @param {String} manifest The Manifest URL\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.manifestRetriever = function (manifest, resolve, reject) {\n  var data;\n  try {\n    data = manifest.substr(11);\n    JSON.parse(data);\n    resolve(data);\n  } catch (e) {\n    this.debug.warn(\"Invalid manifest URL referenced:\" + manifest);\n    reject();\n  }\n};\n\n/**\n * Retrieve resource contents using an XHR request.\n * @method xhrRetriever\n * @private\n * @param {String} url The resource to fetch.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.xhrRetriever = function (url, resolve, reject) {\n  var ref = new XMLHttpRequest();\n  ref.addEventListener(\"readystatechange\", function (resolve, reject) {\n    if (ref.readyState === 4 && ref.responseText) {\n      resolve(ref.responseText);\n    } else if (ref.readyState === 4) {\n      this.debug.warn(\"Failed to load file \" + url + \": \" + ref.status);\n      reject(ref.status);\n    }\n  }.bind(this, resolve, reject), false);\n  ref.overrideMimeType(\"application/json\");\n  ref.open(\"GET\", url, true);\n  ref.send();\n};\n\nmodule.exports = Resource;\n","/*globals crypto, WebKitBlobBuilder, Blob, URL */\n/*globals webkitURL, Uint8Array, Uint16Array, ArrayBuffer */\n/*jslint indent:2,white:true,browser:true,node:true,sloppy:true */\n\n/**\n * Utility method used within the freedom Library.\n * @class util\n * @static\n */\nvar util = {};\n\n\n/**\n * Helper function for iterating over an array backwards. If the func\n * returns a true value, it will break out of the loop.\n * @method eachReverse\n * @static\n */\nutil.eachReverse = function(ary, func) {\n  if (ary) {\n    var i;\n    for (i = ary.length - 1; i > -1; i -= 1) {\n      if (ary[i] && func(ary[i], i, ary)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * @method hasProp\n * @static\n */\nutil.hasProp = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n/**\n * Cycles over properties in an object and calls a function for each\n * property value. If the function returns a truthy value, then the\n * iteration is stopped.\n * @method eachProp\n * @static\n */\nutil.eachProp = function(obj, func) {\n  var prop;\n  for (prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      if (func(obj[prop], prop)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Simple function to mix in properties from source into target,\n * but only if target does not already have a property of the same name.\n * This is not robust in IE for transferring methods that match\n * Object.prototype names, but the uses of mixin here seem unlikely to\n * trigger a problem related to that.\n * @method mixin\n * @static\n */\nutil.mixin = function(target, source, force) {\n  if (source) {\n    util.eachProp(source, function (value, prop) {\n      if (force || !util.hasProp(target, prop)) {\n        target[prop] = value;\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Get a unique ID.\n * @method getId\n * @static\n */\nutil.getId = function() {\n  var guid = 'guid',\n      domain = 12,\n      buffer;\n  // Chrome / Firefox.\n  if (typeof crypto === 'object' && crypto.getRandomValues) {\n    buffer = new Uint8Array(domain);\n    crypto.getRandomValues(buffer);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  // Node\n  } else if (typeof crypto === 'object' && crypto.randomBytes) {\n    buffer = crypto.randomBytes(domain);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  } else {\n    while (domain > 0) {\n      guid += '-' + Math.ceil(255 * Math.random());\n      domain -= 1;\n    }\n  }\n\n  return guid;\n};\n\n/**\n * Encode a string into a binary array buffer, by treating each character as a\n * utf16 encoded character - the native javascript encoding.\n * @method str2ab\n * @static\n * @param {String} str The string to encode.\n * @returns {ArrayBuffer} The encoded string.\n */\nutil.str2ab = function(str) {\n  var length = str.length,\n      buffer = new ArrayBuffer(length * 2), // 2 bytes for each char\n      bufferView = new Uint16Array(buffer),\n      i;\n  for (i = 0; i < length; i += 1) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n};\n\n/**\n * Convert an array buffer containing an encoded string back into a string.\n * @method ab2str\n * @static\n * @param {ArrayBuffer} buffer The buffer to unwrap.\n * @returns {String} The decoded buffer.\n */\nutil.ab2str = function(buffer) {\n  return String.fromCharCode.apply(null, new Uint16Array(buffer));\n};\n\n/**\n * Add 'on' and 'emit' methods to an object, which act as a light weight\n * event handling structure.\n * @class handleEvents\n * @static\n */\nutil.handleEvents = function(obj) {\n  var eventState = {\n    DEBUG_BACKREF: obj,\n    multiple: {},\n    maybemultiple: [],\n    single: {},\n    maybesingle: []\n  }, filter, push;\n\n  /**\n   * Filter a list based on a predicate. The list is filtered in place, with\n   * selected items removed and returned by the function.\n   * @method\n   * @param {Array} list The list to filter\n   * @param {Function} predicate The method to run on each item.\n   * @returns {Array} Selected items\n   */\n  filter = function(list, predicate) {\n    var ret = [], i;\n\n    if (!list || !list.length) {\n      return [];\n    }\n\n    for (i = list.length - 1; i >= 0; i -= 1) {\n      if (predicate(list[i])) {\n        ret.push(list.splice(i, 1));\n      }\n    }\n    return ret;\n  };\n\n  /**\n   * Enqueue a handler for a specific type.\n   * @method\n   * @param {String} to The queue ('single' or 'multiple') to queue on.\n   * @param {String} type The type of event to wait for.\n   * @param {Function} handler The handler to enqueue.\n   */\n  push = function(to, type, handler) {\n    if (typeof type === 'function') {\n      this['maybe' + to].push([type, handler]);\n    } else if (this[to][type]) {\n      this[to][type].push(handler);\n    } else {\n      this[to][type] = [handler];\n    }\n  };\n\n  /**\n   * Register a method to be executed when an event of a specific type occurs.\n   * @method on\n   * @param {String|Function} type The type of event to register against.\n   * @param {Function} handler The handler to run when the event occurs.\n   */\n  obj.on = push.bind(eventState, 'multiple');\n\n  /**\n   * Register a method to be execute the next time an event occurs.\n   * @method once\n   * @param {String|Function} type The type of event to wait for.\n   * @param {Function} handler The handler to run the next time a matching event\n   *     is raised.\n   */\n  obj.once = push.bind(eventState, 'single');\n\n  /**\n   * Emit an event on this object.\n   * @method emit\n   * @param {String} type The type of event to raise.\n   * @param {Object} data The payload of the event.\n   */\n  obj.emit = function(type, data) {\n    var i, queue;\n    // Note that registered handlers may stop events on the object, by calling\n    // this.off(). As such, the presence of these keys must be checked on each\n    // iteration of the relevant loops.\n    for (i = 0; this.multiple[type] &&\n         i < this.multiple[type].length; i += 1) {\n      if (this.multiple[type][i](data) === false) {\n        return;\n      }\n    }\n    if (this.single[type]) {\n      queue = this.single[type];\n      this.single[type] = [];\n      for (i = 0; i < queue.length; i += 1) {\n        queue[i](data);\n      }\n    }\n    for (i = 0; i < this.maybemultiple.length; i += 1) {\n      if (this.maybemultiple[i][0](type, data)) {\n        this.maybemultiple[i][1](data);\n      }\n    }\n    for (i = this.maybesingle.length - 1; i >= 0; i -= 1) {\n      if (this.maybesingle[i][0](type, data)) {\n        queue = this.maybesingle.splice(i, 1);\n        queue[0][1](data);\n      }\n    }\n  }.bind(eventState);\n\n  /**\n   * Remove an event handler\n   * @method off\n   * @param {String} type The type of event to remove.\n   * @param {Function?} handler The handler to remove.\n   */\n  obj.off = function(type, handler) {\n    if (!type) {\n      delete this.DEBUG_BACKREF;\n      this.multiple = {};\n      this.maybemultiple = [];\n      this.single = {};\n      this.maybesingle = [];\n      return;\n    }\n\n    if (typeof type === 'function') {\n      filter(this.maybesingle, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n      filter(this.maybemultiple, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n    }\n\n    if (!handler) {\n      delete this.multiple[type];\n      delete this.single[type];\n    } else {\n      filter(this.multiple[type], function(item) {\n        return item === handler;\n      });\n      filter(this.single[type], function(item) {\n        return item === handler;\n      });\n    }\n  }.bind(eventState);\n};\n\n/**\n * When run without a window, or specifically requested.\n * Note: Declaration can be redefined in forceModuleContext below.\n * @method isModuleContext\n * @for util\n * @static\n */\n/*!@preserve StartModuleContextDeclaration*/\nutil.isModuleContext = function() {\n  return (typeof document === 'undefined');\n};\n\n/**\n * Get a Blob object of a string.\n * Polyfills implementations which don't have a current Blob constructor, like\n * phantomjs.\n * @method getBlob\n * @static\n */\nutil.getBlob = function(data, type) {\n  if (typeof Blob !== 'function' && typeof WebKitBlobBuilder !== 'undefined') {\n    var builder = new WebKitBlobBuilder();\n    builder.append(data);\n    return builder.getBlob(type);\n  } else {\n    return new Blob([data], {type: type});\n  }\n};\n\n/**\n * Find all scripts on the given page.\n * @method scripts\n * @static\n */\nutil.scripts = function(global) {\n  return global.document.getElementsByTagName('script');\n};\n\nmodule.exports = util;\n","(function (global){\n/*jslint node:true*/\n\nvar providers = [\n  require('../../providers/core/core.unprivileged'),\n  require('../../providers/core/core.echo'),\n  require('../../providers/core/core.console'),\n  require('../../providers/core/core.peerconnection'),\n  require('../../providers/core/core.rtcpeerconnection'),\n  require('../../providers/core/core.rtcdatachannel'),\n  require('../../providers/core/core.storage'),\n  require('../../providers/core/core.view'),\n  require('../../providers/core/core.oauth'),\n  require('../../providers/core/core.websocket'),\n  require('../../providers/core/core.xhr')\n];\n\nfunction getFreedomScript() {\n  'use strict';\n  var script;\n  if (window.document.currentScript) {\n    // New browser API\n    script = window.document.currentScript.src;\n  } else if (document.readyState !== \"complete\" &&\n             document.readyState !== \"loaded\") {\n    // Included in HTML or through document.write\n    script = window.document.getElementsByTagName('script');\n    script = script[script.length - 1].src;\n  } else {\n    // Loaded through dom manipulation or async.\n    script = document.querySelector(\n      \"script[src*='freedom.js'],script[src*='freedom-']\"\n    );\n    if (script.length !== 1) {\n      console.error(\"Could not determine freedom.js script tag.\");\n    }\n    script = script[0].src;\n  }\n  return script;\n}\n\nif (typeof window !== 'undefined') {\n  window.freedom = require('../entry').bind({}, {\n    location: window.location.href,\n    portType: require('../link/worker'),\n    source: getFreedomScript(),\n    providers: providers,\n    oauth: [\n      require('../../providers/oauth/oauth.localpageauth'),\n      require('../../providers/oauth/oauth.remotepageauth')\n    ]\n  });\n} else {\n  require('../entry')({\n    isModule: true,\n    portType: require('../link/worker'),\n    providers: providers,\n    global: global\n  });\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})"]}